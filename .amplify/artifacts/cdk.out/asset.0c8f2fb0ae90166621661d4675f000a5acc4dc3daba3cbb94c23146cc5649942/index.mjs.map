{
  "version": 3,
  "sources": ["../../../../node_modules/@aws-amplify/backend-function/src/lambda-shims/cjs_shim.ts", "../../../../node_modules/tslib/tslib.es6.mjs", "../../../../node_modules/@aws-crypto/sha256-js/src/constants.ts", "../../../../node_modules/@aws-crypto/sha256-js/src/RawSha256.ts", "../../../../node_modules/@aws-crypto/util/node_modules/@smithy/is-array-buffer/dist-cjs/index.js", "../../../../node_modules/@aws-crypto/util/node_modules/@smithy/util-buffer-from/dist-cjs/index.js", "../../../../node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-cjs/index.js", "../../../../node_modules/@aws-crypto/util/src/convertToBuffer.ts", "../../../../node_modules/@aws-crypto/util/src/isEmptyData.ts", "../../../../node_modules/@aws-crypto/util/src/numToUint8.ts", "../../../../node_modules/@aws-crypto/util/src/uint32ArrayFrom.ts", "../../../../node_modules/@aws-crypto/util/src/index.ts", "../../../../node_modules/@aws-crypto/sha256-js/src/jsSha256.ts", "../../../../node_modules/@aws-crypto/sha256-js/src/index.ts", "../../../../node_modules/@aws-amplify/core/node_modules/@smithy/util-hex-encoding/dist-cjs/index.js", "../../../../node_modules/rxjs/src/internal/util/isFunction.ts", "../../../../node_modules/rxjs/src/internal/util/createErrorClass.ts", "../../../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts", "../../../../node_modules/rxjs/src/internal/util/arrRemove.ts", "../../../../node_modules/rxjs/src/internal/Subscription.ts", "../../../../node_modules/rxjs/src/internal/config.ts", "../../../../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts", "../../../../node_modules/rxjs/src/internal/util/reportUnhandledError.ts", "../../../../node_modules/rxjs/src/internal/util/noop.ts", "../../../../node_modules/rxjs/src/internal/NotificationFactories.ts", "../../../../node_modules/rxjs/src/internal/util/errorContext.ts", "../../../../node_modules/rxjs/src/internal/Subscriber.ts", "../../../../node_modules/rxjs/src/internal/symbol/observable.ts", "../../../../node_modules/rxjs/src/internal/util/identity.ts", "../../../../node_modules/rxjs/src/internal/util/pipe.ts", "../../../../node_modules/rxjs/src/internal/Observable.ts", "../../../../node_modules/rxjs/src/internal/util/lift.ts", "../../../../node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts", "../../../../node_modules/rxjs/src/internal/operators/refCount.ts", "../../../../node_modules/rxjs/src/internal/observable/ConnectableObservable.ts", "../../../../node_modules/rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../../../node_modules/rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../../../node_modules/rxjs/src/internal/observable/dom/animationFrames.ts", "../../../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../../../node_modules/rxjs/src/internal/Subject.ts", "../../../../node_modules/rxjs/src/internal/BehaviorSubject.ts", "../../../../node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../../../node_modules/rxjs/src/internal/ReplaySubject.ts", "../../../../node_modules/rxjs/src/internal/AsyncSubject.ts", "../../../../node_modules/rxjs/src/internal/scheduler/Action.ts", "../../../../node_modules/rxjs/src/internal/scheduler/intervalProvider.ts", "../../../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts", "../../../../node_modules/rxjs/src/internal/util/Immediate.ts", "../../../../node_modules/rxjs/src/internal/scheduler/immediateProvider.ts", "../../../../node_modules/rxjs/src/internal/scheduler/AsapAction.ts", "../../../../node_modules/rxjs/src/internal/Scheduler.ts", "../../../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../../../node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts", "../../../../node_modules/rxjs/src/internal/scheduler/asap.ts", "../../../../node_modules/rxjs/src/internal/scheduler/async.ts", "../../../../node_modules/rxjs/src/internal/scheduler/QueueAction.ts", "../../../../node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts", "../../../../node_modules/rxjs/src/internal/scheduler/queue.ts", "../../../../node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts", "../../../../node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts", "../../../../node_modules/rxjs/src/internal/scheduler/animationFrame.ts", "../../../../node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../../../node_modules/rxjs/src/internal/observable/empty.ts", "../../../../node_modules/rxjs/src/internal/util/isScheduler.ts", "../../../../node_modules/rxjs/src/internal/util/args.ts", "../../../../node_modules/rxjs/src/internal/util/isArrayLike.ts", "../../../../node_modules/rxjs/src/internal/util/isPromise.ts", "../../../../node_modules/rxjs/src/internal/util/isInteropObservable.ts", "../../../../node_modules/rxjs/src/internal/util/isAsyncIterable.ts", "../../../../node_modules/rxjs/src/internal/util/throwUnobservableError.ts", "../../../../node_modules/rxjs/src/internal/symbol/iterator.ts", "../../../../node_modules/rxjs/src/internal/util/isIterable.ts", "../../../../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts", "../../../../node_modules/rxjs/src/internal/observable/innerFrom.ts", "../../../../node_modules/rxjs/src/internal/util/executeSchedule.ts", "../../../../node_modules/rxjs/src/internal/operators/observeOn.ts", "../../../../node_modules/rxjs/src/internal/operators/subscribeOn.ts", "../../../../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts", "../../../../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts", "../../../../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts", "../../../../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts", "../../../../node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../../../node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../../../node_modules/rxjs/src/internal/scheduled/scheduled.ts", "../../../../node_modules/rxjs/src/internal/observable/from.ts", "../../../../node_modules/rxjs/src/internal/observable/of.ts", "../../../../node_modules/rxjs/src/internal/observable/throwError.ts", "../../../../node_modules/rxjs/src/internal/Notification.ts", "../../../../node_modules/rxjs/src/internal/util/isObservable.ts", "../../../../node_modules/rxjs/src/internal/util/EmptyError.ts", "../../../../node_modules/rxjs/src/internal/lastValueFrom.ts", "../../../../node_modules/rxjs/src/internal/firstValueFrom.ts", "../../../../node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts", "../../../../node_modules/rxjs/src/internal/util/NotFoundError.ts", "../../../../node_modules/rxjs/src/internal/util/SequenceError.ts", "../../../../node_modules/rxjs/src/internal/util/isDate.ts", "../../../../node_modules/rxjs/src/internal/operators/timeout.ts", "../../../../node_modules/rxjs/src/internal/operators/map.ts", "../../../../node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../../../node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts", "../../../../node_modules/rxjs/src/internal/observable/bindCallback.ts", "../../../../node_modules/rxjs/src/internal/observable/bindNodeCallback.ts", "../../../../node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts", "../../../../node_modules/rxjs/src/internal/util/createObject.ts", "../../../../node_modules/rxjs/src/internal/observable/combineLatest.ts", "../../../../node_modules/rxjs/src/internal/operators/mergeInternals.ts", "../../../../node_modules/rxjs/src/internal/operators/mergeMap.ts", "../../../../node_modules/rxjs/src/internal/operators/mergeAll.ts", "../../../../node_modules/rxjs/src/internal/operators/concatAll.ts", "../../../../node_modules/rxjs/src/internal/observable/concat.ts", "../../../../node_modules/rxjs/src/internal/observable/defer.ts", "../../../../node_modules/rxjs/src/internal/observable/connectable.ts", "../../../../node_modules/rxjs/src/internal/observable/forkJoin.ts", "../../../../node_modules/rxjs/src/internal/observable/fromEvent.ts", "../../../../node_modules/rxjs/src/internal/observable/fromEventPattern.ts", "../../../../node_modules/rxjs/src/internal/observable/generate.ts", "../../../../node_modules/rxjs/src/internal/observable/iif.ts", "../../../../node_modules/rxjs/src/internal/observable/timer.ts", "../../../../node_modules/rxjs/src/internal/observable/interval.ts", "../../../../node_modules/rxjs/src/internal/observable/merge.ts", "../../../../node_modules/rxjs/src/internal/observable/never.ts", "../../../../node_modules/rxjs/src/internal/util/argsOrArgArray.ts", "../../../../node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts", "../../../../node_modules/rxjs/src/internal/observable/pairs.ts", "../../../../node_modules/rxjs/src/internal/util/not.ts", "../../../../node_modules/rxjs/src/internal/operators/filter.ts", "../../../../node_modules/rxjs/src/internal/observable/partition.ts", "../../../../node_modules/rxjs/src/internal/observable/race.ts", "../../../../node_modules/rxjs/src/internal/observable/range.ts", "../../../../node_modules/rxjs/src/internal/observable/using.ts", "../../../../node_modules/rxjs/src/internal/observable/zip.ts", "../../../../node_modules/rxjs/dist/cjs/internal/types.js", "../../../../node_modules/rxjs/src/internal/operators/audit.ts", "../../../../node_modules/rxjs/src/internal/operators/auditTime.ts", "../../../../node_modules/rxjs/src/internal/operators/buffer.ts", "../../../../node_modules/rxjs/src/internal/operators/bufferCount.ts", "../../../../node_modules/rxjs/src/internal/operators/bufferTime.ts", "../../../../node_modules/rxjs/src/internal/operators/bufferToggle.ts", "../../../../node_modules/rxjs/src/internal/operators/bufferWhen.ts", "../../../../node_modules/rxjs/src/internal/operators/catchError.ts", "../../../../node_modules/rxjs/src/internal/operators/scanInternals.ts", "../../../../node_modules/rxjs/src/internal/operators/reduce.ts", "../../../../node_modules/rxjs/src/internal/operators/toArray.ts", "../../../../node_modules/rxjs/src/internal/operators/joinAllInternals.ts", "../../../../node_modules/rxjs/src/internal/operators/combineLatestAll.ts", "../../../../node_modules/rxjs/src/internal/operators/combineAll.ts", "../../../../node_modules/rxjs/src/internal/operators/combineLatest.ts", "../../../../node_modules/rxjs/src/internal/operators/combineLatestWith.ts", "../../../../node_modules/rxjs/src/internal/operators/concatMap.ts", "../../../../node_modules/rxjs/src/internal/operators/concatMapTo.ts", "../../../../node_modules/rxjs/src/internal/operators/concat.ts", "../../../../node_modules/rxjs/src/internal/operators/concatWith.ts", "../../../../node_modules/rxjs/src/internal/observable/fromSubscribable.ts", "../../../../node_modules/rxjs/src/internal/operators/connect.ts", "../../../../node_modules/rxjs/src/internal/operators/count.ts", "../../../../node_modules/rxjs/src/internal/operators/debounce.ts", "../../../../node_modules/rxjs/src/internal/operators/debounceTime.ts", "../../../../node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts", "../../../../node_modules/rxjs/src/internal/operators/take.ts", "../../../../node_modules/rxjs/src/internal/operators/ignoreElements.ts", "../../../../node_modules/rxjs/src/internal/operators/mapTo.ts", "../../../../node_modules/rxjs/src/internal/operators/delayWhen.ts", "../../../../node_modules/rxjs/src/internal/operators/delay.ts", "../../../../node_modules/rxjs/src/internal/operators/dematerialize.ts", "../../../../node_modules/rxjs/src/internal/operators/distinct.ts", "../../../../node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts", "../../../../node_modules/rxjs/src/internal/operators/distinctUntilKeyChanged.ts", "../../../../node_modules/rxjs/src/internal/operators/throwIfEmpty.ts", "../../../../node_modules/rxjs/src/internal/operators/elementAt.ts", "../../../../node_modules/rxjs/src/internal/operators/endWith.ts", "../../../../node_modules/rxjs/src/internal/operators/every.ts", "../../../../node_modules/rxjs/src/internal/operators/exhaustMap.ts", "../../../../node_modules/rxjs/src/internal/operators/exhaustAll.ts", "../../../../node_modules/rxjs/src/internal/operators/exhaust.ts", "../../../../node_modules/rxjs/src/internal/operators/expand.ts", "../../../../node_modules/rxjs/src/internal/operators/finalize.ts", "../../../../node_modules/rxjs/src/internal/operators/find.ts", "../../../../node_modules/rxjs/src/internal/operators/findIndex.ts", "../../../../node_modules/rxjs/src/internal/operators/first.ts", "../../../../node_modules/rxjs/src/internal/operators/groupBy.ts", "../../../../node_modules/rxjs/src/internal/operators/isEmpty.ts", "../../../../node_modules/rxjs/src/internal/operators/takeLast.ts", "../../../../node_modules/rxjs/src/internal/operators/last.ts", "../../../../node_modules/rxjs/src/internal/operators/materialize.ts", "../../../../node_modules/rxjs/src/internal/operators/max.ts", "../../../../node_modules/rxjs/src/internal/operators/flatMap.ts", "../../../../node_modules/rxjs/src/internal/operators/mergeMapTo.ts", "../../../../node_modules/rxjs/src/internal/operators/mergeScan.ts", "../../../../node_modules/rxjs/src/internal/operators/merge.ts", "../../../../node_modules/rxjs/src/internal/operators/mergeWith.ts", "../../../../node_modules/rxjs/src/internal/operators/min.ts", "../../../../node_modules/rxjs/src/internal/operators/multicast.ts", "../../../../node_modules/rxjs/src/internal/operators/onErrorResumeNextWith.ts", "../../../../node_modules/rxjs/src/internal/operators/pairwise.ts", "../../../../node_modules/rxjs/src/internal/operators/pluck.ts", "../../../../node_modules/rxjs/src/internal/operators/publish.ts", "../../../../node_modules/rxjs/src/internal/operators/publishBehavior.ts", "../../../../node_modules/rxjs/src/internal/operators/publishLast.ts", "../../../../node_modules/rxjs/src/internal/operators/publishReplay.ts", "../../../../node_modules/rxjs/src/internal/operators/raceWith.ts", "../../../../node_modules/rxjs/src/internal/operators/repeat.ts", "../../../../node_modules/rxjs/src/internal/operators/repeatWhen.ts", "../../../../node_modules/rxjs/src/internal/operators/retry.ts", "../../../../node_modules/rxjs/src/internal/operators/retryWhen.ts", "../../../../node_modules/rxjs/src/internal/operators/sample.ts", "../../../../node_modules/rxjs/src/internal/operators/sampleTime.ts", "../../../../node_modules/rxjs/src/internal/operators/scan.ts", "../../../../node_modules/rxjs/src/internal/operators/sequenceEqual.ts", "../../../../node_modules/rxjs/src/internal/operators/share.ts", "../../../../node_modules/rxjs/src/internal/operators/shareReplay.ts", "../../../../node_modules/rxjs/src/internal/operators/single.ts", "../../../../node_modules/rxjs/src/internal/operators/skip.ts", "../../../../node_modules/rxjs/src/internal/operators/skipLast.ts", "../../../../node_modules/rxjs/src/internal/operators/skipUntil.ts", "../../../../node_modules/rxjs/src/internal/operators/skipWhile.ts", "../../../../node_modules/rxjs/src/internal/operators/startWith.ts", "../../../../node_modules/rxjs/src/internal/operators/switchMap.ts", "../../../../node_modules/rxjs/src/internal/operators/switchAll.ts", "../../../../node_modules/rxjs/src/internal/operators/switchMapTo.ts", "../../../../node_modules/rxjs/src/internal/operators/switchScan.ts", "../../../../node_modules/rxjs/src/internal/operators/takeUntil.ts", "../../../../node_modules/rxjs/src/internal/operators/takeWhile.ts", "../../../../node_modules/rxjs/src/internal/operators/tap.ts", "../../../../node_modules/rxjs/src/internal/operators/throttle.ts", "../../../../node_modules/rxjs/src/internal/operators/throttleTime.ts", "../../../../node_modules/rxjs/src/internal/operators/timeInterval.ts", "../../../../node_modules/rxjs/src/internal/operators/timeoutWith.ts", "../../../../node_modules/rxjs/src/internal/operators/timestamp.ts", "../../../../node_modules/rxjs/src/internal/operators/window.ts", "../../../../node_modules/rxjs/src/internal/operators/windowCount.ts", "../../../../node_modules/rxjs/src/internal/operators/windowTime.ts", "../../../../node_modules/rxjs/src/internal/operators/windowToggle.ts", "../../../../node_modules/rxjs/src/internal/operators/windowWhen.ts", "../../../../node_modules/rxjs/src/internal/operators/withLatestFrom.ts", "../../../../node_modules/rxjs/src/internal/operators/zipAll.ts", "../../../../node_modules/rxjs/src/internal/operators/zip.ts", "../../../../node_modules/rxjs/src/internal/operators/zipWith.ts", "../../../../node_modules/rxjs/src/index.ts", "../../../../node_modules/graphql/version.js", "../../../../node_modules/graphql/jsutils/isPromise.js", "../../../../node_modules/graphql/jsutils/isObjectLike.js", "../../../../node_modules/graphql/polyfills/symbols.js", "../../../../node_modules/graphql/language/location.js", "../../../../node_modules/graphql/language/printLocation.js", "../../../../node_modules/graphql/error/GraphQLError.js", "../../../../node_modules/graphql/error/syntaxError.js", "../../../../node_modules/graphql/language/kinds.js", "../../../../node_modules/graphql/jsutils/invariant.js", "../../../../node_modules/graphql/jsutils/nodejsCustomInspectSymbol.js", "../../../../node_modules/graphql/jsutils/defineInspect.js", "../../../../node_modules/graphql/language/ast.js", "../../../../node_modules/graphql/language/tokenKind.js", "../../../../node_modules/graphql/jsutils/inspect.js", "../../../../node_modules/graphql/jsutils/devAssert.js", "../../../../node_modules/graphql/jsutils/instanceOf.js", "../../../../node_modules/graphql/language/source.js", "../../../../node_modules/graphql/language/directiveLocation.js", "../../../../node_modules/graphql/language/blockString.js", "../../../../node_modules/graphql/language/lexer.js", "../../../../node_modules/graphql/language/parser.js", "../../../../node_modules/graphql/language/visitor.js", "../../../../node_modules/graphql/polyfills/find.js", "../../../../node_modules/graphql/polyfills/objectValues.js", "../../../../node_modules/graphql/error/locatedError.js", "../../../../node_modules/graphql/utilities/assertValidName.js", "../../../../node_modules/graphql/polyfills/objectEntries.js", "../../../../node_modules/graphql/jsutils/keyMap.js", "../../../../node_modules/graphql/jsutils/mapValue.js", "../../../../node_modules/graphql/jsutils/toObjMap.js", "../../../../node_modules/graphql/jsutils/keyValMap.js", "../../../../node_modules/graphql/jsutils/didYouMean.js", "../../../../node_modules/graphql/jsutils/identityFunc.js", "../../../../node_modules/graphql/jsutils/naturalCompare.js", "../../../../node_modules/graphql/jsutils/suggestionList.js", "../../../../node_modules/graphql/language/printer.js", "../../../../node_modules/graphql/utilities/valueFromASTUntyped.js", "../../../../node_modules/graphql/type/definition.js", "../../../../node_modules/graphql/utilities/typeComparators.js", "../../../../node_modules/graphql/polyfills/arrayFrom.js", "../../../../node_modules/graphql/polyfills/isFinite.js", "../../../../node_modules/graphql/jsutils/safeArrayFrom.js", "../../../../node_modules/graphql/polyfills/isInteger.js", "../../../../node_modules/graphql/type/scalars.js", "../../../../node_modules/graphql/utilities/astFromValue.js", "../../../../node_modules/graphql/type/introspection.js", "../../../../node_modules/graphql/type/directives.js", "../../../../node_modules/graphql/type/schema.js", "../../../../node_modules/graphql/type/validate.js", "../../../../node_modules/graphql/utilities/typeFromAST.js", "../../../../node_modules/graphql/utilities/TypeInfo.js", "../../../../node_modules/graphql/language/predicates.js", "../../../../node_modules/graphql/validation/rules/ExecutableDefinitionsRule.js", "../../../../node_modules/graphql/validation/rules/UniqueOperationNamesRule.js", "../../../../node_modules/graphql/validation/rules/LoneAnonymousOperationRule.js", "../../../../node_modules/graphql/validation/rules/SingleFieldSubscriptionsRule.js", "../../../../node_modules/graphql/validation/rules/KnownTypeNamesRule.js", "../../../../node_modules/graphql/validation/rules/FragmentsOnCompositeTypesRule.js", "../../../../node_modules/graphql/validation/rules/VariablesAreInputTypesRule.js", "../../../../node_modules/graphql/validation/rules/ScalarLeafsRule.js", "../../../../node_modules/graphql/validation/rules/FieldsOnCorrectTypeRule.js", "../../../../node_modules/graphql/validation/rules/UniqueFragmentNamesRule.js", "../../../../node_modules/graphql/validation/rules/KnownFragmentNamesRule.js", "../../../../node_modules/graphql/validation/rules/NoUnusedFragmentsRule.js", "../../../../node_modules/graphql/validation/rules/PossibleFragmentSpreadsRule.js", "../../../../node_modules/graphql/validation/rules/NoFragmentCyclesRule.js", "../../../../node_modules/graphql/validation/rules/UniqueVariableNamesRule.js", "../../../../node_modules/graphql/validation/rules/NoUndefinedVariablesRule.js", "../../../../node_modules/graphql/validation/rules/NoUnusedVariablesRule.js", "../../../../node_modules/graphql/validation/rules/KnownDirectivesRule.js", "../../../../node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.js", "../../../../node_modules/graphql/validation/rules/KnownArgumentNamesRule.js", "../../../../node_modules/graphql/validation/rules/UniqueArgumentNamesRule.js", "../../../../node_modules/graphql/validation/rules/ValuesOfCorrectTypeRule.js", "../../../../node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.js", "../../../../node_modules/graphql/validation/rules/VariablesInAllowedPositionRule.js", "../../../../node_modules/graphql/validation/rules/OverlappingFieldsCanBeMergedRule.js", "../../../../node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.js", "../../../../node_modules/graphql/validation/rules/LoneSchemaDefinitionRule.js", "../../../../node_modules/graphql/validation/rules/UniqueOperationTypesRule.js", "../../../../node_modules/graphql/validation/rules/UniqueTypeNamesRule.js", "../../../../node_modules/graphql/validation/rules/UniqueEnumValueNamesRule.js", "../../../../node_modules/graphql/validation/rules/UniqueFieldDefinitionNamesRule.js", "../../../../node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.js", "../../../../node_modules/graphql/validation/rules/PossibleTypeExtensionsRule.js", "../../../../node_modules/graphql/validation/specifiedRules.js", "../../../../node_modules/graphql/validation/ValidationContext.js", "../../../../node_modules/graphql/validation/validate.js", "../../../../node_modules/graphql/jsutils/memoize3.js", "../../../../node_modules/graphql/jsutils/promiseReduce.js", "../../../../node_modules/graphql/jsutils/promiseForObject.js", "../../../../node_modules/graphql/jsutils/Path.js", "../../../../node_modules/graphql/utilities/getOperationRootType.js", "../../../../node_modules/graphql/jsutils/printPathArray.js", "../../../../node_modules/graphql/utilities/valueFromAST.js", "../../../../node_modules/graphql/utilities/coerceInputValue.js", "../../../../node_modules/graphql/execution/values.js", "../../../../node_modules/graphql/execution/execute.js", "../../../../node_modules/graphql/graphql.js", "../../../../node_modules/graphql/type/index.js", "../../../../node_modules/graphql/language/index.js", "../../../../node_modules/graphql/execution/index.js", "../../../../node_modules/graphql/jsutils/isAsyncIterable.js", "../../../../node_modules/graphql/subscription/mapAsyncIterator.js", "../../../../node_modules/graphql/subscription/subscribe.js", "../../../../node_modules/graphql/subscription/index.js", "../../../../node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.js", "../../../../node_modules/graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.js", "../../../../node_modules/graphql/validation/index.js", "../../../../node_modules/graphql/error/formatError.js", "../../../../node_modules/graphql/error/index.js", "../../../../node_modules/graphql/utilities/getIntrospectionQuery.js", "../../../../node_modules/graphql/utilities/getOperationAST.js", "../../../../node_modules/graphql/utilities/introspectionFromSchema.js", "../../../../node_modules/graphql/utilities/buildClientSchema.js", "../../../../node_modules/graphql/utilities/extendSchema.js", "../../../../node_modules/graphql/utilities/buildASTSchema.js", "../../../../node_modules/graphql/utilities/lexicographicSortSchema.js", "../../../../node_modules/graphql/utilities/printSchema.js", "../../../../node_modules/graphql/utilities/concatAST.js", "../../../../node_modules/graphql/utilities/separateOperations.js", "../../../../node_modules/graphql/utilities/stripIgnoredCharacters.js", "../../../../node_modules/graphql/utilities/findBreakingChanges.js", "../../../../node_modules/graphql/utilities/findDeprecatedUsages.js", "../../../../node_modules/graphql/utilities/index.js", "../../../../node_modules/graphql/index.js", "../../../../amplify/functions/processImages/handler.mjs", "../../../../amplify/functions/processImages/graphql/mutations.ts", "../../../../node_modules/aws-amplify/dist/esm/index.mjs", "../../../../node_modules/@aws-amplify/core/dist/esm/index.mjs", "../../../../node_modules/@aws-amplify/core/src/constants.ts", "../../../../node_modules/@aws-amplify/core/src/Logger/types.ts", "../../../../node_modules/@aws-amplify/core/src/Logger/ConsoleLogger.ts", "../../../../node_modules/@aws-amplify/core/src/errors/AmplifyError.ts", "../../../../node_modules/@aws-amplify/core/src/types/errors.ts", "../../../../node_modules/@aws-amplify/core/src/errors/createAssertionFunction.ts", "../../../../node_modules/@aws-amplify/core/src/Hub/index.ts", "../../../../node_modules/@aws-amplify/core/src/utils/globalHelpers/index.ts", "../../../../node_modules/@aws-amplify/core/src/utils/convert/base64/base64Decoder.ts", "../../../../node_modules/@aws-amplify/core/src/singleton/Auth/utils/errorHelpers.ts", "../../../../node_modules/@aws-amplify/core/src/singleton/Auth/utils/index.ts", "../../../../node_modules/@aws-amplify/core/src/utils/retry/isNonRetryableError.ts", "../../../../node_modules/@aws-amplify/core/src/utils/retry/retry.ts", "../../../../node_modules/@aws-amplify/core/src/utils/deepFreeze.ts", "../../../../node_modules/@aws-amplify/core/src/parseAWSExports.ts", "../../../../node_modules/@aws-amplify/core/src/singleton/constants.ts", "../../../../node_modules/uuid/dist/esm-node/index.js", "../../../../node_modules/uuid/dist/esm-node/rng.js", "../../../../node_modules/uuid/dist/esm-node/stringify.js", "../../../../node_modules/uuid/dist/esm-node/v4.js", "../../../../node_modules/uuid/dist/esm-node/native.js", "../../../../node_modules/@aws-amplify/core/src/parseAmplifyOutputs.ts", "../../../../node_modules/@aws-amplify/core/src/utils/parseAmplifyConfig.ts", "../../../../node_modules/@aws-amplify/core/src/singleton/Auth/index.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/types.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detection/helpers.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detection/React.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detection/Vue.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detection/Svelte.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detection/Next.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detection/Nuxt.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detection/Angular.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detection/ReactNative.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detection/Expo.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detection/Web.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detection/index.ts", "../../../../node_modules/@aws-amplify/core/src/utils/isWebWorker.ts", "../../../../node_modules/@aws-amplify/core/src/Reachability/Reachability.ts", "../../../../node_modules/@aws-amplify/core/src/utils/isBrowser.ts", "../../../../node_modules/@aws-amplify/core/src/singleton/Amplify.ts", "../../../../node_modules/@aws-amplify/core/src/singleton/apis/internal/fetchAuthSession.ts", "../../../../node_modules/@aws-amplify/core/src/singleton/apis/fetchAuthSession.ts", "../../../../node_modules/@aws-amplify/core/src/clients/serde/responseInfo.ts", "../../../../node_modules/@aws-amplify/core/src/clients/serde/json.ts", "../../../../node_modules/@aws-amplify/core/src/clients/internal/composeServiceApi.ts", "../../../../node_modules/@aws-amplify/core/src/clients/endpoints/partitions.ts", "../../../../node_modules/@aws-amplify/core/src/clients/endpoints/getDnsSuffix.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/retry/middleware.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/userAgent/middleware.ts", "../../../../node_modules/@aws-amplify/core/src/clients/internal/composeTransferHandler.ts", "../../../../node_modules/@aws-amplify/core/src/clients/utils/memoization.ts", "../../../../node_modules/@aws-amplify/core/src/clients/handlers/fetch.ts", "../../../../node_modules/@aws-amplify/core/src/clients/handlers/unauthenticated.ts", "../../../../node_modules/@aws-amplify/core/src/utils/retry/jitteredBackoff.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/retry/jitteredBackoff.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/retry/isClockSkewError.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/retry/defaultRetryDecider.ts", "../../../../node_modules/@aws-amplify/core/src/utils/amplifyUrl/index.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/version.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/detectFramework.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/customUserAgent.ts", "../../../../node_modules/@aws-amplify/core/src/Platform/index.ts", "../../../../node_modules/@aws-amplify/core/src/awsClients/cognitoIdentity/base.ts", "../../../../node_modules/@aws-amplify/core/src/awsClients/cognitoIdentity/getId.ts", "../../../../node_modules/@aws-amplify/core/src/awsClients/cognitoIdentity/getCredentialsForIdentity.ts", "../../../../node_modules/@aws-amplify/core/src/errors/PlatformNotSupportedError.ts", "../../../../node_modules/@aws-amplify/core/src/storage/KeyValueStorage.ts", "../../../../node_modules/@aws-amplify/core/src/storage/InMemoryStorage.ts", "../../../../node_modules/@aws-amplify/core/src/storage/utils.ts", "../../../../node_modules/@aws-amplify/core/src/storage/DefaultStorage.ts", "../../../../node_modules/@aws-amplify/core/src/storage/SessionStorage.ts", "../../../../node_modules/js-cookie/dist/js.cookie.mjs", "../../../../node_modules/@aws-amplify/core/src/storage/CookieStorage.ts", "../../../../node_modules/@aws-amplify/core/src/storage/index.ts", "../../../../node_modules/@aws-amplify/core/src/Cache/constants.ts", "../../../../node_modules/@aws-amplify/core/src/Cache/utils/cacheHelpers.ts", "../../../../node_modules/@aws-amplify/core/src/Cache/utils/errorHelpers.ts", "../../../../node_modules/@aws-amplify/core/src/Cache/StorageCacheCommon.ts", "../../../../node_modules/@aws-amplify/core/src/Cache/StorageCache.ts", "../../../../node_modules/@aws-amplify/core/src/Cache/index.ts", "../../../../node_modules/@aws-amplify/core/src/I18n/I18n.ts", "../../../../node_modules/@aws-amplify/core/src/I18n/errorHelpers.ts", "../../../../node_modules/@aws-amplify/core/src/I18n/index.ts", "../../../../node_modules/@aws-amplify/core/src/utils/amplifyUuid/index.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getSignedHeaders.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/constants.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getCredentialScope.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getFormattedDates.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getSigningValues.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/dataHashHelpers.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getCanonicalHeaders.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getCanonicalQueryString.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getCanonicalUri.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getHashedPayload.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getCanonicalRequest.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getSigningKey.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getStringToSign.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/utils/getSignature.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/signer/signatureV4/signRequest.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/utils/getSkewCorrectedDate.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/utils/isClockSkewed.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/utils/getUpdatedSystemClockOffset.ts", "../../../../node_modules/@aws-amplify/core/src/clients/middleware/signing/middleware.ts", "../../../../node_modules/@aws-amplify/core/src/clients/handlers/authenticated.ts", "../../../../node_modules/@aws-amplify/core/dist/esm/libraryUtils.mjs", "../../../../node_modules/@aws-amplify/core/src/utils/retry/NonRetryableError.ts", "../../../../node_modules/@aws-amplify/core/src/utils/retry/jitteredExponentialRetry.ts", "../../../../node_modules/@aws-amplify/core/src/utils/urlSafeDecode.ts", "../../../../node_modules/@aws-amplify/core/src/utils/deDupeAsyncFunction.ts", "../../../../node_modules/@aws-amplify/core/src/errors/APIError.ts", "../../../../node_modules/@aws-amplify/core/src/utils/convert/base64/bytesToString.ts", "../../../../node_modules/@aws-amplify/core/src/utils/convert/base64/base64Encoder.ts", "../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/index.mjs", "../../../../node_modules/@aws-amplify/core/dist/esm/clients/internal/index.mjs", "../../../../node_modules/@aws-amplify/core/dist/esm/clients/index.mjs", "../../../../node_modules/@aws-amplify/auth/src/errors/AuthError.ts", "../../../../node_modules/@aws-amplify/auth/src/errors/utils/assertServiceError.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/clients/CognitoIdentityProvider/base.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/clients/CognitoIdentityProvider/index.ts", "../../../../node_modules/@aws-amplify/auth/src/errors/types/validation.ts", "../../../../node_modules/@aws-amplify/auth/src/common/AuthErrorStrings.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/clients/CognitoIdentityProvider/utils.ts", "../../../../node_modules/@aws-amplify/auth/src/errors/constants.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/types.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/apis/internal/getCurrentUser.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/apis/getCurrentUser.ts", "../../../../node_modules/@aws-amplify/auth/src/utils/getAuthUserAgentValue.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/userContextData.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/refreshAuthTokens.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/types.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/errorHelpers.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/TokenStore.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/signInWithRedirectStore.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/oAuthStore.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/inflightPromise.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/TokenOrchestrator.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/CognitoUserPoolsTokenProvider.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/tokenProvider.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/cacheTokens.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/dispatchSignedInHubEvent.ts", "../../../../node_modules/@aws-amplify/auth/src/Errors.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/createOAuthError.ts", "../../../../node_modules/@aws-amplify/auth/src/types/Auth.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/validateState.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/completeOAuthFlow.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/getRedirectUrl.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/handleFailure.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/attemptCompleteOAuthFlow.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/enableOAuthListener.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/types.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/IdentityIdStore.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/utils.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/IdentityIdProvider.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/credentialsProvider.ts", "../../../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/index.ts", "../../../../node_modules/aws-amplify/src/initSingleton.ts", "../../../generated/env/processImages.ts", "../../../../node_modules/@aws-amplify/api/dist/esm/index.mjs", "../../../../node_modules/@aws-amplify/api-graphql/dist/esm/internals/index.mjs", "../../../../node_modules/@aws-amplify/api-rest/dist/esm/index.mjs", "../../../../node_modules/@aws-amplify/api-rest/src/errors/RestApiError.ts", "../../../../node_modules/@aws-amplify/api-rest/src/errors/CanceledError.ts", "../../../../node_modules/@aws-amplify/api-rest/src/errors/validation.ts", "../../../../node_modules/@aws-amplify/api-rest/src/utils/serviceError.ts", "../../../../node_modules/@aws-amplify/api-rest/src/utils/logger.ts", "../../../../node_modules/@aws-amplify/api-rest/src/utils/createCancellableOperation.ts", "../../../../node_modules/@aws-amplify/api-rest/src/utils/constants.ts", "../../../../node_modules/@aws-amplify/api-rest/src/utils/parseSigningInfo.ts", "../../../../node_modules/@aws-amplify/api-rest/src/utils/isIamAuthApplicable.ts", "../../../../node_modules/@aws-amplify/api-rest/src/utils/resolveHeaders.ts", "../../../../node_modules/@aws-amplify/api-rest/src/apis/common/handler.ts", "../../../../node_modules/@aws-amplify/api-rest/dist/esm/internals/index.mjs", "../../../../node_modules/@aws-amplify/api-rest/src/apis/common/internalPost.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/types/PubSub.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/Providers/constants.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/utils/ReachabilityMonitor/index.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/utils/ConnectionStateMonitor.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/utils/ReconnectionMonitor.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/Providers/AWSAppSyncRealTimeProvider/index.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/utils/errors/GraphQLApiError.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/utils/errors/validation.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/utils/errors/assertValidationError.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/utils/resolveConfig.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/utils/resolveLibraryOptions.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/utils/errors/repackageAuthError.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/types/index.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/utils/errors/constants.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/utils/errors/createGraphQLResultWithError.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/internals/utils/runtimeTypeGuards/isGraphQLResponseWithErrors.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/internals/InternalGraphQLAPI.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/GraphQLAPI.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/internals/v6.ts", "../../../../node_modules/@aws-amplify/data-schema/dist/esm/runtime/index.mjs", "../../../../node_modules/@aws-amplify/data-schema-types/dist/esm/index.mjs", "../../../../node_modules/@aws-amplify/data-schema-types/src/client/symbol.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/utils/resolveOwnerFields.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/utils/stringTransformation.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/APIClient.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/operations/utils.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/operations/custom.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/generateCustomOperationsProperty.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/utils/clientProperties/generateEnumsProperty.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/operations/list.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/operations/indexQuery.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/operations/get.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/operations/subscription.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/utils/resolvePKFields.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/utils/findIndexByFields.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/operations/observeQuery.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/clientUtils.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/utils/clientProperties/generateModelsProperty.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/addSchemaToClient.ts", "../../../../node_modules/@aws-amplify/data-schema/src/runtime/internals/utils/runtimeTypeGuards/isApiGraphQLProviderConfig.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/internals/utils/runtimeTypeGuards/isApiGraphQLProviderConfig.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/internals/utils/runtimeTypeGuards/isConfigureEventWithResourceConfig.ts", "../../../../node_modules/@aws-amplify/api-graphql/src/internals/generateClient.ts", "../../../../node_modules/@aws-amplify/api/src/API.ts"],
  "sourcesContent": ["import { createRequire } from 'node:module';\nimport path from 'node:path';\nimport url from 'node:url';\nglobal.require = createRequire(import.meta.url);\nglobal.__filename = url.fileURLToPath(import.meta.url);\nglobal.__dirname = path.dirname(__filename);\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n", "/**\n * @internal\n */\nexport const BLOCK_SIZE: number = 64;\n\n/**\n * @internal\n */\nexport const DIGEST_LENGTH: number = 32;\n\n/**\n * @internal\n */\nexport const KEY = new Uint32Array([\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n]);\n\n/**\n * @internal\n */\nexport const INIT = [\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n];\n\n/**\n * @internal\n */\nexport const MAX_HASHABLE_LENGTH = 2 ** 53 - 1;\n", "import {\n  BLOCK_SIZE,\n  DIGEST_LENGTH,\n  INIT,\n  KEY,\n  MAX_HASHABLE_LENGTH\n} from \"./constants\";\n\n/**\n * @internal\n */\nexport class RawSha256 {\n  private state: Int32Array = Int32Array.from(INIT);\n  private temp: Int32Array = new Int32Array(64);\n  private buffer: Uint8Array = new Uint8Array(64);\n  private bufferLength: number = 0;\n  private bytesHashed: number = 0;\n\n  /**\n   * @internal\n   */\n  finished: boolean = false;\n\n  update(data: Uint8Array): void {\n    if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n\n    let position = 0;\n    let { byteLength } = data;\n    this.bytesHashed += byteLength;\n\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    while (byteLength > 0) {\n      this.buffer[this.bufferLength++] = data[position++];\n      byteLength--;\n\n      if (this.bufferLength === BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  }\n\n  digest(): Uint8Array {\n    if (!this.finished) {\n      const bitsHashed = this.bytesHashed * 8;\n      const bufferView = new DataView(\n        this.buffer.buffer,\n        this.buffer.byteOffset,\n        this.buffer.byteLength\n      );\n\n      const undecoratedLength = this.bufferLength;\n      bufferView.setUint8(this.bufferLength++, 0x80);\n\n      // Ensure the final block has enough room for the hashed length\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n        for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n\n      for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n        bufferView.setUint8(i, 0);\n      }\n      bufferView.setUint32(\n        BLOCK_SIZE - 8,\n        Math.floor(bitsHashed / 0x100000000),\n        true\n      );\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n\n      this.hashBuffer();\n\n      this.finished = true;\n    }\n\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    const out = new Uint8Array(DIGEST_LENGTH);\n    for (let i = 0; i < 8; i++) {\n      out[i * 4] = (this.state[i] >>> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return out;\n  }\n\n  private hashBuffer(): void {\n    const { buffer, state } = this;\n\n    let state0 = state[0],\n      state1 = state[1],\n      state2 = state[2],\n      state3 = state[3],\n      state4 = state[4],\n      state5 = state[5],\n      state6 = state[6],\n      state7 = state[7];\n\n    for (let i = 0; i < BLOCK_SIZE; i++) {\n      if (i < 16) {\n        this.temp[i] =\n          ((buffer[i * 4] & 0xff) << 24) |\n          ((buffer[i * 4 + 1] & 0xff) << 16) |\n          ((buffer[i * 4 + 2] & 0xff) << 8) |\n          (buffer[i * 4 + 3] & 0xff);\n      } else {\n        let u = this.temp[i - 2];\n        const t1 =\n          ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n\n        u = this.temp[i - 15];\n        const t2 =\n          ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n\n        this.temp[i] =\n          ((t1 + this.temp[i - 7]) | 0) + ((t2 + this.temp[i - 16]) | 0);\n      }\n\n      const t1 =\n        ((((((state4 >>> 6) | (state4 << 26)) ^\n          ((state4 >>> 11) | (state4 << 21)) ^\n          ((state4 >>> 25) | (state4 << 7))) +\n          ((state4 & state5) ^ (~state4 & state6))) |\n          0) +\n          ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n        0;\n\n      const t2 =\n        ((((state0 >>> 2) | (state0 << 30)) ^\n          ((state0 >>> 13) | (state0 << 19)) ^\n          ((state0 >>> 22) | (state0 << 10))) +\n          ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n        0;\n\n      state7 = state6;\n      state6 = state5;\n      state5 = state4;\n      state4 = (state3 + t1) | 0;\n      state3 = state2;\n      state2 = state1;\n      state1 = state0;\n      state0 = (t1 + t2) | 0;\n    }\n\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n  }\n}\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  isArrayBuffer: () => isArrayBuffer\n});\nmodule.exports = __toCommonJS(src_exports);\nvar isArrayBuffer = /* @__PURE__ */ __name((arg) => typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer || Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\", \"isArrayBuffer\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  isArrayBuffer\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  fromArrayBuffer: () => fromArrayBuffer,\n  fromString: () => fromString\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_is_array_buffer = require(\"@smithy/is-array-buffer\");\nvar import_buffer = require(\"buffer\");\nvar fromArrayBuffer = /* @__PURE__ */ __name((input, offset = 0, length = input.byteLength - offset) => {\n  if (!(0, import_is_array_buffer.isArrayBuffer)(input)) {\n    throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n  }\n  return import_buffer.Buffer.from(input, offset, length);\n}, \"fromArrayBuffer\");\nvar fromString = /* @__PURE__ */ __name((input, encoding) => {\n  if (typeof input !== \"string\") {\n    throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n  }\n  return encoding ? import_buffer.Buffer.from(input, encoding) : import_buffer.Buffer.from(input);\n}, \"fromString\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  fromArrayBuffer,\n  fromString\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  fromUtf8: () => fromUtf8,\n  toUint8Array: () => toUint8Array,\n  toUtf8: () => toUtf8\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/fromUtf8.ts\nvar import_util_buffer_from = require(\"@smithy/util-buffer-from\");\nvar fromUtf8 = /* @__PURE__ */ __name((input) => {\n  const buf = (0, import_util_buffer_from.fromString)(input, \"utf8\");\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n}, \"fromUtf8\");\n\n// src/toUint8Array.ts\nvar toUint8Array = /* @__PURE__ */ __name((data) => {\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n  }\n  return new Uint8Array(data);\n}, \"toUint8Array\");\n\n// src/toUtf8.ts\n\nvar toUtf8 = /* @__PURE__ */ __name((input) => {\n  if (typeof input === \"string\") {\n    return input;\n  }\n  if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n    throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\n  }\n  return (0, import_util_buffer_from.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n}, \"toUtf8\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  fromUtf8,\n  toUint8Array,\n  toUtf8\n});\n\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\n\n// Quick polyfill\nconst fromUtf8 =\n  typeof Buffer !== \"undefined\" && Buffer.from\n    ? (input: string) => Buffer.from(input, \"utf8\")\n    : fromUtf8Browser;\n\nexport function convertToBuffer(data: SourceData): Uint8Array {\n  // Already a Uint8, do nothing\n  if (data instanceof Uint8Array) return data;\n\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\n\nexport function isEmptyData(data: SourceData): boolean {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function numToUint8(num: number) {\n  return new Uint8Array([\n    (num & 0xff000000) >> 24,\n    (num & 0x00ff0000) >> 16,\n    (num & 0x0000ff00) >> 8,\n    num & 0x000000ff,\n  ]);\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n// IE 11 does not support Array.from, so we do it manually\nexport function uint32ArrayFrom(a_lookUpTable: Array<number>): Uint32Array {\n  if (!Uint32Array.from) {\n    const return_array = new Uint32Array(a_lookUpTable.length)\n    let a_index = 0\n    while (a_index < a_lookUpTable.length) {\n      return_array[a_index] = a_lookUpTable[a_index]\n      a_index += 1\n    }\n    return return_array\n  }\n  return Uint32Array.from(a_lookUpTable)\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport { convertToBuffer } from \"./convertToBuffer\";\nexport { isEmptyData } from \"./isEmptyData\";\nexport { numToUint8 } from \"./numToUint8\";\nexport {uint32ArrayFrom} from './uint32ArrayFrom';\n", "import { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { Checksum, SourceData } from \"@aws-sdk/types\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\n\nexport class Sha256 implements Checksum {\n  private readonly secret?: SourceData;\n  private hash: RawSha256;\n  private outer?: RawSha256;\n  private error: any;\n\n  constructor(secret?: SourceData) {\n    this.secret = secret;\n    this.hash = new RawSha256();\n    this.reset();\n  }\n\n  update(toHash: SourceData): void {\n    if (isEmptyData(toHash) || this.error) {\n      return;\n    }\n\n    try {\n      this.hash.update(convertToBuffer(toHash));\n    } catch (e) {\n      this.error = e;\n    }\n  }\n\n  /* This synchronous method keeps compatibility\n   * with the v2 aws-sdk.\n   */\n  digestSync(): Uint8Array {\n    if (this.error) {\n      throw this.error;\n    }\n\n    if (this.outer) {\n      if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n      }\n\n      return this.outer.digest();\n    }\n\n    return this.hash.digest();\n  }\n\n  /* The underlying digest method here is synchronous.\n   * To keep the same interface with the other hash functions\n   * the default is to expose this as an async method.\n   * However, it can sometimes be useful to have a sync method.\n   */\n  async digest(): Promise<Uint8Array> {\n    return this.digestSync();\n  }\n\n  reset(): void {\n    this.hash = new RawSha256();\n    if (this.secret) {\n      this.outer = new RawSha256();\n      const inner = bufferFromSecret(this.secret);\n      const outer = new Uint8Array(BLOCK_SIZE);\n      outer.set(inner);\n\n      for (let i = 0; i < BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n      }\n\n      this.hash.update(inner);\n      this.outer.update(outer);\n\n      // overwrite the copied key in memory\n      for (let i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n      }\n    }\n  }\n}\n\nfunction bufferFromSecret(secret: SourceData): Uint8Array {\n  let input = convertToBuffer(secret);\n\n  if (input.byteLength > BLOCK_SIZE) {\n    const bufferHash = new RawSha256();\n    bufferHash.update(input);\n    input = bufferHash.digest();\n  }\n\n  const buffer = new Uint8Array(BLOCK_SIZE);\n  buffer.set(input);\n  return buffer;\n}\n", "export * from \"./jsSha256\";\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toHex = exports.fromHex = void 0;\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nfunction fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexports.fromHex = fromHex;\nfunction toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\nexports.toHex = toHex;\n", "/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n", "/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n", "/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n", "import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n", "/* tslint:disable:no-empty */\nexport function noop() { }\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n", "import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n", "/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n", "/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n", "import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n", "import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n", "import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n", "import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n", "import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n", "import { Observable } from '../../Observable';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n\n    let id = 0;\n    const run = () => {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\n          id = 0;\n          // Use the provider's timestamp to calculate the elapsed time. Note that\n          // this means - if the caller hasn't passed a provider - that\n          // performance.now() will be used instead of the timestamp that was\n          // passed to the run callback. The reason for this is that the timestamp\n          // passed to the callback can be earlier than the start time, as it\n          // represents the time at which the browser decided it would render any\n          // queued frames - and that time can be earlier the captured start time.\n          const now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start,\n          });\n          run();\n        });\n      }\n    };\n\n    run();\n\n    return () => {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n", "import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n", "import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n", "let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n", "import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      immediateProvider.clearImmediate(id);\n      if (scheduler._scheduled === id) {\n        scheduler._scheduled = undefined;\n      }\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n", "import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n", "import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      animationFrameProvider.cancelAnimationFrame(id as number);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n", "import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n", "import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n", "/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n", "export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n", "import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n", "import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n", "import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n", "/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n", "import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n", "import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n", "/** prettier */\nimport { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj: any): obj is Observable<unknown> {\n  // The !! is to ensure that this publicly exposed function returns\n  // `false` if something like `null` or `0` is passed.\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n", "import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ## Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, take, lastValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${ finalNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The final number is 9'\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n", "import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n", "/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time we get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n", "import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}", "import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { observeOn } from '../operators/observeOn';\nimport { AsyncSubject } from '../AsyncSubject';\n\nexport function bindCallbackInternals(\n  isNodeStyle: boolean,\n  callbackFunc: any,\n  resultSelector?: any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // The user provided a result selector.\n      return function (this: any, ...args: any[]) {\n        return (bindCallbackInternals(isNodeStyle, callbackFunc, scheduler) as any)\n          .apply(this, args)\n          .pipe(mapOneOrManyArgs(resultSelector as any));\n      };\n    }\n  }\n\n  // If a scheduler was passed, use our `subscribeOn` and `observeOn` operators\n  // to compose that behavior for the user.\n  if (scheduler) {\n    return function (this: any, ...args: any[]) {\n      return (bindCallbackInternals(isNodeStyle, callbackFunc) as any)\n        .apply(this, args)\n        .pipe(subscribeOn(scheduler!), observeOn(scheduler!));\n    };\n  }\n\n  return function (this: any, ...args: any[]): Observable<any> {\n    // We're using AsyncSubject, because it emits when it completes,\n    // and it will play the value to all late-arriving subscribers.\n    const subject = new AsyncSubject<any>();\n\n    // If this is true, then we haven't called our function yet.\n    let uninitialized = true;\n    return new Observable((subscriber) => {\n      // Add our subscriber to the subject.\n      const subs = subject.subscribe(subscriber);\n\n      if (uninitialized) {\n        uninitialized = false;\n        // We're going to execute the bound function\n        // This bit is to signal that we are hitting the callback asynchronously.\n        // Because we don't have any anti-\"Zalgo\" guarantees with whatever\n        // function we are handed, we use this bit to figure out whether or not\n        // we are getting hit in a callback synchronously during our call.\n        let isAsync = false;\n\n        // This is used to signal that the callback completed synchronously.\n        let isComplete = false;\n\n        // Call our function that has a callback. If at any time during this\n        // call, an error is thrown, it will be caught by the Observable\n        // subscription process and sent to the consumer.\n        callbackFunc.apply(\n          // Pass the appropriate `this` context.\n          this,\n          [\n            // Pass the arguments.\n            ...args,\n            // And our callback handler.\n            (...results: any[]) => {\n              if (isNodeStyle) {\n                // If this is a node callback, shift the first value off of the\n                // results and check it, as it is the error argument. By shifting,\n                // we leave only the argument(s) we want to pass to the consumer.\n                const err = results.shift();\n                if (err != null) {\n                  subject.error(err);\n                  // If we've errored, we can stop processing this function\n                  // as there's nothing else to do. Just return to escape.\n                  return;\n                }\n              }\n              // If we have one argument, notify the consumer\n              // of it as a single value, otherwise, if there's more than one, pass\n              // them as an array. Note that if there are no arguments, `undefined`\n              // will be emitted.\n              subject.next(1 < results.length ? results : results[0]);\n              // Flip this flag, so we know we can complete it in the synchronous\n              // case below.\n              isComplete = true;\n              // If we're not asynchronous, we need to defer the `complete` call\n              // until after the call to the function is over. This is because an\n              // error could be thrown in the function after it calls our callback,\n              // and if that is the case, if we complete here, we are unable to notify\n              // the consumer than an error occurred.\n              if (isAsync) {\n                subject.complete();\n              }\n            },\n          ]\n        );\n        // If we flipped `isComplete` during the call, we resolved synchronously,\n        // notify complete, because we skipped it in the callback to wait\n        // to make sure there were no errors during the call.\n        if (isComplete) {\n          subject.complete();\n        }\n\n        // We're no longer synchronous. If the callback is called at this point\n        // we can notify complete on the spot.\n        isAsync = true;\n      }\n\n      // Return the subscription from adding our subscriber to the subject.\n      return subs;\n    });\n  };\n}\n", "/* @prettier */\nimport { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some object and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (n, s, cb) => {\n *   cb(n, s, { someProperty: 'someValue' });\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction(5, 'some string').subscribe((values) => {\n *   console.log(values); // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback, asyncScheduler } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, asyncScheduler);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod\n *   .call(someObject) // make sure methodWithCallback has access to someObject\n *   .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n */\nexport function bindCallback(\n  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  return bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);\n}\n", "/* @prettier */\nimport { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindNodeCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n */\nexport function bindNodeCallback(\n  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any> {\n  return bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);\n}\n", "const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n", "export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n", "import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n", "import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInput } from '../types';\nimport { innerFrom } from './innerFrom';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create an Observable only when the Observer\n * subscribes. It waits until an Observer subscribes to it, calls the given\n * factory function to get an Observable -- where a factory function typically\n * generates a new Observable -- and subscribes the Observer to this Observable.\n * In case the factory function returns a falsy value, then EMPTY is used as\n * Observable instead. Last but not least, an exception during the factory\n * function call is transferred to the Observer by calling `error`.\n *\n * ## Example\n *\n * Subscribe to either an Observable of clicks or an Observable of interval, at random\n *\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(() => {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): ObservableInput} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n */\nexport function defer<R extends ObservableInput<any>>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>((subscriber) => {\n    innerFrom(observableFactory()).subscribe(subscriber);\n  });\n}\n", "import { Connectable, ObservableInput, SubjectLike } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\n\nexport interface ConnectableConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n  /**\n   * If true, the resulting observable will reset internal state upon disconnection\n   * and return to a \"cold\" state. This allows the resulting observable to be\n   * reconnected.\n   * If false, upon disconnection, the connecting subject will remain the\n   * connecting subject, meaning the resulting observable will not go \"cold\" again,\n   * and subsequent repeats or resubscriptions will resubscribe to that same subject.\n   */\n  resetOnDisconnect?: boolean;\n}\n\n/**\n * The default configuration for `connectable`.\n */\nconst DEFAULT_CONFIG: ConnectableConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n  resetOnDisconnect: true,\n};\n\n/**\n * Creates an observable that multicasts once `connect()` is called on it.\n *\n * @param source The observable source to make connectable.\n * @param config The configuration object for `connectable`.\n * @returns A \"connectable\" observable, that has a `connect()` method, that you must call to\n * connect the source to all consumers through the subject provided as the connector.\n */\nexport function connectable<T>(source: ObservableInput<T>, config: ConnectableConfig<T> = DEFAULT_CONFIG): Connectable<T> {\n  // The subscription representing the connection.\n  let connection: Subscription | null = null;\n  const { connector, resetOnDisconnect = true } = config;\n  let subject = connector();\n\n  const result: any = new Observable<T>((subscriber) => {\n    return subject.subscribe(subscriber);\n  });\n\n  // Define the `connect` function. This is what users must call\n  // in order to \"connect\" the source to the subject that is\n  // multicasting it.\n  result.connect = () => {\n    if (!connection || connection.closed) {\n      connection = defer(() => source).subscribe(subject);\n      if (resetOnDisconnect) {\n        connection.add(() => (subject = connector()));\n      }\n    }\n    return connection;\n  };\n\n  return result;\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nimport { AnyCatcher } from '../AnyCatcher';\n\n// forkJoin(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// forkJoin(null | undefined)\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\n\n// forkJoin([a, b, c])\nexport function forkJoin(sources: readonly []): Observable<never>;\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\nexport function forkJoin<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n\n// forkJoin(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n// forkJoin({a, b, c})\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\n * complete immediately if an empty array is passed.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\n * then the resulting stream will complete immediately.\n *\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, then the resulting\n * array will have `n` values, where the first value is the last one emitted by the first observable,\n * second value is the last one emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, then the resulting\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\n * unless at any point some other observable completes without emitting a value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\n * have to emit something at least once and complete.\n *\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\n * from the other observables.\n *\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\n * when `forkJoin` is supposed to emit a result.\n *\n * ## Examples\n *\n * Use `forkJoin` with a dictionary of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000)\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * Use `forkJoin` with an array of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000)\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...args: any[]): Observable<any> {\n  const resultSelector = popResultSelector(args);\n  const { args: sources, keys } = argsArgArrayOrObject(args);\n  const result = new Observable((subscriber) => {\n    const { length } = sources;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(length);\n    let remainingCompletions = length;\n    let remainingEmissions = length;\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      let hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            if (!hasValue) {\n              hasValue = true;\n              remainingEmissions--;\n            }\n            values[sourceIndex] = value;\n          },\n          () => remainingCompletions--,\n          undefined,\n          () => {\n            if (!remainingCompletions || !hasValue) {\n              if (!remainingEmissions) {\n                subscriber.next(keys ? createObject(keys, values) : values);\n              }\n              subscriber.complete();\n            }\n          }\n        )\n      );\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * // note optional configuration parameter which will be passed to addEventListener\n * const clicksInDocument = fromEvent(document, 'click', { capture: true });\n * const clicksInDiv = fromEvent(div, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n", "import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void\n): Observable<T>;\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * than one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Examples\n *\n * Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs 'EVENT_TYPE' 'EVENT_MESSAGE' to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + ' --- ' + eventMessage // without that function only 'EVENT_TYPE'\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'EVENT_TYPE --- EVENT_MESSAGE'\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T | T[]> {\n  if (resultSelector) {\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  return new Observable<T | T[]>((subscriber) => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n    const retValue = addHandler(handler);\n    return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\n  });\n}\n", "import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { defer } from './defer';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\n\ntype ConditionFunc<S> = (state: S) => boolean;\ntype IterateFunc<S> = (state: S) => S;\ntype ResultFunc<S, T> = (state: S) => T;\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Produces sequence of numbers\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Use `asapScheduler`\n *\n * ```ts\n * import { generate, asapScheduler } from 'rxjs';\n *\n * const result = generate(1, x => x < 5, x => x * 2, x => x + 1, asapScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 2\n * // 3\n * // 5\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<T, S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  resultSelector: ResultFunc<S, T>,\n  scheduler?: SchedulerLike\n): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * ![](generate.png)\n *\n * `generate` allows you to create a stream of values generated with a loop very similar to\n * a traditional for loop. The first argument of `generate` is a beginning value. The second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * then the loop continues, if not, it stops. The third value is a function which takes the\n * previously defined value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in a traditional for loop: the first expression\n * initializes some state (for example, a numeric index), the second tests if the loop can perform the next\n * iteration (for example, if the index is lower than 10) and the third states how the defined value\n * will be modified on every step (for example, the index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First of all, the condition function is ran. If it returns true, then the Observable\n * emits the currently stored value (initial value at the first iteration) and finally updates\n * that value with iterate function. If at some point the condition returns false, then the Observable\n * completes at that moment.\n *\n * Optionally you can pass a fourth parameter to `generate` - a result selector function which allows you\n * to immediately map the value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * a single object to the operator instead where the object has the properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, or in other words the resulting Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of a multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is a `resultSelector`\n * function or not). In case of a single-parameter call, you can provide it as a\n * `scheduler` property on the object passed to the operator. In both cases, a scheduler decides when\n * the next iteration of the loop will happen and therefore when the next value will be emitted\n * by the Observable. For example, to ensure that each value is pushed to the Observer\n * on a separate task in the event loop, you could use the `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * ## Examples\n *\n * Use with condition and iterate functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * Use with condition, iterate and resultSelector functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use with options object\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use options object without condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!') // This will never run\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n * ```\n *\n * @see {@link from}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  scheduler?: SchedulerLike\n): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition and iterate function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1,\n *   resultSelector: x => x\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(\n  initialStateOrOptions: S | GenerateOptions<T, S>,\n  condition?: ConditionFunc<S>,\n  iterate?: IterateFunc<S>,\n  resultSelectorOrScheduler?: ResultFunc<S, T> | SchedulerLike,\n  scheduler?: SchedulerLike\n): Observable<T> {\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  // TODO: Remove this as we move away from deprecated signatures\n  // and move towards a configuration object argument.\n  if (arguments.length === 1) {\n    // If we only have one argument, we can assume it is a configuration object.\n    // Note that folks not using TypeScript may trip over this.\n    ({\n      initialState,\n      condition,\n      iterate,\n      resultSelector = identity as ResultFunc<S, T>,\n      scheduler,\n    } = initialStateOrOptions as GenerateOptions<T, S>);\n  } else {\n    // Deprecated arguments path. Figure out what the user\n    // passed and set it here.\n    initialState = initialStateOrOptions as S;\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n      resultSelector = identity as ResultFunc<S, T>;\n      scheduler = resultSelectorOrScheduler as SchedulerLike;\n    } else {\n      resultSelector = resultSelectorOrScheduler as ResultFunc<S, T>;\n    }\n  }\n\n  // The actual generator used to \"generate\" values.\n  function* gen() {\n    for (let state = initialState; !condition || condition(state); state = iterate!(state)) {\n      yield resultSelector(state);\n    }\n  }\n\n  // We use `defer` because we want to defer the creation of the iterator from the iterable.\n  return defer(\n    (scheduler\n      ? // If a scheduler was provided, use `scheduleIterable` to ensure that iteration/generation\n        // happens on the scheduler.\n        () => scheduleIterable(gen(), scheduler!)\n      : // Otherwise, if there's no scheduler, we can just use the generator function directly in\n        // `defer` and executing it will return the generator (which is iterable).\n        gen) as () => ObservableInput<T>\n  );\n}\n", "import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { ObservableInput } from '../types';\n\n/**\n * Checks a boolean at subscription time, and chooses between one of two observable sources\n *\n * `iif` expects a function that returns a boolean (the `condition` function), and two sources,\n * the `trueResult` and the `falseResult`, and returns an Observable.\n *\n * At the moment of subscription, the `condition` function is called. If the result is `true`, the\n * subscription will be to the source passed as the `trueResult`, otherwise, the subscription will be\n * to the source passed as the `falseResult`.\n *\n * If you need to check more than two options to choose between more than one observable, have a look at the {@link defer} creation method.\n *\n * ## Examples\n *\n * Change at runtime which Observable will be subscribed\n *\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'first'\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'second'\n * ```\n *\n * Control access to an Observable\n *\n * ```ts\n * import { iif, of, EMPTY } from 'rxjs';\n *\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'),\n *   EMPTY\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'It seems you have an access...'\n * // 'The end'\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'The end'\n * ```\n *\n * @see {@link defer}\n *\n * @param condition Condition which Observable should be chosen.\n * @param trueResult An Observable that will be subscribed if condition is true.\n * @param falseResult An Observable that will be subscribed if condition is false.\n * @return An observable that proxies to `trueResult` or `falseResult`, depending on the result of the `condition` function.\n */\nexport function iif<T, F>(condition: () => boolean, trueResult: ObservableInput<T>, falseResult: ObservableInput<F>): Observable<T | F> {\n  return defer(() => (condition() ? trueResult : falseResult));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike } from '../types';\nimport { timer } from './timer';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.</span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n *\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n */\nexport function interval(period = 0, scheduler: SchedulerLike = asyncScheduler): Observable<number> {\n  if (period < 0) {\n    // We cannot schedule an interval in the past.\n    period = 0;\n  }\n\n  return timer(period, period, scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n", "const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function onErrorResumeNext<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits a complete or an error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { onErrorResumeNext, of, map } from 'rxjs';\n *\n * onErrorResumeNext(\n *   of(1, 2, 3, 0).pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *       return 10 / x;\n *     })\n *   ),\n *   of(1, 2, 3)\n * )\n * .subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(err),     // Will never be called.\n *   complete: () => console.log('done')\n * });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'done'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): Observable<A[number]> {\n  const nextSources: ObservableInputTuple<A> = argsOrArgArray(sources) as any;\n\n  return new Observable((subscriber) => {\n    let sourceIndex = 0;\n    const subscribeNext = () => {\n      if (sourceIndex < nextSources.length) {\n        let nextSource: Observable<A[number]>;\n        try {\n          nextSource = innerFrom(nextSources[sourceIndex++]);\n        } catch (err) {\n          subscribeNext();\n          return;\n        }\n        const innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n        nextSource.subscribe(innerSubscriber);\n        innerSubscriber.add(subscribeNext);\n      } else {\n        subscriber.complete();\n      }\n    };\n    subscribeNext();\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { from } from './from';\n\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(arr: readonly T[], scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<O extends Record<string, unknown>>(obj: O, scheduler?: SchedulerLike): Observable<[keyof O, O[keyof O]]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(iterable: Iterable<T>, scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(\n  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,\n  scheduler?: SchedulerLike\n): Observable<[never, never]>;\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * ![](pairs.png)\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default, these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * ## Example\n *\n * Converts an object to an Observable\n *\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj).subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // ['foo', 42]\n * // ['bar', 56]\n * // ['baz', 78]\n * // 'Complete!'\n * ```\n *\n * ### Object.entries required\n *\n * In IE, you will need to polyfill `Object.entries` in order to use this.\n * [MDN has a polyfill here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries)\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(obj: any, scheduler?: SchedulerLike) {\n  return from(Object.entries(obj), scheduler as any);\n}\n", "export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {\n  return (value: T, index: number) => !pred.call(thisArg, value, index); \n}", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n", "import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, U extends T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => value is U,\n  thisArg: A\n): [Observable<U>, Observable<Exclude<T, U>>];\nexport function partition<T, U extends T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => value is U\n): [Observable<U>, Observable<Exclude<T, U>>];\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => boolean,\n  thisArg: A\n): [Observable<T>, Observable<T>];\nexport function partition<T>(source: ObservableInput<T>, predicate: (value: T, index: number) => boolean): [Observable<T>, Observable<T>];\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n *\n * Partition a set of numbers into odds and evens observables\n *\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, value => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (this: any, value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))] as [\n    Observable<T>,\n    Observable<T>\n  ];\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { Subscriber } from '../Subscriber';\n\nexport function race<T extends readonly unknown[]>(inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function race<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\n\n/**\n * Returns an observable that mirrors the first source observable to emit an item.\n *\n * ![](race.png)\n *\n * `race` returns an observable, that when subscribed to, subscribes to all source observables immediately.\n * As soon as one of the source observables emits a value, the result unsubscribes from the other sources.\n * The resulting observable will forward all notifications, including error and completion, from the \"winning\"\n * source observable.\n *\n * If one of the used source observable throws an errors before a first notification\n * the race operator will also throw an error, no matter if another source observable\n * could potentially win the race.\n *\n * `race` can be useful for selecting the response from the fastest network connection for\n * HTTP or WebSockets. `race` can also be useful for switching observable context based on user\n * input.\n *\n * ## Example\n *\n * Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { interval, map, race } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * race(obs1, obs2, obs3)\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n */\nexport function race<T>(...sources: (ObservableInput<T> | ObservableInput<T>[])[]): Observable<any> {\n  sources = argsOrArgArray(sources);\n  // If only one source was passed, just return it. Otherwise return the race.\n  return sources.length === 1 ? innerFrom(sources[0] as ObservableInput<T>) : new Observable<T>(raceInit(sources as ObservableInput<T>[]));\n}\n\n/**\n * An observable initializer function for both the static version and the\n * operator version of race.\n * @param sources The sources to race\n */\nexport function raceInit<T>(sources: ObservableInput<T>[]) {\n  return (subscriber: Subscriber<T>) => {\n    let subscriptions: Subscription[] = [];\n\n    // Subscribe to all of the sources. Note that we are checking `subscriptions` here\n    // Is is an array of all actively \"racing\" subscriptions, and it is `null` after the\n    // race has been won. So, if we have racer that synchronously \"wins\", this loop will\n    // stop before it subscribes to any more.\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      subscriptions.push(\n        innerFrom(sources[i] as ObservableInput<T>).subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            if (subscriptions) {\n              // We're still racing, but we won! So unsubscribe\n              // all other subscriptions that we have, except this one.\n              for (let s = 0; s < subscriptions.length; s++) {\n                s !== i && subscriptions[s].unsubscribe();\n              }\n              subscriptions = null!;\n            }\n            subscriber.next(value);\n          })\n        )\n      );\n    }\n  };\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { EMPTY } from './empty';\n\nexport function range(start: number, count?: number): Observable<number>;\n\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n *\n * Produce a range of numbers\n *\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 3);\n *\n * numbers.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // 'Complete!'\n * ```\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n */\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\n  if (count == null) {\n    // If one argument was passed, it's the count, not the start.\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    // No count? We're going nowhere. Return EMPTY.\n    return EMPTY;\n  }\n\n  // Where the range should stop.\n  const end = count + start;\n\n  return new Observable(\n    scheduler\n      ? // The deprecated scheduled path.\n        (subscriber) => {\n          let n = start;\n          return scheduler.schedule(function () {\n            if (n < end) {\n              subscriber.next(n++);\n              this.schedule();\n            } else {\n              subscriber.complete();\n            }\n          });\n        }\n      : // Standard synchronous range.\n        (subscriber) => {\n          let n = start;\n          while (n < end && !subscriber.closed) {\n            subscriber.next(n++);\n          }\n          subscriber.complete();\n        }\n  );\n}\n", "import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput, ObservedValueOf } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T extends ObservableInput<any>>(\n  resourceFactory: () => Unsubscribable | void,\n  observableFactory: (resource: Unsubscribable | void) => T | void\n): Observable<ObservedValueOf<T>> {\n  return new Observable<ObservedValueOf<T>>((subscriber) => {\n    const resource = resourceFactory();\n    const result = observableFactory(resource);\n    const source = result ? innerFrom(result) : EMPTY;\n    source.subscribe(subscriber);\n    return () => {\n      // NOTE: Optional chaining did not work here.\n      // Related TS Issue: https://github.com/microsoft/TypeScript/issues/40818\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { EMPTY } from './empty';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { popResultSelector } from '../util/args';\n\nexport function zip<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\nexport function zip<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n *\n * Combine age and name from different sources\n *\n * ```ts\n * import { of, zip, map } from 'rxjs';\n *\n * const age$ = of(27, 25, 29);\n * const name$ = of('Foo', 'Bar', 'Beer');\n * const isDev$ = of(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev }))\n * )\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n *\n * @param sources\n * @return {Observable<R>}\n */\nexport function zip(...args: unknown[]): Observable<unknown> {\n  const resultSelector = popResultSelector(args);\n\n  const sources = argsOrArgArray(args) as Observable<unknown>[];\n\n  return sources.length\n    ? new Observable<unknown[]>((subscriber) => {\n        // A collection of buffers of values from each source.\n        // Keyed by the same index with which the sources were passed in.\n        let buffers: unknown[][] = sources.map(() => []);\n\n        // An array of flags of whether or not the sources have completed.\n        // This is used to check to see if we should complete the result.\n        // Keyed by the same index with which the sources were passed in.\n        let completed = sources.map(() => false);\n\n        // When everything is done, release the arrays above.\n        subscriber.add(() => {\n          buffers = completed = null!;\n        });\n\n        // Loop over our sources and subscribe to each one. The index `i` is\n        // especially important here, because we use it in closures below to\n        // access the related buffers and completion properties\n        for (let sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\n          innerFrom(sources[sourceIndex]).subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                buffers[sourceIndex].push(value);\n                // if every buffer has at least one value in it, then we\n                // can shift out the oldest value from each buffer and emit\n                // them as an array.\n                if (buffers.every((buffer) => buffer.length)) {\n                  const result: any = buffers.map((buffer) => buffer.shift()!);\n                  // Emit the array. If theres' a result selector, use that.\n                  subscriber.next(resultSelector ? resultSelector(...result) : result);\n                  // If any one of the sources is both complete and has an empty buffer\n                  // then we complete the result. This is because we cannot possibly have\n                  // any more values to zip together.\n                  if (buffers.some((buffer, i) => !buffer.length && completed[i])) {\n                    subscriber.complete();\n                  }\n                }\n              },\n              () => {\n                // This source completed. Mark it as complete so we can check it later\n                // if we have to.\n                completed[sourceIndex] = true;\n                // But, if this complete source has nothing in its buffer, then we\n                // can complete the result, because we can't possibly have any more\n                // values from this to zip together with the other values.\n                !buffers[sourceIndex].length && subscriber.complete();\n              }\n            )\n          );\n        }\n\n        // When everything is done, release the arrays above.\n        return () => {\n          buffers = completed = null!;\n        };\n      })\n    : EMPTY;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\n\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.svg)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, audit, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function audit<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    let durationSubscriber: Subscriber<any> | null = null;\n    let isComplete = false;\n\n    const endDuration = () => {\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n      isComplete && subscriber.complete();\n    };\n\n    const cleanupDuration = () => {\n      durationSubscriber = null;\n      isComplete && subscriber.complete();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          lastValue = value;\n          if (!durationSubscriber) {\n            innerFrom(durationSelector(value)).subscribe(\n              (durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration))\n            );\n          }\n        },\n        () => {\n          isComplete = true;\n          (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, auditTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * `ObservableInput` (that internally gets converted to an Observable)\n * emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval, buffer } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param closingNotifier An `ObservableInput` that signals the\n * buffer to be emitted on the output Observable.\n * @return A function that returns an Observable of buffers, which are arrays\n * of values.\n */\nexport function buffer<T>(closingNotifier: ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The current buffered values.\n    let currentBuffer: T[] = [];\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => currentBuffer.push(value),\n        () => {\n          subscriber.next(currentBuffer);\n          subscriber.complete();\n        }\n      )\n    );\n\n    // Subscribe to the closing notifier.\n    innerFrom(closingNotifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          // Start a new buffer and emit the previous one.\n          const b = currentBuffer;\n          currentBuffer = [];\n          subscriber.next(b);\n        },\n        noop\n      )\n    );\n\n    return () => {\n      // Ensure buffered values are released on finalization.\n      currentBuffer = null!;\n    };\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number | null = null): OperatorFunction<T, T[]> {\n  // If no `startBufferEvery` value was supplied, then we're\n  // opening and closing on the bufferSize itself.\n  startBufferEvery = startBufferEvery ?? bufferSize;\n\n  return operate((source, subscriber) => {\n    let buffers: T[][] = [];\n    let count = 0;\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          let toEmit: T[][] | null = null;\n\n          // Check to see if we need to start a buffer.\n          // This will start one at the first value, and then\n          // a new one every N after that.\n          if (count++ % startBufferEvery! === 0) {\n            buffers.push([]);\n          }\n\n          // Push our value into our active buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n            // Check to see if we're over the bufferSize\n            // if we are, record it so we can emit it later.\n            // If we emitted it now and removed it, it would\n            // mutate the `buffers` array while we're looping\n            // over it.\n            if (bufferSize <= buffer.length) {\n              toEmit = toEmit ?? [];\n              toEmit.push(buffer);\n            }\n          }\n\n          if (toEmit) {\n            // We have found some buffers that are over the\n            // `bufferSize`. Emit them, and remove them from our\n            // buffers list.\n            for (const buffer of toEmit) {\n              arrRemove(buffers, buffer);\n              subscriber.next(buffer);\n            }\n          }\n        },\n        () => {\n          // When the source completes, emit all of our\n          // active buffers.\n          for (const buffer of buffers) {\n            subscriber.next(buffer);\n          }\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Clean up our memory when we finalize\n          buffers = null!;\n        }\n      )\n    );\n  });\n}\n", "import { Subscription } from '../Subscription';\nimport { OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  maxBufferSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const bufferCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxBufferSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active buffers, their related subscriptions, and removal functions.\n    let bufferRecords: { buffer: T[]; subs: Subscription }[] | null = [];\n    // If true, it means that every time we emit a buffer, we want to start a new buffer\n    // this is only really used for when *just* the buffer time span is passed.\n    let restartOnEmit = false;\n\n    /**\n     * Does the work of emitting the buffer from the record, ensuring that the\n     * record is removed before the emission so reentrant code (from some custom scheduling, perhaps)\n     * does not alter the buffer. Also checks to see if a new buffer needs to be started\n     * after the emit.\n     */\n    const emit = (record: { buffer: T[]; subs: Subscription }) => {\n      const { buffer, subs } = record;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    /**\n     * Called every time we start a new buffer. This does\n     * the work of scheduling a job at the requested bufferTimeSpan\n     * that will emit the buffer (if it's not unsubscribed before then).\n     */\n    const startBuffer = () => {\n      if (bufferRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const buffer: T[] = [];\n        const record = {\n          buffer,\n          subs,\n        };\n        bufferRecords.push(record);\n        executeSchedule(subs, scheduler, () => emit(record), bufferTimeSpan);\n      }\n    };\n\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      // The user passed both a bufferTimeSpan (required), and a creation interval\n      // That means we need to start new buffers on the interval, and those buffers need\n      // to wait the required time span before emitting.\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n    } else {\n      restartOnEmit = true;\n    }\n\n    startBuffer();\n\n    const bufferTimeSubscriber = createOperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Copy the records, so if we need to remove one we\n        // don't mutate the array. It's hard, but not impossible to\n        // set up a buffer time that could mutate the array and\n        // cause issues here.\n        const recordsCopy = bufferRecords!.slice();\n        for (const record of recordsCopy) {\n          // Loop over all buffers and\n          const { buffer } = record;\n          buffer.push(value);\n          // If the buffer is over the max size, we need to emit it.\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      },\n      () => {\n        // The source completed, emit all of the active\n        // buffers we have before we complete.\n        while (bufferRecords?.length) {\n          subscriber.next(bufferRecords.shift()!.buffer);\n        }\n        bufferTimeSubscriber?.unsubscribe();\n        subscriber.complete();\n        subscriber.unsubscribe();\n      },\n      // Pass all errors through to consumer.\n      undefined,\n      // Clean up\n      () => (bufferRecords = null)\n    );\n\n    source.subscribe(bufferTimeSubscriber);\n  });\n}\n", "import { Subscription } from '../Subscription';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, bufferToggle, EMPTY } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : EMPTY\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (value: O) => ObservableInput<any>\n): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    const buffers: T[][] = [];\n\n    // Subscribe to the openings notifier first\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const buffer: T[] = [];\n          buffers.push(buffer);\n          // We use this composite subscription, so that\n          // when the closing notifier emits, we can tear it down.\n          const closingSubscription = new Subscription();\n\n          const emitBuffer = () => {\n            arrRemove(buffers, buffer);\n            subscriber.next(buffer);\n            closingSubscription.unsubscribe();\n          };\n\n          // The line below will add the subscription to the parent subscriber *and* the closing subscription.\n          closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(createOperatorSubscriber(subscriber, emitBuffer, noop)));\n        },\n        noop\n      )\n    );\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Value from our source. Add it to all pending buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n          }\n        },\n        () => {\n          // Source complete. Emit all pending buffers.\n          while (buffers.length > 0) {\n            subscriber.next(buffers.shift()!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.svg)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, bufferWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(\n *   bufferWhen(() => interval(1000 + Math.random() * 4000))\n * );\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The buffer we keep and emit.\n    let buffer: T[] | null = null;\n    // A reference to the subscriber used to subscribe to\n    // the closing notifier. We need to hold this so we can\n    // end the subscription after the first notification.\n    let closingSubscriber: Subscriber<T> | null = null;\n\n    // Ends the previous closing notifier subscription, so it\n    // terminates after the first emission, then emits\n    // the current buffer  if there is one, starts a new buffer, and starts a\n    // new closing notifier.\n    const openBuffer = () => {\n      // Make sure to finalize the closing subscription, we only cared\n      // about one notification.\n      closingSubscriber?.unsubscribe();\n      // emit the buffer if we have one, and start a new buffer.\n      const b = buffer;\n      buffer = [];\n      b && subscriber.next(b);\n\n      // Get a new closing notifier and subscribe to it.\n      innerFrom(closingSelector()).subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openBuffer, noop)));\n    };\n\n    // Start the first buffer.\n    openBuffer();\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Add every new value to the current buffer.\n        (value) => buffer?.push(value),\n        // When we complete, emit the buffer if we have one,\n        // then complete the result.\n        () => {\n          buffer && subscriber.next(buffer);\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        // Release memory on finalization\n        () => (buffer = closingSubscriber = null!)\n      )\n    );\n  });\n}\n", "import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n", "import { scanInternals } from './scanInternals';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nexport function reduce<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function reduce<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function reduce<V, A, S = A>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n *\n * Count the number of click events that happened in 5 seconds\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, map, reduce } from 'rxjs';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click')\n *   .pipe(takeUntil(interval(5000)));\n *\n * const ones = clicksInFiveSeconds.pipe(map(() => 1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n *\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: A, value: V, index: number): A} accumulator The accumulator function\n * called on each source value.\n * @param {A} [seed] The initial accumulation value.\n * @return A function that returns an Observable that emits a single value that\n * is the result of accumulating the values emitted by the source Observable.\n */\nexport function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {\n  return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n", "import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nconst arrReducer = (arr: any[], value: any) => (arr.push(value), arr);\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n * ## Example\n *\n * ```ts\n * import { interval, take, toArray } from 'rxjs';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * example.subscribe(value => console.log(value));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n * ```\n *\n * @return A function that returns an Observable that emits an array of items\n * emitted by the source Observable when source completes.\n */\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  // Because arrays are mutable, and we're mutating the array in this\n  // reducer process, we have to encapsulate the creation of the initial\n  // array within this `operate` function.\n  return operate((source, subscriber) => {\n    reduce(arrReducer, [] as T[])(source).subscribe(subscriber);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { mergeMap } from './mergeMap';\nimport { toArray } from './toArray';\n\n/**\n * Collects all of the inner sources from source observable. Then, once the\n * source completes, joins the values using the given static.\n *\n * This is used for {@link combineLatestAll} and {@link zipAll} which both have the\n * same behavior of collecting all inner observables, then operating on them.\n *\n * @param joinFn The type of static join to apply to the sources collected\n * @param project The projection function to apply to the values, if any\n */\nexport function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {\n  return pipe(\n    // Collect all inner sources into an array, and emit them when the\n    // source completes.\n    toArray() as OperatorFunction<ObservableInput<T>, ObservableInput<T>[]>,\n    // Run the join function on the collected array of inner sources.\n    mergeMap((sources) => joinFn(sources)),\n    // If a projection function was supplied, apply it to each result.\n    project ? mapOneOrManyArgs(project) : (identity as any)\n  );\n}\n", "import { combineLatest } from '../observable/combineLatest';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { joinAllInternals } from './joinAllInternals';\n\nexport function combineLatestAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineLatestAll<T>(): OperatorFunction<any, T[]>;\nexport function combineLatestAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineLatestAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * `combineLatestAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest} strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ## Example\n *\n * Map two click events to a finite interval Observable, then apply `combineLatestAll`\n *\n * ```ts\n * import { fromEvent, map, interval, take, combineLatestAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(Math.random() * 2000).pipe(take(3))),\n *   take(2)\n * );\n * const result = higherOrder.pipe(combineLatestAll());\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link combineLatestWith}\n * @see {@link mergeAll}\n *\n * @param project optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return A function that returns an Observable that flattens Observables\n * emitted by the source Observable.\n */\nexport function combineLatestAll<R>(project?: (...values: Array<any>) => R) {\n  return joinAllInternals(combineLatest, project);\n}\n", "import { combineLatestAll } from './combineLatestAll';\n\n/**\n * @deprecated Renamed to {@link combineLatestAll}. Will be removed in v8.\n */\nexport const combineAll = combineLatestAll;\n", "import { combineLatestInit } from '../observable/combineLatest';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  project: (...values: [T, ...A]) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  ...sourcesAndProject: [...ObservableInputTuple<A>, (...values: [T, ...A]) => R]\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/**\n * @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8.\n */\nexport function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {\n  const resultSelector = popResultSelector(args);\n  return resultSelector\n    ? pipe(combineLatest(...(args as Array<ObservableInput<any>>)), mapOneOrManyArgs(resultSelector))\n    : operate((source, subscriber) => {\n        combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n      });\n}\n", "import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { combineLatest } from './combineLatest';\n\n/**\n * Create an observable that combines the latest values from all passed observables and the source\n * into arrays and emits them.\n *\n * Returns an observable, that when subscribed to, will subscribe to the source observable and all\n * sources provided as arguments. Once all sources emit at least one value, all of the latest values\n * will be emitted as an array. After that, every time any source emits a value, all of the latest values\n * will be emitted as an array.\n *\n * This is a useful operator for eagerly calculating values based off of changed inputs.\n *\n * ## Example\n *\n * Simple concatenation of values from two inputs\n *\n * ```ts\n * import { fromEvent, combineLatestWith, map } from 'rxjs';\n *\n * // Setup: Add two inputs to the page\n * const input1 = document.createElement('input');\n * document.body.appendChild(input1);\n * const input2 = document.createElement('input');\n * document.body.appendChild(input2);\n *\n * // Get streams of changes\n * const input1Changes$ = fromEvent(input1, 'change');\n * const input2Changes$ = fromEvent(input2, 'change');\n *\n * // Combine the changes by adding them together\n * input1Changes$.pipe(\n *   combineLatestWith(input2Changes$),\n *   map(([e1, e2]) => (<HTMLInputElement>e1.target).value + ' - ' + (<HTMLInputElement>e2.target).value)\n * )\n * .subscribe(x => console.log(x));\n * ```\n *\n * @param otherSources the other sources to subscribe to.\n * @return A function that returns an Observable that emits the latest\n * emissions from both source and provided Observables.\n */\nexport function combineLatestWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, Cons<T, A>> {\n  return combineLatest(...otherSources);\n}\n", "import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n", "import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)` */\nexport function concatMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMapTo, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable of values merged together by\n * joining the passed Observable with itself, one after the other, for each\n * value emitted from the source.\n * @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)`\n */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? concatMap(() => innerObservable, resultSelector) : concatMap(() => innerObservable);\n}\n", "import { ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { concatAll } from './concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * @deprecated Replaced with {@link concatWith}. Will be removed in v8.\n */\nexport function concat<T, R>(...args: any[]): OperatorFunction<T, R> {\n  const scheduler = popScheduler(args);\n  return operate((source, subscriber) => {\n    concatAll()(from([source, ...args], scheduler)).subscribe(subscriber);\n  });\n}\n", "import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { concat } from './concat';\n\n/**\n * Emits all of the values from the source observable, then, once it completes, subscribes\n * to each observable source provided, one at a time, emitting all of their values, and not subscribing\n * to the next one until it completes.\n *\n * `concat(a$, b$, c$)` is the same as `a$.pipe(concatWith(b$, c$))`.\n *\n * ## Example\n *\n * Listen for one mouse click, then listen for all mouse moves.\n *\n * ```ts\n * import { fromEvent, map, take, concatWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click');\n * const moves$ = fromEvent(document, 'mousemove');\n *\n * clicks$.pipe(\n *   map(() => 'click'),\n *   take(1),\n *   concatWith(\n *     moves$.pipe(\n *       map(() => 'move')\n *     )\n *   )\n * )\n * .subscribe(x => console.log(x));\n *\n * // 'click'\n * // 'move'\n * // 'move'\n * // 'move'\n * // ...\n * ```\n *\n * @param otherSources Other observable sources to subscribe to, in sequence, after the original source is complete.\n * @return A function that returns an Observable that concatenates\n * subscriptions to the source and provided Observables subscribing to the next\n * only once the current subscription completes.\n */\nexport function concatWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return concat(...otherSources);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscribable } from '../types';\n\n/**\n * Used to convert a subscribable to an observable.\n *\n * Currently, this is only used within internals.\n *\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\n * https://github.com/ReactiveX/rxjs/issues/5909\n *\n * @param subscribable A subscribable\n */\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\n\n/**\n * An object used to configure {@link connect} operator.\n */\nexport interface ConnectConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default, this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n}\n\n/**\n * The default configuration for `connect`.\n */\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n};\n\n/**\n * Creates an observable by multicasting the source within a function that\n * allows the developer to define the usage of the multicast prior to connection.\n *\n * This is particularly useful if the observable source you wish to multicast could\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\n * case of totally synchronous sources will fail to share a single subscription with\n * multiple consumers, as by the time the subscription to the result of {@link share}\n * has returned, if the source is synchronous its internal reference count will jump from\n * 0 to 1 back to 0 and reset.\n *\n * To use `connect`, you provide a `selector` function that will give you\n * a multicast observable that is not yet connected. You then use that multicast observable\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\n * generally, but not always, accomplished with {@link merge}.\n *\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\n * to use the {@link takeWhile} operator instead.\n *\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\n * multicast will be connected to the source.\n *\n * ## Example\n *\n * Sharing a totally synchronous observable\n *\n * ```ts\n * import { of, tap, connect, merge, map, filter } from 'rxjs';\n *\n * const source$ = of(1, 2, 3, 4, 5).pipe(\n *   tap({\n *     subscribe: () => console.log('subscription started'),\n *     next: n => console.log(`source emitted ${ n }`)\n *   })\n * );\n *\n * source$.pipe(\n *   // Notice in here we're merging 3 subscriptions to `shared$`.\n *   connect(shared$ => merge(\n *     shared$.pipe(map(n => `all ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${ n }`))\n *   ))\n * )\n * .subscribe(console.log);\n *\n * // Expected output: (notice only one subscription)\n * 'subscription started'\n * 'source emitted 1'\n * 'all 1'\n * 'odd 1'\n * 'source emitted 2'\n * 'all 2'\n * 'even 2'\n * 'source emitted 3'\n * 'all 3'\n * 'odd 3'\n * 'source emitted 4'\n * 'all 4'\n * 'even 4'\n * 'source emitted 5'\n * 'all 5'\n * 'odd 5'\n * ```\n *\n * @param selector A function used to set up the multicast. Gives you a multicast observable\n * that is not yet connected. With that, you're expected to create and return\n * and Observable, that when subscribed to, will utilize the multicast observable.\n * After this function is executed -- and its return value subscribed to -- the\n * operator will subscribe to the source, and the connection will be made.\n * @param config The configuration object for `connect`.\n */\nexport function connect<T, O extends ObservableInput<unknown>>(\n  selector: (shared: Observable<T>) => O,\n  config: ConnectConfig<T> = DEFAULT_CONFIG\n): OperatorFunction<T, ObservedValueOf<O>> {\n  const { connector } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { reduce } from './reduce';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n *\n * ```ts\n * import { interval, fromEvent, takeUntil, count } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n *\n * ```ts\n * import { range, count } from 'rxjs';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param predicate A function that is used to analyze the value and the index and\n * determine whether or not to increment the count. Return `true` to increment the count,\n * and return `false` to keep the count the same.\n * If the predicate is not provided, every value will be counted.\n * @return A function that returns an Observable that emits one number that\n * represents the count of emissions.\n */\nexport function count<T>(predicate?: (value: T, index: number) => boolean): OperatorFunction<T, number> {\n  return reduce((total, value, i) => (!predicate || predicate(value, i) ? total + 1 : total), 0);\n}\n", "import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.svg)\n *\n * `debounce` delays notifications emitted by the source Observable, but drops previous\n * pending delayed emissions if a new notification arrives on the source Observable.\n * This operator keeps track of the most recent notification from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The notification is emitted only when the duration\n * Observable emits a next notification, and if no other notification was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * notification appears before the duration Observable emits, the previous notification will\n * not be emitted and a new duration is scheduled from `durationSelector` is scheduled.\n * If the completing event happens during the scheduled duration the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during the scheduled duration or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, scan, debounce, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   scan(i => ++i, 1),\n *   debounce(i => interval(200 * i))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n */\nexport function debounce<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    // The subscriber/subscription for the current debounce, if there is one.\n    let durationSubscriber: Subscriber<any> | null = null;\n\n    const emit = () => {\n      // Unsubscribe any current debounce subscription we have,\n      // we only cared about the first notification from it, and we\n      // want to clean that subscription up as soon as possible.\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        // We have a value! Free up memory first, then emit the value.\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Cancel any pending debounce duration. We don't\n          // need to null it out here yet tho, because we're just going\n          // to create another one in a few lines.\n          durationSubscriber?.unsubscribe();\n          hasValue = true;\n          lastValue = value;\n          // Capture our duration subscriber, so we can unsubscribe it when we're notified\n          // and we're going to emit the value.\n          durationSubscriber = createOperatorSubscriber(subscriber, emit, noop);\n          // Subscribe to the duration.\n          innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = durationSubscriber = null;\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n *\n * If no clicks happen in 5 seconds, then emit 'no clicks'\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param defaultValue The default value used if the source\n * Observable is empty.\n * @return A function that returns an Observable that emits either the\n * specified `defaultValue` if the source Observable emits no items, or the\n * values emitted by the source Observable.\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => {\n          if (!hasValue) {\n            subscriber.next(defaultValue!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers\u2019 `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n", "import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => ObservableInput<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` operator shifts each emitted value from the source Observable by\n * a time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the value emitted from\n * the source Observable as the first argument to the `delayDurationSelector`.\n * The `delayDurationSelector` function should return an {@link ObservableInput},\n * that is internally converted to an Observable that is called the \"duration\"\n * Observable.\n *\n * The source value is emitted on the output Observable only when the \"duration\"\n * Observable emits ({@link guide/glossary-and-semantics#next next}s) any value.\n * Upon that, the \"duration\" Observable gets unsubscribed.\n *\n * Before RxJS V7, the {@link guide/glossary-and-semantics#complete completion}\n * of the \"duration\" Observable would have been triggering the emission of the\n * source value to the output Observable, but with RxJS V7, this is not the case\n * anymore.\n *\n * Only next notifications (from the \"duration\" Observable) trigger values from\n * the source Observable to be passed to the output Observable. If the \"duration\"\n * Observable only emits the complete notification (without next), the value\n * emitted by the source Observable will never get to the output Observable - it\n * will be swallowed. If the \"duration\" Observable errors, the error will be\n * propagated to the output Observable.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param delayDurationSelector A function that returns an `ObservableInput` for\n * each `value` emitted by the source Observable, which is then used to delay the\n * emission of that `value` on the output Observable until the `ObservableInput`\n * returned from this function emits a next value. When called, beside `value`,\n * this function receives a zero-based `index` of the emission order.\n * @param subscriptionDelay An Observable that triggers the subscription to the\n * source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n", "import { observeNotification } from '../Notification';\nimport { OperatorFunction, ObservableNotification, ValueFromNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Converts an Observable of {@link ObservableNotification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link ObservableNotification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link ObservableNotification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n *\n * Convert an Observable of Notifications to an actual Observable\n *\n * ```ts\n * import { NextNotification, ErrorNotification, of, dematerialize } from 'rxjs';\n *\n * const notifA: NextNotification<string> = { kind: 'N', value: 'A' };\n * const notifB: NextNotification<string> = { kind: 'N', value: 'B' };\n * const notifE: ErrorNotification = { kind: 'E', error: new TypeError('x.toUpperCase is not a function') };\n *\n * const materialized = of(notifA, notifB, notifE);\n *\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe({\n *   next: x => console.log(x),\n *   error: e => console.error(e)\n * });\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link materialize}\n *\n * @return A function that returns an Observable that emits items and\n * notifications embedded in Notification objects emitted by the source\n * Observable.\n */\nexport function dematerialize<N extends ObservableNotification<any>>(): OperatorFunction<N, ValueFromNotification<N>> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a `keySelector` function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If the `keySelector` function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n *\n * A simple example with numbers\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .pipe(distinct())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * An example using the `keySelector` function\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo'},\n *   { age: 7, name: 'Bar'},\n *   { age: 5, name: 'Foo'}\n * )\n * .pipe(distinct(({ name }) => name))\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param keySelector Optional `function` to select which value you want to check as distinct.\n * @param flushes Optional `ObservableInput` for flushing the internal HashSet of the operator.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K, flushes?: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const distinctKeys = new Set();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const key = keySelector ? keySelector(value) : value;\n        if (!distinctKeys.has(key)) {\n          distinctKeys.add(key);\n          subscriber.next(value);\n        }\n      })\n    );\n\n    flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, () => distinctKeys.clear(), noop));\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n", "import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n *\n * An example comparing the name of persons\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo' },\n *   { age: 6, name: 'Foo' }\n * ).pipe(\n *   distinctUntilKeyChanged('name')\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo1' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo2' },\n *   { age: 6, name: 'Foo3' }\n * ).pipe(\n *   distinctUntilKeyChanged('name', (x, y) => x.substring(0, 3) === y.substring(0, 3))\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values based on the key specified.\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n", "import { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n *\n * Throw an error if the document wasn't clicked within 1 second\n *\n * ```ts\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\n * )\n * .subscribe({\n *   next() {\n *    console.log('The document was clicked');\n *   },\n *   error(err) {\n *     console.error(err.message);\n *   }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n * @return A function that returns an Observable that throws an error if the\n * source Observable completed without emitting.\n */\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\n      )\n    );\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n", "import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n *\n * Emit only the third click event\n *\n * ```ts\n * import { fromEvent, elementAt } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOfRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return A function that returns an Observable that emits a single item, if\n * it is found. Otherwise, it will emit the default value if given. If not, it\n * emits an error.\n */\nexport function elementAt<T, D = T>(index: number, defaultValue?: D): OperatorFunction<T, T | D> {\n  if (index < 0) {\n    throw new ArgumentOutOfRangeError();\n  }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      filter((v, i) => i === index),\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new ArgumentOutOfRangeError())\n    );\n}\n", "/** prettier */\nimport { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ValueFromArray } from '../types';\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T, A extends unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\n\nexport function endWith<T, A extends unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that will emit all values from the source, then synchronously emit\n * the provided value(s) immediately after the source completes.\n *\n * NOTE: Passing a last argument of a Scheduler is _deprecated_, and may result in incorrect\n * types in TypeScript.\n *\n * This is useful for knowing when an observable ends. Particularly when paired with an\n * operator like {@link takeUntil}\n *\n * ![](endWith.png)\n *\n * ## Example\n *\n * Emit values to know when an interval starts and stops. The interval will\n * stop when a user clicks anywhere on the document.\n *\n * ```ts\n * import { interval, map, fromEvent, startWith, takeUntil, endWith } from 'rxjs';\n *\n * const ticker$ = interval(5000).pipe(\n *   map(() => 'tick')\n * );\n *\n * const documentClicks$ = fromEvent(document, 'click');\n *\n * ticker$.pipe(\n *   startWith('interval started'),\n *   takeUntil(documentClicks$),\n *   endWith('interval ended by click')\n * )\n * .subscribe(x => console.log(x));\n *\n * // Result (assuming a user clicks after 15 seconds)\n * // 'interval started'\n * // 'tick'\n * // 'tick'\n * // 'tick'\n * // 'interval ended by click'\n * ```\n *\n * @see {@link startWith}\n * @see {@link concat}\n * @see {@link takeUntil}\n *\n * @param values Items you want the modified Observable to emit last.\n * @return A function that returns an Observable that emits all values from the\n * source, then synchronously emits the provided value(s) immediately after the\n * source completes.\n */\nexport function endWith<T>(...values: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...values)) as Observable<T>;\n}\n", "import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function every<T>(predicate: BooleanConstructor): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T>(\n  predicate: BooleanConstructor,\n  thisArg: any\n): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, boolean>;\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, boolean>;\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * <span class=\"informal\">If all values pass predicate before the source completes, emits true before completion,\n * otherwise emit false, then complete.</span>\n *\n * ![](every.png)\n *\n * ## Example\n *\n * A simple example emitting true if all elements are less than 5, false otherwise\n *\n * ```ts\n * import { of, every } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5, 6)\n *   .pipe(every(x => x < 5))\n *   .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return A function that returns an Observable of booleans that determines if\n * all items of the source Observable meet the condition specified.\n */\nexport function every<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          if (!predicate.call(thisArg, value, index++, source)) {\n            subscriber.next(false);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaustAll}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, exhaustMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(() => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable containing projected\n * Observables of each item of the source, ignoring projected Observables that\n * start before their preceding Observable has completed.\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));\n  }\n  return operate((source, subscriber) => {\n    let index = 0;\n    let innerSub: Subscriber<T> | null = null;\n    let isComplete = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (outerValue) => {\n          if (!innerSub) {\n            innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n              innerSub = null;\n              isComplete && subscriber.complete();\n            });\n            innerFrom(project(outerValue, index++)).subscribe(innerSub);\n          }\n        },\n        () => {\n          isComplete = true;\n          !innerSub && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { exhaustMap } from './exhaustMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaustAll.svg)\n *\n * `exhaustAll` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaustAll` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, map, interval, take, exhaustAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(5)))\n * );\n * const result = higherOrder.pipe(exhaustAll());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable that takes a source of\n * Observables and propagates the first Observable exclusively until it\n * completes before subscribing to the next.\n */\nexport function exhaustAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return exhaustMap(identity);\n}\n", "import { exhaustAll } from './exhaustAll';\n\n/**\n * @deprecated Renamed to {@link exhaustAll}. Will be removed in v8.\n */\nexport const exhaust = exhaustAll;\n", "import { OperatorFunction, ObservableInput, ObservedValueOf, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. If you need to schedule the inner subscription,\n * use `subscribeOn` within the projection function: `expand((value) => fn(value).pipe(subscribeOn(scheduler)))`.\n * Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent: number | undefined,\n  scheduler: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n *\n * Start emitting the powers of two on every click, at most 10 of them\n *\n * ```ts\n * import { fromEvent, map, expand, of, delay, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   map(() => 1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10)\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return A function that returns an Observable that emits the source values\n * and also result of applying the projection function to each value emitted on\n * the output Observable and merging the results of the Observables obtained\n * from this transformation.\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent = Infinity,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>> {\n  concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;\n  return operate((source, subscriber) =>\n    mergeInternals(\n      // General merge params\n      source,\n      subscriber,\n      project,\n      concurrent,\n\n      // onBeforeNext\n      undefined,\n\n      // Expand-specific\n      true, // Use expand path\n      scheduler // Inner subscription scheduler\n    )\n  );\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function find<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, S extends T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => value is S,\n  thisArg: A\n): OperatorFunction<T, S | undefined>;\nexport function find<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S\n): OperatorFunction<T, S | undefined>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, T | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found\n * (emits `undefined` instead).\n *\n * ## Example\n *\n * Find and emit the first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, find } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function find<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, T | undefined> {\n  return operate(createFind(predicate, thisArg, 'value'));\n}\n\nexport function createFind<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: any,\n  emit: 'value' | 'index'\n) {\n  const findIndex = emit === 'index';\n  return (source: Observable<T>, subscriber: Subscriber<any>) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          const i = index++;\n          if (predicate.call(thisArg, value, i, source)) {\n            subscriber.next(findIndex ? i : value);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(findIndex ? -1 : undefined);\n          subscriber.complete();\n        }\n      )\n    );\n  };\n}\n", "import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createFind } from './find';\n\nexport function findIndex<T>(predicate: BooleanConstructor): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, number>;\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number>;\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n *\n * Emit the index of first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, findIndex } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the index of the\n * first item that matches the condition.\n */\nexport function findIndex<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, number> {\n  return operate(createFind(predicate, thisArg, 'index'));\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { ObservableInput, Observer, OperatorFunction, SubjectLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\n\nexport interface BasicGroupByOptions<K, T> {\n  element?: undefined;\n  duration?: (grouped: GroupedObservable<K, T>) => ObservableInput<any>;\n  connector?: () => SubjectLike<T>;\n}\n\nexport interface GroupByOptionsWithElement<K, E, T> {\n  element: (value: T) => E;\n  duration?: (grouped: GroupedObservable<K, E>) => ObservableInput<any>;\n  connector?: () => SubjectLike<E>;\n}\n\nexport function groupBy<T, K>(key: (value: T) => K, options: BasicGroupByOptions<K, T>): OperatorFunction<T, GroupedObservable<K, T>>;\n\nexport function groupBy<T, K, E>(\n  key: (value: T) => K,\n  options: GroupByOptionsWithElement<K, E, T>\n): OperatorFunction<T, GroupedObservable<K, E>>;\n\nexport function groupBy<T, K extends T>(\n  key: (value: T) => value is K\n): OperatorFunction<T, GroupedObservable<true, K> | GroupedObservable<false, Exclude<T, K>>>;\n\nexport function groupBy<T, K>(key: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K>(\n  key: (value: T) => K,\n  element: void,\n  duration: (grouped: GroupedObservable<K, T>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the key function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Otherwise, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the `key` field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the element function.\n *\n * ## Examples\n *\n * Group objects by `id` and return as array\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [])))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [{ id: 1, name: 'JavaScript' }, { id: 1, name: 'TypeScript'}]\n * // [{ id: 2, name: 'Parcel' }, { id: 2, name: 'webpack'}]\n * // [{ id: 3, name: 'TSLint' }]\n * ```\n *\n * Pivot data on the `id` field\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce, map } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id, { element: p => p.name }),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [`${ group$.key }`]))),\n *   map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param key A function that extracts the key\n * for each item.\n * @param element A function that extracts the\n * return element for each item.\n * @param duration\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @param connector Factory function to create an\n * intermediate Subject through which grouped elements are emitted.\n * @return A function that returns an Observable that emits GroupedObservables,\n * each of which corresponds to a unique key value and each of which emits\n * those items from the source Observable that share that key value.\n *\n * @deprecated Use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n  connector?: () => Subject<R>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n// Impl\nexport function groupBy<T, K, R>(\n  keySelector: (value: T) => K,\n  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,\n  duration?: (grouped: GroupedObservable<any, any>) => ObservableInput<any>,\n  connector?: () => SubjectLike<any>\n): OperatorFunction<T, GroupedObservable<K, R>> {\n  return operate((source, subscriber) => {\n    let element: ((value: any) => any) | void;\n    if (!elementOrOptions || typeof elementOrOptions === 'function') {\n      element = elementOrOptions as ((value: any) => any);\n    } else {\n      ({ duration, element, connector } = elementOrOptions);\n    }\n\n    // A lookup for the groups that we have so far.\n    const groups = new Map<K, SubjectLike<any>>();\n\n    // Used for notifying all groups and the subscriber in the same way.\n    const notify = (cb: (group: Observer<any>) => void) => {\n      groups.forEach(cb);\n      cb(subscriber);\n    };\n\n    // Used to handle errors from the source, AND errors that occur during the\n    // next call from the source.\n    const handleError = (err: any) => notify((consumer) => consumer.error(err));\n\n    // The number of actively subscribed groups\n    let activeGroups = 0;\n\n    // Whether or not teardown was attempted on this subscription.\n    let teardownAttempted = false;\n\n    // Capturing a reference to this, because we need a handle to it\n    // in `createGroupedObservable` below. This is what we use to\n    // subscribe to our source observable. This sometimes needs to be unsubscribed\n    // out-of-band with our `subscriber` which is the downstream subscriber, or destination,\n    // in cases where a user unsubscribes from the main resulting subscription, but\n    // still has groups from this subscription subscribed and would expect values from it\n    // Consider:  `source.pipe(groupBy(fn), take(2))`.\n    const groupBySourceSubscriber = new OperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Because we have to notify all groups of any errors that occur in here,\n        // we have to add our own try/catch to ensure that those errors are propagated.\n        // OperatorSubscriber will only send the error to the main subscriber.\n        try {\n          const key = keySelector(value);\n\n          let group = groups.get(key);\n          if (!group) {\n            // Create our group subject\n            groups.set(key, (group = connector ? connector() : new Subject<any>()));\n\n            // Emit the grouped observable. Note that we can't do a simple `asObservable()` here,\n            // because the grouped observable has special semantics around reference counting\n            // to ensure we don't sever our connection to the source prematurely.\n            const grouped = createGroupedObservable(key, group);\n            subscriber.next(grouped);\n\n            if (duration) {\n              const durationSubscriber = createOperatorSubscriber(\n                // Providing the group here ensures that it is disposed of -- via `unsubscribe` --\n                // when the duration subscription is torn down. That is important, because then\n                // if someone holds a handle to the grouped observable and tries to subscribe to it\n                // after the connection to the source has been severed, they will get an\n                // `ObjectUnsubscribedError` and know they can't possibly get any notifications.\n                group as any,\n                () => {\n                  // Our duration notified! We can complete the group.\n                  // The group will be removed from the map in the finalization phase.\n                  group!.complete();\n                  durationSubscriber?.unsubscribe();\n                },\n                // Completions are also sent to the group, but just the group.\n                undefined,\n                // Errors on the duration subscriber are sent to the group\n                // but only the group. They are not sent to the main subscription.\n                undefined,\n                // Finalization: Remove this group from our map.\n                () => groups.delete(key)\n              );\n\n              // Start our duration notifier.\n              groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\n            }\n          }\n\n          // Send the value to our group.\n          group.next(element ? element(value) : value);\n        } catch (err) {\n          handleError(err);\n        }\n      },\n      // Source completes.\n      () => notify((consumer) => consumer.complete()),\n      // Error from the source.\n      handleError,\n      // Free up memory.\n      // When the source subscription is _finally_ torn down, release the subjects and keys\n      // in our groups Map, they may be quite large and we don't want to keep them around if we\n      // don't have to.\n      () => groups.clear(),\n      () => {\n        teardownAttempted = true;\n        // We only kill our subscription to the source if we have\n        // no active groups. As stated above, consider this scenario:\n        // source$.pipe(groupBy(fn), take(2)).\n        return activeGroups === 0;\n      }\n    );\n\n    // Subscribe to the source\n    source.subscribe(groupBySourceSubscriber);\n\n    /**\n     * Creates the actual grouped observable returned.\n     * @param key The key of the group\n     * @param groupSubject The subject that fuels the group\n     */\n    function createGroupedObservable(key: K, groupSubject: SubjectLike<any>) {\n      const result: any = new Observable<T>((groupSubscriber) => {\n        activeGroups++;\n        const innerSub = groupSubject.subscribe(groupSubscriber);\n        return () => {\n          innerSub.unsubscribe();\n          // We can kill the subscription to our source if we now have no more\n          // active groups subscribed, and a finalization was already attempted on\n          // the source.\n          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n        };\n      });\n      result.key = key;\n      return result;\n    }\n  });\n}\n\n/**\n * An observable of values that is the emitted by the result of a {@link groupBy} operator,\n * contains a `key` property for the grouping.\n */\nexport interface GroupedObservable<K, T> extends Observable<T> {\n  /**\n   * The key value for the grouped notifications.\n   */\n  readonly key: K;\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits `false` if the input Observable emits any values, or emits `true` if the\n * input Observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an Observable.</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n *\n * ```ts\n * import { Subject, isEmpty } from 'rxjs';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n *\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n *\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Outputs\n * // 'a'\n * // false\n * // 'b'\n * // 'c'\n * ```\n *\n * Emit `true` for an empty Observable\n *\n * ```ts\n * import { EMPTY, isEmpty } from 'rxjs';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return A function that returns an Observable that emits boolean value\n * indicating whether the source Observable was empty or not.\n */\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          subscriber.next(false);\n          subscriber.complete();\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { EMPTY } from '../observable/empty';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Waits for the source to complete, then emits the last N values from the source,\n * as specified by the `count` argument.\n *\n * ![](takeLast.png)\n *\n * `takeLast` results in an observable that will hold values up to `count` values in memory,\n * until the source completes. It then pushes all values in memory to the consumer, in the\n * order they were received from the source, then notifies the consumer that it is\n * complete.\n *\n * If for some reason the source completes before the `count` supplied to `takeLast` is reached,\n * all values received until that point are emitted, and then completion is notified.\n *\n * **Warning**: Using `takeLast` with an observable that never completes will result\n * in an observable that never emits a value.\n *\n * ## Example\n *\n * Take the last 3 values of an Observable with many values\n *\n * ```ts\n * import { range, takeLast } from 'rxjs';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return A function that returns an Observable that emits at most the last\n * `count` values emitted by the source Observable.\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        // This buffer will hold the values we are going to emit\n        // when the source completes. Since we only want to take the\n        // last N values, we can't emit until we're sure we're not getting\n        // any more values.\n        let buffer: T[] = [];\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              // Add the most recent value onto the end of our buffer.\n              buffer.push(value);\n              // If our buffer is now larger than the number of values we\n              // want to take, we remove the oldest value from the buffer.\n              count < buffer.length && buffer.shift();\n            },\n            () => {\n              // The source completed, we now know what are last values\n              // are, emit them in the order they were received.\n              for (const value of buffer) {\n                subscriber.next(value);\n              }\n              subscriber.complete();\n            },\n            // Errors are passed through to the consumer\n            undefined,\n            () => {\n              // During finalization release the values in our buffer.\n              buffer = null!;\n            }\n          )\n        );\n      });\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function last<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function last<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function last<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * It will throw an error if the source completes without notification or one that matches the predicate. It\n * returns the last value or if a predicate is provided last value that matches the predicate. It returns the\n * given default value if no notification is emitted or matches the predicate.\n *\n * ## Examples\n *\n * Last alphabet from the sequence\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last());\n *\n * result.subscribe(value => console.log(`Last alphabet: ${ value }`));\n *\n * // Outputs\n * // Last alphabet: z\n * ```\n *\n * Default value when the value in the predicate is not matched\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last(char => char === 'a', 'not found'));\n *\n * result.subscribe(value => console.log(`'a' is ${ value }.`));\n *\n * // Outputs\n * // 'a' is not found.\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n * @see {@link skipWhile}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return A function that returns an Observable that emits only the last item\n * satisfying the given condition from the source, or a NoSuchElementException\n * if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      takeLast(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n", "import { Notification } from '../Notification';\nimport { OperatorFunction, ObservableNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n *\n * Convert a faulty Observable to an Observable of Notifications\n *\n * ```ts\n * import { of, materialize, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n *\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification { kind: 'N', value: 'A', error: undefined, hasValue: true }\n * // - Notification { kind: 'N', value: 'B', error: undefined, hasValue: true }\n * // - Notification { kind: 'E', value: undefined, error: TypeError { message: x.toUpperCase is not a function }, hasValue: false }\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return A function that returns an Observable that emits\n * {@link Notification} objects that wrap the original emissions from the\n * source Observable with metadata.\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T> & ObservableNotification<T>> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          subscriber.next(Notification.createNext(value));\n        },\n        () => {\n          subscriber.next(Notification.createComplete());\n          subscriber.complete();\n        },\n        (err) => {\n          subscriber.next(Notification.createError(err));\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n *\n * Get the maximal value of a series of numbers\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(max())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 8\n * ```\n *\n * Use a comparer function to get the maximal item\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   max((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * largest value.\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) > 0 ? x : y) : (x, y) => (x > y ? x : y));\n}\n", "import { mergeMap } from './mergeMap';\n\n/**\n * @deprecated Renamed to {@link mergeMap}. Will be removed in v8.\n */\nexport const flatMap = mergeMap;\n", "import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)` */\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  concurrent?: number\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/**\n * @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead.\n * Details: https://rxjs.dev/deprecations/resultSelector\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n *\n * For each click event, start an interval Observable ticking every 1 second\n *\n * ```ts\n * import { fromEvent, mergeMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable`.\n * @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)`\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n", "import { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * The first parameter of the `mergeScan` is an `accumulator` function which is\n * being called every time the source Observable emits a value. `mergeScan` will\n * subscribe to the value returned by the `accumulator` function and will emit\n * values to the subscriber emitted by inner Observable.\n *\n * The `accumulator` function is being called with three parameters passed to it:\n * `acc`, `value` and `index`. The `acc` parameter is used as the state parameter\n * whose value is initially set to the `seed` parameter (the second parameter\n * passed to the `mergeScan` operator).\n *\n * `mergeScan` internally keeps the value of the `acc` parameter: as long as the\n * source Observable emits without inner Observable emitting, the `acc` will be\n * set to `seed`. The next time the inner Observable emits a value, `mergeScan`\n * will internally remember it and it will be passed to the `accumulator`\n * function as `acc` parameter the next time source emits.\n *\n * The `value` parameter of the `accumulator` function is the value emitted by the\n * source Observable, while the `index` is a number which represent the order of the\n * current emission by the source Observable. It starts with 0.\n *\n * The last parameter to the `mergeScan` is the `concurrent` value which defaults\n * to Infinity. It represents the maximum number of inner Observable subscriptions\n * at a time.\n *\n * ## Example\n *\n * Count the number of click events\n *\n * ```ts\n * import { fromEvent, map, mergeScan, of } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(map(() => 1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed)\n * );\n *\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @see {@link scan}\n * @see {@link switchScan}\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Infinity] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function mergeScan<T, R>(\n  accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n  seed: R,\n  concurrent = Infinity\n): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The accumulated state.\n    let state = seed;\n\n    return mergeInternals(\n      source,\n      subscriber,\n      (value, index) => accumulator(state, value, index),\n      concurrent,\n      (value) => {\n        state = value;\n      },\n      false,\n      undefined,\n      () => (state = null!)\n    );\n  });\n}\n", "import { ObservableInput, ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrency: [...ObservableInputTuple<A>, number]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\nexport function merge<T>(...args: unknown[]): OperatorFunction<T, unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n\n  return operate((source, subscriber) => {\n    mergeAll(concurrent)(from([source, ...(args as ObservableInput<T>[])], scheduler)).subscribe(subscriber);\n  });\n}\n", "import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { merge } from './merge';\n\n/**\n * Merge the values from all observables to a single observable result.\n *\n * Creates an observable, that when subscribed to, subscribes to the source\n * observable, and all other sources provided as arguments. All values from\n * every source are emitted from the resulting subscription.\n *\n * When all sources complete, the resulting observable will complete.\n *\n * When any source errors, the resulting observable will error.\n *\n * ## Example\n *\n * Joining all outputs from multiple user input event streams\n *\n * ```ts\n * import { fromEvent, map, mergeWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click').pipe(map(() => 'click'));\n * const mousemoves$ = fromEvent(document, 'mousemove').pipe(map(() => 'mousemove'));\n * const dblclicks$ = fromEvent(document, 'dblclick').pipe(map(() => 'dblclick'));\n *\n * mousemoves$\n *   .pipe(mergeWith(clicks$, dblclicks$))\n *   .subscribe(x => console.log(x));\n *\n * // result (assuming user interactions)\n * // 'mousemove'\n * // 'mousemove'\n * // 'mousemove'\n * // 'click'\n * // 'click'\n * // 'dblclick'\n * ```\n *\n * @see {@link merge}\n *\n * @param otherSources the sources to combine the current source with.\n * @return A function that returns an Observable that merges the values from\n * all given Observables.\n */\nexport function mergeWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return merge(...otherSources);\n}\n", "import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n *\n * Get the minimal value of a series of numbers\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(min())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 2\n * ```\n *\n * Use a comparer function to get the minimal item\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   min((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Bar'\n * ```\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * smallest value.\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) < 0 ? x : y) : (x, y) => (x < y ? x : y));\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subject The subject to multicast through.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(subject), refCount()` is equivalent to\n * `share({ connector: () => subject, resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subject The subject used to multicast.\n * @param selector A setup function to setup the multicast\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subject, selector)` is equivalent to\n * `connect(selector, { connector: () => subject })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subject: Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subjectFactory A factory that will be called to create the subject. Passing a function here\n * will cause the underlying subject to be \"reset\" on error, completion, or refCounted unsubscription of\n * the source.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(() => new BehaviorSubject('test')), refCount()` is equivalent to\n * `share({ connector: () => new BehaviorSubject('test') })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subjectFactory: () => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subjectFactory A factory that creates the subject used to multicast.\n * @param selector A function to setup the multicast and select the output.\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subjectFactory, selector)` is equivalent to\n * `connect(selector, { connector: subjectFactory })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subjectFactory: () => Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, R>(\n  subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n  selector?: (source: Observable<T>) => Observable<R>\n): OperatorFunction<T, R> {\n  const subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;\n\n  if (isFunction(selector)) {\n    // If a selector function is provided, then we're a \"normal\" operator that isn't\n    // going to return a ConnectableObservable. We can use `connect` to do what we\n    // need to do.\n    return connect(selector, {\n      connector: subjectFactory,\n    });\n  }\n\n  return (source: Observable<T>) => new ConnectableObservable<any>(source, subjectFactory);\n}\n", "import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { onErrorResumeNext as oERNCreate } from '../observable/onErrorResumeNext';\n\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables, subscribes to next one on error or complete.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { of, onErrorResumeNext, map } from 'rxjs';\n *\n * of(1, 2, 3, 0)\n *   .pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *\n *       return 10 / x;\n *     }),\n *     onErrorResumeNext(of(1, 2, 3))\n *   )\n *   .subscribe({\n *     next: val => console.log(val),\n *     error: err => console.log(err),          // Will never be called.\n *     complete: () => console.log('that\\'s it!')\n *   });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'that's it!'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables passed either directly or as an array.\n * @return A function that returns an Observable that emits values from source\n * Observable, but - if it errors - subscribes to the next passed Observable\n * and so on, until it completes or runs out of Observables.\n */\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  // For some reason, TS 4.1 RC gets the inference wrong here and infers the\n  // result to be `A[number][]` - completely dropping the ObservableInput part\n  // of the type. This makes no sense whatsoever. As a workaround, the type is\n  // asserted explicitly.\n  const nextSources = argsOrArgArray(sources) as unknown as ObservableInputTuple<A>;\n\n  return (source) => oERNCreate(source, ...nextSources);\n}\n\n/**\n * @deprecated Renamed. Use {@link onErrorResumeNextWith} instead. Will be removed in v8.\n */\nexport const onErrorResumeNext = onErrorResumeNextWith;\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n *\n * On every click (starting from the second), emit the relative distance to the previous click\n *\n * ```ts\n * import { fromEvent, pairwise, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(([first, second]) => {\n *     const x0 = first.clientX;\n *     const y0 = first.clientY;\n *     const x1 = second.clientX;\n *     const y1 = second.clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   })\n * );\n *\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return A function that returns an Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return operate((source, subscriber) => {\n    let prev: T;\n    let hasPrev = false;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const p = prev;\n        prev = value;\n        hasPrev && subscriber.next([p, value]);\n        hasPrev = true;\n      })\n    );\n  });\n}\n", "import { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n  k1: K1,\n  k2: K2,\n  k3: K3\n): OperatorFunction<T, T[K1][K2][K3]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4\n): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, ...rest: string[]): OperatorFunction<T, unknown>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T>(...properties: string[]): OperatorFunction<T, unknown>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted value.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings or numbers describing a path to a property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n *\n * Map every click to the tagName of the clicked target element\n *\n * ```ts\n * import { fromEvent, pluck } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n *\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param properties The nested properties to pluck from each source\n * value.\n * @return A function that returns an Observable of property values from the\n * source values.\n * @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8.\n */\nexport function pluck<T, R>(...properties: Array<string | number | symbol>): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return map((x) => {\n    let currentProp: any = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp?.[properties[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { connect } from './connect';\n\n/**\n * Returns a connectable observable that, when connected, will multicast\n * all values through a single underlying {@link Subject} instance.\n *\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * `source.pipe(publish())` is equivalent to\n * `connectable(source, { connector: () => new Subject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publish`, use {@link share} operator instead.\n * `source.pipe(publish(), refCount())` is equivalent to\n * `source.pipe(share({ resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Returns an observable, that when subscribed to, creates an underlying {@link Subject},\n * provides an observable view of it to a `selector` function, takes the observable result of\n * that selector function and subscribes to it, sending its values to the consumer, _then_ connects\n * the subject to the original source.\n *\n * @param selector A function used to setup multicasting prior to automatic connection.\n *\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `publish(selector)` is equivalent to `connect(selector)`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n *\n * Make `source$` hot by applying `publish` operator, then merge each inner observable into a single one\n * and subscribe\n *\n * ```ts\n * import { zip, interval, of, map, publish, merge, tap } from 'rxjs';\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9))\n *   .pipe(map(([, number]) => number));\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x)))\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @see {@link publishLast}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A function that returns a ConnectableObservable that upon connection\n * causes the source Observable to emit items to its Observers.\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ? (source) => connect(selector)(source) : (source) => multicast(new Subject<T>())(source);\n}\n", "import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Creates a {@link ConnectableObservable} that utilizes a {@link BehaviorSubject}.\n *\n * @param initialValue The initial value passed to the {@link BehaviorSubject}.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link BehaviorSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishBehavior(initValue))` is equivalent to\n * `connectable(source, { connector: () => new BehaviorSubject(initValue), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishBehavior`, use the {@link share} operator instead.\n * `source.pipe(publishBehavior(initValue), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new BehaviorSubject(initValue), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false  }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishBehavior<T>(initialValue: T): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported the selector function.\n  return (source) => {\n    const subject = new BehaviorSubject<T>(initialValue);\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n", "import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { ConnectableObservable, interval, publishLast, tap, take } from 'rxjs';\n *\n * const connectable = <ConnectableObservable<number>>interval(1000)\n *   .pipe(\n *     tap(x => console.log('side effect', x)),\n *     take(3),\n *     publishLast()\n *   );\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. A', x),\n *   error: err => console.log('Sub. A Error', err),\n *   complete: () => console.log('Sub. A Complete')\n * });\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. B', x),\n *   error: err => console.log('Sub. B Error', err),\n *   complete: () => console.log('Sub. B Complete')\n * });\n *\n * connectable.connect();\n *\n * // Results:\n * // 'side effect 0'   - after one second\n * // 'side effect 1'   - after two seconds\n * // 'side effect 2'   - after three seconds\n * // 'Sub. A 2'        - immediately after 'side effect 2'\n * // 'Sub. B 2'\n * // 'Sub. A Complete'\n * // 'Sub. B Complete'\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return A function that returns an Observable that emits elements of a\n * sequence produced by multicasting the source sequence.\n * @deprecated Will be removed in v8. To create a connectable observable with an\n * {@link AsyncSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishLast())` is equivalent to\n * `connectable(source, { connector: () => new AsyncSubject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishLast`, use the {@link share} operator instead.\n * `source.pipe(publishLast(), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new AsyncSubject(), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported a selector function like `publish` and `publishReplay`.\n  return (source) => {\n    const subject = new AsyncSubject<T>();\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n", "import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { MonoTypeOperatorFunction, OperatorFunction, TimestampProvider, ObservableInput, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T>(\n  bufferSize?: number,\n  windowTime?: number,\n  timestampProvider?: TimestampProvider\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Creates an observable, that when subscribed to, will create a {@link ReplaySubject},\n * and pass an observable from it (using [asObservable](api/index/class/Subject#asObservable)) to\n * the `selector` function, which then returns an observable that is subscribed to before\n * \"connecting\" the source to the internal `ReplaySubject`.\n *\n * Since this is deprecated, for additional details see the documentation for {@link connect}.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector A function used to setup the multicast.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `source.pipe(publishReplay(size, window, selector, scheduler))` is equivalent to\n * `source.pipe(connect(selector, { connector: () => new ReplaySubject(size, window, scheduler) }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: (shared: Observable<T>) => O,\n  timestampProvider?: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector Passing `undefined` here determines that this operator will return a {@link ConnectableObservable}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: undefined,\n  timestampProvider: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, R>(\n  bufferSize?: number,\n  windowTime?: number,\n  selectorOrScheduler?: TimestampProvider | OperatorFunction<T, R>,\n  timestampProvider?: TimestampProvider\n) {\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  // Note, we're passing `selector!` here, because at runtime, `undefined` is an acceptable argument\n  // but it makes our TypeScript signature for `multicast` unhappy (as it should, because it's gross).\n  return (source: Observable<T>) => multicast(new ReplaySubject<T>(bufferSize, windowTime, timestampProvider), selector!)(source);\n}\n", "import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\n\n/**\n * Creates an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of the Observable to which\n * the operator is applied and supplied Observables.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, raceWith } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * obs1\n *   .pipe(raceWith(obs2, obs3))\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param otherSources Sources used to race for which Observable emits first.\n * @return A function that returns an Observable that mirrors the output of the\n * first Observable to emit an item.\n */\nexport function raceWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return !otherSources.length\n    ? identity\n    : operate((source, subscriber) => {\n        raceInit<T | A[number]>([source, ...otherSources])(subscriber);\n      });\n}\n", "import { Subscription } from '../Subscription';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\n\nexport interface RepeatConfig {\n  /**\n   * The number of times to repeat the source. Defaults to `Infinity`.\n   */\n  count?: number;\n\n  /**\n   * If a `number`, will delay the repeat of the source by that number of milliseconds.\n   * If a function, it will provide the number of times the source has been subscribed to,\n   * and the return value should be a valid observable input that will notify when the source\n   * should be repeated. If the notifier observable is empty, the result will complete.\n   */\n  delay?: number | ((count: number) => ObservableInput<any>);\n}\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Repeat will output values from a source until the source completes, then it will resubscribe to the\n * source a specified number of times, with a specified delay. Repeat can be particularly useful in\n * combination with closing operators like {@link take}, {@link takeUntil}, {@link first}, or {@link takeWhile},\n * as it can be used to restart a source again from scratch.\n *\n * Repeat is very similar to {@link retry}, where {@link retry} will resubscribe to the source in the error case, but\n * `repeat` will resubscribe if the source completes.\n *\n * Note that `repeat` will _not_ catch errors. Use {@link retry} for that.\n *\n * - `repeat(0)` returns an empty observable\n * - `repeat()` will repeat forever\n * - `repeat({ delay: 200 })` will repeat forever, with a delay of 200ms between repetitions.\n * - `repeat({ count: 2, delay: 400 })` will repeat twice, with a delay of 400ms between repetitions.\n * - `repeat({ delay: (count) => timer(count * 1000) })` will repeat forever, but will have a delay that grows by one second for each repetition.\n *\n * ## Example\n *\n * Repeat a message stream\n *\n * ```ts\n * import { of, repeat } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const result = source.pipe(repeat(3));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results\n * // 'Repeat message'\n * // 'Repeat message'\n * // 'Repeat message'\n * ```\n *\n * Repeat 3 values, 2 times\n *\n * ```ts\n * import { interval, take, repeat } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(take(3), repeat(2));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Defining two complex repeats with delays on the same source.\n * Note that the second repeat cannot be called until the first\n * repeat as exhausted it's count.\n *\n * ```ts\n * import { defer, of, repeat } from 'rxjs';\n *\n * const source = defer(() => {\n *    return of(`Hello, it is ${new Date()}`)\n * });\n *\n * source.pipe(\n *    // Repeat 3 times with a delay of 1 second between repetitions\n *    repeat({\n *      count: 3,\n *      delay: 1000,\n *    }),\n *\n *    // *Then* repeat forever, but with an exponential step-back\n *    // maxing out at 1 minute.\n *    repeat({\n *      delay: (count) => timer(Math.min(60000, 2 ^ count * 1000))\n *    })\n * )\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param count The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n */\nexport function repeat<T>(countOrConfig?: number | RepeatConfig): MonoTypeOperatorFunction<T> {\n  let count = Infinity;\n  let delay: RepeatConfig['delay'];\n\n  if (countOrConfig != null) {\n    if (typeof countOrConfig === 'object') {\n      ({ count = Infinity, delay } = countOrConfig);\n    } else {\n      count = countOrConfig;\n    }\n  }\n\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let sourceSub: Subscription | null;\n\n        const resubscribe = () => {\n          sourceSub?.unsubscribe();\n          sourceSub = null;\n          if (delay != null) {\n            const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n            const notifierSubscriber = createOperatorSubscriber(subscriber, () => {\n              notifierSubscriber.unsubscribe();\n              subscribeToSource();\n            });\n            notifier.subscribe(notifierSubscriber);\n          } else {\n            subscribeToSource();\n          }\n        };\n\n        const subscribeToSource = () => {\n          let syncUnsub = false;\n          sourceSub = source.subscribe(\n            createOperatorSubscriber(subscriber, undefined, () => {\n              if (++soFar < count) {\n                if (sourceSub) {\n                  resubscribe();\n                } else {\n                  syncUnsub = true;\n                }\n              } else {\n                subscriber.complete();\n              }\n            })\n          );\n\n          if (syncUnsub) {\n            resubscribe();\n          }\n        };\n\n        subscribeToSource();\n      });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n *\n * Repeat a message stream on click\n *\n * ```ts\n * import { of, fromEvent, repeatWhen } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * const result = source.pipe(repeatWhen(() => documentClick$));\n *\n * result.subscribe(data => console.log(data))\n * ```\n *\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param notifier Function that receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of a `complete`.\n * @deprecated Will be removed in v9 or v10. Use {@link repeat}'s {@link RepeatConfig#delay delay} option instead.\n * Instead of `repeatWhen(() => notify$)`, use: `repeat({ delay: () => notify$ })`.\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<void>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let completions$: Subject<void>;\n    let isNotifierComplete = false;\n    let isMainComplete = false;\n\n    /**\n     * Checks to see if we can complete the result, completes it, and returns `true` if it was completed.\n     */\n    const checkComplete = () => isMainComplete && isNotifierComplete && (subscriber.complete(), true);\n    /**\n     * Gets the subject to send errors through. If it doesn't exist,\n     * we know we need to setup the notifier.\n     */\n    const getCompletionSubject = () => {\n      if (!completions$) {\n        completions$ = new Subject();\n\n        // If the call to `notifier` throws, it will be caught by the OperatorSubscriber\n        // In the main subscription -- in `subscribeForRepeatWhen`.\n        innerFrom(notifier(completions$)).subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            () => {\n              if (innerSub) {\n                subscribeForRepeatWhen();\n              } else {\n                // If we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                syncResub = true;\n              }\n            },\n            () => {\n              isNotifierComplete = true;\n              checkComplete();\n            }\n          )\n        );\n      }\n      return completions$;\n    };\n\n    const subscribeForRepeatWhen = () => {\n      isMainComplete = false;\n\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, () => {\n          isMainComplete = true;\n          // Check to see if we are complete, and complete if so.\n          // If we are not complete. Get the subject. This calls the `notifier` function.\n          // If that function fails, it will throw and `.next()` will not be reached on this\n          // line. The thrown error is caught by the _complete handler in this\n          // `OperatorSubscriber` and handled appropriately.\n          !checkComplete() && getCompletionSubject().next();\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        // It is important to null this out. Not only to free up memory, but\n        // to make sure code above knows we are in a subscribing state to\n        // handle synchronous resubscription.\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flags.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRepeatWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRepeatWhen();\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { Subscription } from '../Subscription';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\n * or an object described by this interface.\n */\nexport interface RetryConfig {\n  /**\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\n   * resubscribe on errors infinite number of times.\n   */\n  count?: number;\n  /**\n   * The number of milliseconds to delay before retrying, OR a function to\n   * return a notifier for delaying. If a function is given, that function should\n   * return a notifier that, when it emits will retry the source. If the notifier\n   * completes _without_ emitting, the resulting observable will complete without error,\n   * if the notifier errors, the error will be pushed to the result.\n   */\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\n  /**\n   * Whether or not to reset the retry counter when the retried subscription\n   * emits its first value.\n   */\n  resetOnSuccess?: boolean;\n}\n\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\n *\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * `count` resubscriptions rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\n *\n * ## Example\n *\n * ```ts\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\n *   retry(2) // retry 2 times on error\n * );\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 'Error!: Retried 2 times then quit!'\n * ```\n *\n * @see {@link retryWhen}\n *\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\n * @return A function that returns an Observable that will resubscribe to the\n * source stream when the source stream errors, at most `count` times.\n */\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\n  let config: RetryConfig;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount as number,\n    };\n  }\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n\n  return count <= 0\n    ? identity\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let innerSub: Subscription | null;\n        const subscribeForRetry = () => {\n          let syncUnsub = false;\n          innerSub = source.subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                // If we're resetting on success\n                if (resetOnSuccess) {\n                  soFar = 0;\n                }\n                subscriber.next(value);\n              },\n              // Completions are passed through to consumer.\n              undefined,\n              (err) => {\n                if (soFar++ < count) {\n                  // We are still under our retry count\n                  const resub = () => {\n                    if (innerSub) {\n                      innerSub.unsubscribe();\n                      innerSub = null;\n                      subscribeForRetry();\n                    } else {\n                      syncUnsub = true;\n                    }\n                  };\n\n                  if (delay != null) {\n                    // The user specified a retry delay.\n                    // They gave us a number, use a timer, otherwise, it's a function,\n                    // and we're going to call it to get a notifier.\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                    const notifierSubscriber = createOperatorSubscriber(\n                      subscriber,\n                      () => {\n                        // After we get the first notification, we\n                        // unsubscribe from the notifier, because we don't want anymore\n                        // and we resubscribe to the source.\n                        notifierSubscriber.unsubscribe();\n                        resub();\n                      },\n                      () => {\n                        // The notifier completed without emitting.\n                        // The author is telling us they want to complete.\n                        subscriber.complete();\n                      }\n                    );\n                    notifier.subscribe(notifierSubscriber);\n                  } else {\n                    // There was no notifier given. Just resub immediately.\n                    resub();\n                  }\n                } else {\n                  // We're past our maximum number of retries.\n                  // Just send along the error.\n                  subscriber.error(err);\n                }\n              }\n            )\n          );\n          if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            subscribeForRetry();\n          }\n        };\n        subscribeForRetry();\n      });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the `ObservableInput` returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * Retry an observable sequence on error based on custom criteria.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, retryWhen, tap, delayWhen, timer } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   map(value => {\n *     if (value > 5) {\n *       // error will be picked up by retryWhen\n *       throw value;\n *     }\n *     return value;\n *   }),\n *   retryWhen(errors =>\n *     errors.pipe(\n *       // log error message\n *       tap(value => console.log(`Value ${ value } was too high!`)),\n *       // restart in 5 seconds\n *       delayWhen(value => timer(value * 1000))\n *     )\n *   )\n * );\n *\n * result.subscribe(value => console.log(value));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 'Value 6 was too high!'\n * // - Wait 5 seconds then repeat\n * ```\n *\n * @see {@link retry}\n *\n * @param notifier Function that receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of an `error`.\n * @deprecated Will be removed in v9 or v10, use {@link retry}'s `delay` option instead.\n * Will be removed in v9 or v10. Use {@link retry}'s {@link RetryConfig#delay delay} option instead.\n * Instead of `retryWhen(() => notify$)`, use: `retry({ delay: () => notify$ })`.\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let errors$: Subject<any>;\n\n    const subscribeForRetryWhen = () => {\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n          if (!errors$) {\n            errors$ = new Subject();\n            innerFrom(notifier(errors$)).subscribe(\n              createOperatorSubscriber(subscriber, () =>\n                // If we have an innerSub, this was an asynchronous call, kick off the retry.\n                // Otherwise, if we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                innerSub ? subscribeForRetryWhen() : (syncResub = true)\n              )\n            );\n          }\n          if (errors$) {\n            // We have set up the notifier without error.\n            errors$.next(err);\n          }\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flag.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRetryWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRetryWhen();\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` `ObservableInput` emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` `ObservableInput` emits a value, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n *\n * On every click, sample the most recent `seconds` timer\n *\n * ```ts\n * import { fromEvent, interval, sample } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param notifier The `ObservableInput` to use for sampling the\n * source Observable.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable whenever the notifier\n * Observable emits value or completes.\n */\nexport function sample<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        hasValue = true;\n        lastValue = value;\n      })\n    );\n    innerFrom(notifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          if (hasValue) {\n            hasValue = false;\n            const value = lastValue!;\n            lastValue = null;\n            subscriber.next(value);\n          }\n        },\n        noop\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { sample } from './sample';\nimport { interval } from '../observable/interval';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n *\n * Every second, emit the most recent click at most once\n *\n * ```ts\n * import { fromEvent, sampleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable at the specified time\n * interval.\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return sample(interval(period, scheduler));\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so far (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to source observable and `compareTo` `ObservableInput` (that internally\n * gets converted to an observable) and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other completes, the returned observable will never complete.\n *\n * ## Example\n *\n * Figure out if the Konami code matches\n *\n * ```ts\n * import { from, fromEvent, map, bufferCount, mergeMap, sequenceEqual } from 'rxjs';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent<KeyboardEvent>(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(last11 => from(last11).pipe(sequenceEqual(codes)))\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param compareTo The `ObservableInput` sequence to compare the source sequence to.\n * @param comparator An optional function to compare each value pair.\n *\n * @return A function that returns an Observable that emits a single boolean\n * value representing whether or not the values emitted by the source\n * Observable and provided `ObservableInput` were equal in sequence.\n */\nexport function sequenceEqual<T>(\n  compareTo: ObservableInput<T>,\n  comparator: (a: T, b: T) => boolean = (a, b) => a === b\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    // The state for the source observable\n    const aState = createState<T>();\n    // The state for the compareTo observable;\n    const bState = createState<T>();\n\n    /** A utility to emit and complete */\n    const emit = (isEqual: boolean) => {\n      subscriber.next(isEqual);\n      subscriber.complete();\n    };\n\n    /**\n     * Creates a subscriber that subscribes to one of the sources, and compares its collected\n     * state -- `selfState` -- to the other source's collected state -- `otherState`. This\n     * is used for both streams.\n     */\n    const createSubscriber = (selfState: SequenceState<T>, otherState: SequenceState<T>) => {\n      const sequenceEqualSubscriber = createOperatorSubscriber(\n        subscriber,\n        (a: T) => {\n          const { buffer, complete } = otherState;\n          if (buffer.length === 0) {\n            // If there's no values in the other buffer\n            // and the other stream is complete, we know\n            // this isn't a match, because we got one more value.\n            // Otherwise, we push onto our buffer, so when the other\n            // stream emits, it can pull this value off our buffer and check it\n            // at the appropriate time.\n            complete ? emit(false) : selfState.buffer.push(a);\n          } else {\n            // If the other stream *does* have values in its buffer,\n            // pull the oldest one off so we can compare it to what we\n            // just got. If it wasn't a match, emit `false` and complete.\n            !comparator(a, buffer.shift()!) && emit(false);\n          }\n        },\n        () => {\n          // Or observable completed\n          selfState.complete = true;\n          const { complete, buffer } = otherState;\n          // If the other observable is also complete, and there's\n          // still stuff left in their buffer, it doesn't match, if their\n          // buffer is empty, then it does match. This is because we can't\n          // possibly get more values here anymore.\n          complete && emit(buffer.length === 0);\n          // Be sure to clean up our stream as soon as possible if we can.\n          sequenceEqualSubscriber?.unsubscribe();\n        }\n      );\n\n      return sequenceEqualSubscriber;\n    };\n\n    // Subscribe to each source.\n    source.subscribe(createSubscriber(aState, bState));\n    innerFrom(compareTo).subscribe(createSubscriber(bState, aState));\n  });\n}\n\n/**\n * A simple structure for the data used to test each sequence\n */\ninterface SequenceState<T> {\n  /** A temporary store for arrived values before they are checked */\n  buffer: T[];\n  /** Whether or not the sequence source has completed. */\n  complete: boolean;\n}\n\n/**\n * Creates a simple structure that is used to represent\n * data used to test each sequence.\n */\nfunction createState<T>(): SequenceState<T> {\n  return {\n    buffer: [],\n    complete: false,\n  };\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubjectLike, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\n\nexport interface ShareConfig<T> {\n  /**\n   * The factory used to create the subject that will connect the source observable to\n   * multicast consumers.\n   */\n  connector?: () => SubjectLike<T>;\n  /**\n   * If `true`, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"retried\" in the event of an error.\n   * If `false`, when an error comes from the source it will push the error into the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnError?: boolean | ((error: any) => ObservableInput<any>);\n  /**\n   * If `true`, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"repeated\" after it is done.\n   * If `false`, when the source completes, it will push the completion through the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\n   * or resubscriptions will resubscribe to that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnComplete?: boolean | (() => ObservableInput<any>);\n  /**\n   * If `true`, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\n   * again.\n   * If `false`, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnRefCountZero?: boolean | (() => ObservableInput<any>);\n}\n\nexport function share<T>(): MonoTypeOperatorFunction<T>;\n\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\n *\n * ![](share.png)\n *\n * ## Example\n *\n * Generate new multicast Observable from the `source` Observable value\n *\n * ```ts\n * import { interval, tap, map, take, share } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   tap(x => console.log('Processing: ', x)),\n *   map(x => x * x),\n *   take(6),\n *   share()\n * );\n *\n * source.subscribe(x => console.log('subscription 1: ', x));\n * source.subscribe(x => console.log('subscription 2: ', x));\n *\n * // Logs:\n * // Processing: 0\n * // subscription 1: 0\n * // subscription 2: 0\n * // Processing: 1\n * // subscription 1: 1\n * // subscription 2: 1\n * // Processing: 2\n * // subscription 1: 4\n * // subscription 2: 4\n * // Processing: 3\n * // subscription 1: 9\n * // subscription 2: 9\n * // Processing: 4\n * // subscription 1: 16\n * // subscription 2: 16\n * // Processing: 5\n * // subscription 1: 25\n * // subscription 2: 25\n * ```\n *\n * ## Example with notifier factory: Delayed reset\n *\n * ```ts\n * import { interval, take, share, timer } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   take(3),\n *   share({\n *     resetOnRefCountZero: () => timer(1000)\n *   })\n * );\n *\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\n *\n * // Logs:\n * // subscription 1:  0\n * // (subscription 1 unsubscribes here)\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\n * // subscription 2:  1\n * // subscription 2:  2\n * // (subscription 2 unsubscribes here)\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\n * // subscription 3:  0\n * // subscription 3:  1\n * // subscription 3:  2\n * ```\n *\n * @see {@link shareReplay}\n *\n * @return A function that returns an Observable that mirrors the source.\n */\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n  // It's necessary to use a wrapper here, as the _operator_ must be\n  // referentially transparent. Otherwise, it cannot be used in calls to the\n  // static `pipe` function - to create a partial pipeline.\n  //\n  // The _operator function_ - the function returned by the _operator_ - will\n  // not be referentially transparent - as it shares its source - but the\n  // _operator function_ is called when the complete pipeline is composed via a\n  // call to a source observable's `pipe` method - not when the static `pipe`\n  // function is called.\n  return (wrapperSource) => {\n    let connection: SafeSubscriber<T> | undefined;\n    let resetConnection: Subscription | undefined;\n    let subject: SubjectLike<T> | undefined;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n\n    const cancelReset = () => {\n      resetConnection?.unsubscribe();\n      resetConnection = undefined;\n    };\n    // Used to reset the internal state to a \"cold\"\n    // state, as though it had never been subscribed to.\n    const reset = () => {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    const resetAndUnsubscribe = () => {\n      // We need to capture the connection before\n      // we reset (if we need to reset).\n      const conn = connection;\n      reset();\n      conn?.unsubscribe();\n    };\n\n    return operate<T, T>((source, subscriber) => {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      // Create the subject if we don't have one yet. Grab a local reference to\n      // it as well, which avoids non-null assertions when using it and, if we\n      // connect to it now, then error/complete need a reference after it was\n      // reset.\n      const dest = (subject = subject ?? connector());\n\n      // Add the finalization directly to the subscriber - instead of returning it -\n      // so that the handling of the subscriber's unsubscription will be wired\n      // up _before_ the subscription to the source occurs. This is done so that\n      // the assignment to the source connection's `closed` property will be seen\n      // by synchronous firehose sources.\n      subscriber.add(() => {\n        refCount--;\n\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\n        // configuration.\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n\n      // The following line adds the subscription to the subscriber passed.\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\n      dest.subscribe(subscriber);\n\n      if (\n        !connection &&\n        // Check this shareReplay is still activate - it can be reset to 0\n        // and be \"unsubscribed\" _before_ it actually subscribes.\n        // If we were to subscribe then, it'd leak and get stuck.\n        refCount > 0\n      ) {\n        // We need to create a subscriber here - rather than pass an observer and\n        // assign the returned subscription to connection - because it's possible\n        // for reentrant subscriptions to the shared observable to occur and in\n        // those situations we want connection to be already-assigned so that we\n        // don't create another connection to the source.\n        connection = new SafeSubscriber({\n          next: (value) => dest.next(value),\n          error: (err) => {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: () => {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          },\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset<T extends unknown[] = never[]>(\n  reset: () => void,\n  on: boolean | ((...args: T) => ObservableInput<any>),\n  ...args: T\n): Subscription | undefined {\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  const onSubscriber = new SafeSubscriber({\n    next: () => {\n      onSubscriber.unsubscribe();\n      reset();\n    },\n  });\n\n  return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n", "import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\n * but an errored source can be retried.\n *\n * ## Why use `shareReplay`?\n *\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ## Reference counting\n *\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\n * object.\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\n * @param scheduler Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { MonoTypeOperatorFunction, OperatorFunction, TruthyTypesOf } from '../types';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function single<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that asserts that only one value is\n * emitted from the observable that matches the predicate. If no\n * predicate is provided, then it will assert that the observable\n * only emits one value.\n *\n * In the event that the observable is empty, it will throw an\n * {@link EmptyError}.\n *\n * In the event that two values are found that match the predicate,\n * or when there are two values emitted and no predicate, it will\n * throw a {@link SequenceError}\n *\n * In the event that no values match the predicate, if one is provided,\n * it will throw a {@link NotFoundError}\n *\n * ## Example\n *\n * Expect only `name` beginning with `'B'`\n *\n * ```ts\n * import { of, single } from 'rxjs';\n *\n * const source1 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Laney' },\n *  { name: 'Lily' }\n * );\n *\n * source1\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe(x => console.log(x));\n * // Emits 'Ben'\n *\n *\n * const source2 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Bradley' },\n *  { name: 'Lincoln' }\n * );\n *\n * source2\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: SequenceError('Too many values match')\n *\n *\n * const source3 = of(\n *  { name: 'Laney' },\n *  { name: 'Tracy' },\n *  { name: 'Lily' },\n *  { name: 'Lincoln' }\n * );\n *\n * source3\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: NotFoundError('No values match')\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {NotFoundError} Delivers an NotFoundError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @throws {SequenceError} Delivers a SequenceError if more than one value is emitted that matches the\n * provided predicate. If no predicate is provided, will deliver a SequenceError if more\n * than one value comes from the source\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return A function that returns an Observable that emits the single item\n * emitted by the source Observable that matches the predicate.\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let singleValue: T;\n    let seenValue = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          seenValue = true;\n          if (!predicate || predicate(value, index++, source)) {\n            hasValue && subscriber.error(new SequenceError('Too many matching values'));\n            hasValue = true;\n            singleValue = value;\n          }\n        },\n        () => {\n          if (hasValue) {\n            subscriber.next(singleValue);\n            subscriber.complete();\n          } else {\n            subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n          }\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { filter } from './filter';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * Skips the values until the sent notifications are equal or less than provided skip count. It raises\n * an error if skip count is equal or more than the actual number of emits and source raises an error.\n *\n * ## Example\n *\n * Skip the values before the emission\n *\n * ```ts\n * import { interval, skip } from 'rxjs';\n *\n * // emit every half second\n * const source = interval(500);\n * // skip the first 10 emitted values\n * const result = source.pipe(skip(10));\n *\n * result.subscribe(value => console.log(value));\n * // output: 10...11...12...13...\n * ```\n *\n * @see {@link last}\n * @see {@link skipWhile}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return A function that returns an Observable that skips the first `count`\n * values emitted by the source Observable.\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return filter((_, index) => count <= index);\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Skip a specified number of values before the completion of an observable.\n *\n * ![](skipLast.png)\n *\n * Returns an observable that will emit values as soon as it can, given a number of\n * skipped values. For example, if you `skipLast(3)` on a source, when the source\n * emits its fourth value, the first value the source emitted will finally be emitted\n * from the returned observable, as it is no longer part of what needs to be skipped.\n *\n * All values emitted by the result of `skipLast(N)` will be delayed by `N` emissions,\n * as each value is held in a buffer until enough values have been emitted that that\n * the buffered value may finally be sent to the consumer.\n *\n * After subscribing, unsubscribing will not result in the emission of the buffered\n * skipped values.\n *\n * ## Example\n *\n * Skip the last 2 values of an observable with many values\n *\n * ```ts\n * import { of, skipLast } from 'rxjs';\n *\n * const numbers = of(1, 2, 3, 4, 5);\n * const skipLastTwo = numbers.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * // (4 and 5 are skipped)\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @param skipCount Number of elements to skip from the end of the source Observable.\n * @return A function that returns an Observable that skips the last `count`\n * values emitted by the source Observable.\n */\nexport function skipLast<T>(skipCount: number): MonoTypeOperatorFunction<T> {\n  return skipCount <= 0\n    ? // For skipCounts less than or equal to zero, we are just mirroring the source.\n      identity\n    : operate((source, subscriber) => {\n        // A ring buffer to hold the values while we wait to see\n        // if we can emit it or it's part of the \"skipped\" last values.\n        // Note that it is the _same size_ as the skip count.\n        let ring: T[] = new Array(skipCount);\n        // The number of values seen so far. This is used to get\n        // the index of the current value when it arrives.\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Get the index of the value we have right now\n            // relative to all other values we've seen, then\n            // increment `seen`. This ensures we've moved to\n            // the next slot in our ring buffer.\n            const valueIndex = seen++;\n            if (valueIndex < skipCount) {\n              // If we haven't seen enough values to fill our buffer yet,\n              // Then we aren't to a number of seen values where we can\n              // emit anything, so let's just start by filling the ring buffer.\n              ring[valueIndex] = value;\n            } else {\n              // We are traversing over the ring array in such\n              // a way that when we get to the end, we loop back\n              // and go to the start.\n              const index = valueIndex % skipCount;\n              // Pull the oldest value out so we can emit it,\n              // and stuff the new value in it's place.\n              const oldValue = ring[index];\n              ring[index] = value;\n              // Emit the old value. It is important that this happens\n              // after we swap the value in the buffer, if it happens\n              // before we swap the value in the buffer, then a synchronous\n              // source can get the buffer out of whack.\n              subscriber.next(oldValue);\n            }\n          })\n        );\n\n        return () => {\n          // Release our values in memory\n          ring = null!;\n        };\n      });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values until the passed in observable\n * emits the first value. This can be particularly useful in combination with user interactions, responses of HTTP\n * requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally, the `skipUntil` operator subscribes to the passed in `notifier` `ObservableInput` (which gets converted\n * to an Observable) in order to recognize the emission of its first value. When `notifier` emits next, the operator\n * unsubscribes from it and starts emitting the values of the *source* observable until it completes or errors. It\n * will never let the *source* observable emit any values if the `notifier` completes or throws an error without\n * emitting a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere\n * within the page\n *\n * ```ts\n * import { interval, fromEvent, skipUntil } from 'rxjs';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipWhile}\n * @see {@link skipLast}\n *\n * @param notifier An `ObservableInput` that has to emit an item before the source Observable elements begin to\n * be mirrored by the resulting Observable.\n * @return A function that returns an Observable that skips items from the\n * source Observable until the `notifier` Observable emits an item, then emits the\n * remaining items.\n */\nexport function skipUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n\n    const skipSubscriber = createOperatorSubscriber(\n      subscriber,\n      () => {\n        skipSubscriber?.unsubscribe();\n        taking = true;\n      },\n      noop\n    );\n\n    innerFrom(notifier).subscribe(skipSubscriber);\n\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => taking && subscriber.next(value)));\n  });\n}\n", "import { Falsy, MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function skipWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, Extract<T, Falsy> extends never ? never : T>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => true): OperatorFunction<T, never>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * Skips all the notifications with a truthy predicate. It will not skip the notifications when the predicate is falsy.\n * It can also be skipped using index. Once the predicate is true, it will not be called again.\n *\n * ## Example\n *\n * Skip some super heroes\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from(['Green Arrow', 'SuperMan', 'Flash', 'SuperGirl', 'Black Canary'])\n * // Skip the heroes until SuperGirl\n * const example = source.pipe(skipWhile(hero => hero !== 'SuperGirl'));\n * // output: SuperGirl, Black Canary\n * example.subscribe(femaleHero => console.log(femaleHero));\n * ```\n *\n * Skip values from the array until index 5\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from([1, 2, 3, 4, 5, 6, 7, 9, 10]);\n * const example = source.pipe(skipWhile((_, i) => i !== 5));\n * // output: 6, 7, 9, 10\n * example.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return A function that returns an Observable that begins emitting items\n * emitted by the source Observable when the specified predicate becomes false.\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => (taking || (taking = !predicate(value, index++))) && subscriber.next(value))\n    );\n  });\n}\n", "import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n *\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one\n *\n * ```ts\n * import { fromEvent, tap, map, interval, switchAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map(() => interval(1000)));\n *\n * source\n *   .pipe(switchAll())\n *   .subscribe(x => console.log(x));\n *\n * // Output\n * // click\n * // 0\n * // 1\n * // 2\n * // 3\n * // ...\n * // click\n * // 0\n * // 1\n * // 2\n * // ...\n * // click\n * // ...\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n *\n * @return A function that returns an Observable that converts a higher-order\n * Observable into a first-order Observable producing values only from the most\n * recent Observable sequence.\n */\nexport function switchAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return switchMap(identity);\n}\n", "import { switchMap } from './switchMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)` */\nexport function switchMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable` (and optionally transformed through the deprecated\n * `resultSelector`) every time a value is emitted on the source Observable,\n * and taking only the values from the most recently projected inner\n * Observable.\n * @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)`\n */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n", "import { ObservableInput, ObservedValueOf, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\nimport { operate } from '../util/lift';\n\n// TODO: Generate a marble diagram for these docs.\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, emitting values\n * only from the most recently returned Observable.\n *\n * <span class=\"informal\">It's like {@link mergeScan}, but only the most recent\n * Observable returned by the accumulator is merged into the outer Observable.</span>\n *\n * @see {@link scan}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @return A function that returns an observable of the accumulated values.\n */\nexport function switchScan<T, R, O extends ObservableInput<any>>(\n  accumulator: (acc: R, value: T, index: number) => O,\n  seed: R\n): OperatorFunction<T, ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    // The state we will keep up to date to pass into our\n    // accumulator function at each new value from the source.\n    let state = seed;\n\n    // Use `switchMap` on our `source` to do the work of creating\n    // this operator. Note the backwards order here of `switchMap()(source)`\n    // to avoid needing to use `pipe` unnecessarily\n    switchMap(\n      // On each value from the source, call the accumulator with\n      // our previous state, the value and the index.\n      (value: T, index) => accumulator(state, value, index),\n      // Using the deprecated result selector here as a dirty trick\n      // to update our state with the flattened value.\n      (_, innerValue) => ((state = innerValue), innerValue)\n    )(source).subscribe(subscriber);\n\n    return () => {\n      // Release state on finalization\n      state = null!;\n    };\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n *\n * Emit click events only while the clientX property is greater than 200\n *\n * ```ts\n * import { fromEvent, takeWhile } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return A function that returns an Observable that emits values from the\n * source Observable so long as each value satisfies the condition defined by\n * the `predicate`, then completes.\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const result = predicate(value, index++);\n        (result || inclusive) && subscriber.next(value);\n        !result && subscriber.complete();\n      })\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\n/**\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\n *\n * It provides a useful set of callbacks a user can register to do side-effects in\n * cases other than what the usual {@link Observer} callbacks are\n * ({@link guide/glossary-and-semantics#next next},\n * {@link guide/glossary-and-semantics#error error} and/or\n * {@link guide/glossary-and-semantics#complete complete}).\n *\n * ## Example\n *\n * ```ts\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\n *\n * const source$ = fromEvent(document, 'click');\n * const result$ = source$.pipe(\n *   switchMap((_, i) => i % 2 === 0\n *     ? fromEvent(document, 'mousemove').pipe(\n *         tap({\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\n *         })\n *       )\n *     : interval(1_000).pipe(\n *         take(5),\n *         tap({\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\n *         })\n *       )\n *   )\n * );\n *\n * const subscription = result$.subscribe({\n *   next: console.log\n * });\n *\n * setTimeout(() => {\n *   console.log('Unsubscribe after 60 seconds');\n *   subscription.unsubscribe();\n * }, 60_000);\n * ```\n */\nexport interface TapObserver<T> extends Observer<T> {\n  /**\n   * The callback that `tap` operator invokes at the moment when the source Observable\n   * gets subscribed to.\n   */\n  subscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when an explicit\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\n   * `error` or `complete` events.\n   */\n  unsubscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when any kind of\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\n   * by the user. There is no difference in using this callback or the {@link finalize}\n   * operator, but if you're already using `tap` operator, you can use this callback\n   * instead. You'd get the same result in either case.\n   */\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link TapObserver}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n", "import { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * An object interface used by {@link throttle} or {@link throttleTime} that ensure\n * configuration options of these operators.\n *\n * @see {@link throttle}\n * @see {@link throttleTime}\n */\nexport interface ThrottleConfig {\n  /**\n   * If `true`, the resulting Observable will emit the first value from the source\n   * Observable at the **start** of the \"throttling\" process (when starting an\n   * internal timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the first value from the source Observable at the\n   * start of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `true`.\n   */\n  leading?: boolean;\n  /**\n   * If `true`, the resulting Observable will emit the last value from the source\n   * Observable at the **end** of the \"throttling\" process (when ending an internal\n   * timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the last value from the source Observable at the\n   * end of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `false`.\n   */\n  trailing?: boolean;\n}\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.svg)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttle, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(() => interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function that receives a value from the source\n * Observable, for computing the silencing duration for each source value,\n * returned as an `ObservableInput`.\n * @param config A configuration object to define `leading` and `trailing`\n * behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttle<T>(durationSelector: (value: T) => ObservableInput<any>, config?: ThrottleConfig): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const { leading = true, trailing = false } = config ?? {};\n    let hasValue = false;\n    let sendValue: T | null = null;\n    let throttled: Subscription | null = null;\n    let isComplete = false;\n\n    const endThrottling = () => {\n      throttled?.unsubscribe();\n      throttled = null;\n      if (trailing) {\n        send();\n        isComplete && subscriber.complete();\n      }\n    };\n\n    const cleanupThrottling = () => {\n      throttled = null;\n      isComplete && subscriber.complete();\n    };\n\n    const startThrottle = (value: T) =>\n      (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n\n    const send = () => {\n      if (hasValue) {\n        // Ensure we clear out our value and hasValue flag\n        // before we emit, otherwise reentrant code can cause\n        // issues here.\n        hasValue = false;\n        const value = sendValue!;\n        sendValue = null;\n        // Emit the value.\n        subscriber.next(value);\n        !isComplete && startThrottle(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Regarding the presence of throttled.closed in the following\n        // conditions, if a synchronous duration selector is specified - weird,\n        // but legal - an already-closed subscription will be assigned to\n        // throttled, so the subscription's closed property needs to be checked,\n        // too.\n        (value) => {\n          hasValue = true;\n          sendValue = value;\n          !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        },\n        () => {\n          isComplete = true;\n          !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { throttle, ThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { timer } from '../observable/timer';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * ### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param scheduler The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling. Defaults to {@link asyncScheduler}.\n * @param config A configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttleTime<T>(\n  duration: number,\n  scheduler: SchedulerLike = asyncScheduler,\n  config?: ThrottleConfig\n): MonoTypeOperatorFunction<T> {\n  const duration$ = timer(duration, scheduler);\n  return throttle(() => duration$, config);\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeInterval.png)\n *\n * ## Example\n *\n * Emit interval between current value with the last value\n *\n * ```ts\n * import { interval, timeInterval } from 'rxjs';\n *\n * const seconds = interval(1000);\n *\n * seconds\n *   .pipe(timeInterval())\n *   .subscribe(value => console.log(value));\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // { value: 0, interval: 1000 }\n * // { value: 1, interval: 1000 }\n * // { value: 2, interval: 1000 }\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return A function that returns an Observable that emits information about\n * value and interval.\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = asyncScheduler): OperatorFunction<T, TimeInterval<T>> {\n  return operate((source, subscriber) => {\n    let last = scheduler.now();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const now = scheduler.now();\n        const interval = now - last;\n        last = now;\n        subscriber.next(new TimeInterval(value, interval));\n      })\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\nexport class TimeInterval<T> {\n  /**\n   * @deprecated Internal implementation detail, do not construct directly. Will be made an interface in v8.\n   */\n  constructor(public value: T, public interval: number) {}\n}\n", "import { async } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { ObservableInput, OperatorFunction, SchedulerLike } from '../types';\nimport { timeout } from './timeout';\n\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(someDate, a$, scheduler)`, use the configuration object\n * `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(dueBy: Date, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use the configuration object\n *  `timeout({ each: 100, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(waitFor: number, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n\n/**\n * When the passed timespan elapses before the source emits any given value, it will unsubscribe from the source,\n * and switch the subscription to another observable.\n *\n * <span class=\"informal\">Used to switch to a different observable if your source is being slow.</span>\n *\n * Useful in cases where:\n *\n * - You want to switch to a different source that may be faster.\n * - You want to notify a user that the data stream is slow.\n * - You want to emit a custom error rather than the {@link TimeoutError} emitted\n *   by the default usage of {@link timeout}.\n *\n * If the first parameter is passed as Date and the time of the Date arrives before the first value arrives from the source,\n * it will unsubscribe from the source and switch the subscription to another observable.\n *\n * <span class=\"informal\">Use Date object to switch to a different observable if the first value doesn't arrive by a specific time.</span>\n *\n * Can be used to set a timeout only for the first value, however it's recommended to use the {@link timeout} operator with\n * the `first` configuration to get the same effect.\n *\n * ## Examples\n *\n * Fallback to a faster observable\n *\n * ```ts\n * import { interval, timeoutWith } from 'rxjs';\n *\n * const slow$ = interval(1000);\n * const faster$ = interval(500);\n *\n * slow$\n *   .pipe(timeoutWith(900, faster$))\n *   .subscribe(console.log);\n * ```\n *\n * Emit your own custom timeout error\n *\n * ```ts\n * import { interval, timeoutWith, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(1000);\n *\n * slow$\n *   .pipe(timeoutWith(900, throwError(() => new CustomTimeoutError())))\n *   .subscribe({\n *     error: err => console.error(err.message)\n *   });\n * ```\n *\n * @see {@link timeout}\n *\n * @param due When passed a number, used as the time (in milliseconds) allowed between each value from the source before timeout\n * is triggered. When passed a Date, used as the exact time at which the timeout will be triggered if the first value does not arrive.\n * @param withObservable The observable to switch to when timeout occurs.\n * @param scheduler The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it starts emitting values\n * from the `ObservableInput` passed as a second parameter.\n * @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use {@link timeout} with the configuration\n * object: `timeout({ each: 100, with: () => a$, scheduler })`. Instead of `timeoutWith(someDate, a$, scheduler)`, use {@link timeout}\n * with the configuration object: `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8.\n */\nexport function timeoutWith<T, R>(\n  due: number | Date,\n  withObservable: ObservableInput<R>,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T | R> {\n  let first: number | Date | undefined;\n  let each: number | undefined;\n  let _with: () => ObservableInput<R>;\n  scheduler = scheduler ?? async;\n\n  if (isValidDate(due)) {\n    first = due;\n  } else if (typeof due === 'number') {\n    each = due;\n  }\n\n  if (withObservable) {\n    _with = () => withObservable;\n  } else {\n    throw new TypeError('No observable provided to switch to');\n  }\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return timeout<T, ObservableInput<R>>({\n    first,\n    each,\n    scheduler,\n    with: _with,\n  });\n}\n", "import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default, it uses the `asyncScheduler` which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the document's click events\n *\n * ```ts\n * import { fromEvent, timestamp } from 'rxjs';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type { value: PointerEvent, timestamp: number }\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param timestampProvider An object with a `now()` method used to get the current timestamp.\n * @return A function that returns an Observable that attaches a timestamp to\n * each item emitted by the source Observable indicating when it was emitted.\n */\nexport function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => ({ value, timestamp: timestampProvider.now() }));\n}\n", "import { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * `windowBoundaries` emits an item. `windowBoundaries` can be any type that\n * `ObservableInput` accepts. It internally gets converted to an Observable.\n * Because each window is an Observable, the output is a higher-order Observable.\n *\n * ## Example\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, interval, window, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const sec = interval(1000);\n * const result = clicks.pipe(\n *   window(sec),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param windowBoundaries An `ObservableInput` that completes the\n * previous window and starts a new window.\n * @return A function that returns an Observable of windows, which are\n * Observables emitting values of the source Observable.\n */\nexport function window<T>(windowBoundaries: ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let windowSubject: Subject<T> = new Subject<T>();\n\n    subscriber.next(windowSubject.asObservable());\n\n    const errorHandler = (err: any) => {\n      windowSubject.error(err);\n      subscriber.error(err);\n    };\n\n    // Subscribe to our source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => windowSubject?.next(value),\n        () => {\n          windowSubject.complete();\n          subscriber.complete();\n        },\n        errorHandler\n      )\n    );\n\n    // Subscribe to the window boundaries.\n    innerFrom(windowBoundaries).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          windowSubject.complete();\n          subscriber.next((windowSubject = new Subject()));\n        },\n        noop,\n        errorHandler\n      )\n    );\n\n    return () => {\n      // Unsubscribing the subject ensures that anyone who has captured\n      // a reference to this window that tries to use it after it can\n      // no longer get values from the source will get an ObjectUnsubscribedError.\n      windowSubject?.unsubscribe();\n      windowSubject = null!;\n    };\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n *\n * Ignore every 3rd click event, starting from the first one\n *\n * ```ts\n * import { fromEvent, windowCount, map, skip, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3),\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n *\n * ```ts\n * import { fromEvent, windowCount, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll() // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of windows, which in turn are\n * Observable of values.\n */\nexport function windowCount<T>(windowSize: number, startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  const startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n\n  return operate((source, subscriber) => {\n    let windows = [new Subject<T>()];\n    let starts: number[] = [];\n    let count = 0;\n\n    // Open the first window.\n    subscriber.next(windows[0].asObservable());\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Emit the value through all current windows.\n          // We don't need to create a new window yet, we\n          // do that as soon as we close one.\n          for (const window of windows) {\n            window.next(value);\n          }\n          // Here we're using the size of the window array to figure\n          // out if the oldest window has emitted enough values. We can do this\n          // because the size of the window array is a function of the values\n          // seen by the subscription. If it's time to close it, we complete\n          // it and remove it.\n          const c = count - windowSize + 1;\n          if (c >= 0 && c % startEvery === 0) {\n            windows.shift()!.complete();\n          }\n\n          // Look to see if the next count tells us it's time to open a new window.\n          // TODO: We need to figure out if this really makes sense. We're technically\n          // emitting windows *before* we have a value to emit them for. It's probably\n          // more expected that we should be emitting the window when the start\n          // count is reached -- not before.\n          if (++count % startEvery === 0) {\n            const window = new Subject<T>();\n            windows.push(window);\n            subscriber.next(window.asObservable());\n          }\n        },\n        () => {\n          while (windows.length > 0) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        (err) => {\n          while (windows.length > 0) {\n            windows.shift()!.error(err);\n          }\n          subscriber.error(err);\n        },\n        () => {\n          starts = null!;\n          windows = null!;\n        }\n      )\n    );\n  });\n}\n", "import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Observer, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function windowTime<T>(windowTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number | null | void,\n  maxWindowSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with `maxWindowCount` instead of `take`\n *\n * ```ts\n * import { fromEvent, windowTime, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // take at most 2 emissions from each window\n *   mergeAll()                 // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param windowTimeSpan The amount of time, in milliseconds, to fill each window.\n * @param windowCreationInterval The interval at which to start new\n * windows.\n * @param maxWindowSize Max number of\n * values each window can emit before completion.\n * @param scheduler The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const windowCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxWindowSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active windows, their related subscriptions, and removal functions.\n    let windowRecords: WindowRecord<T>[] | null = [];\n    // If true, it means that every time we close a window, we want to start a new window.\n    // This is only really used for when *just* the time span is passed.\n    let restartOnClose = false;\n\n    const closeWindow = (record: { window: Subject<T>; subs: Subscription }) => {\n      const { window, subs } = record;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    /**\n     * Called every time we start a new window. This also does\n     * the work of scheduling the job to close the window.\n     */\n    const startWindow = () => {\n      if (windowRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const window = new Subject<T>();\n        const record = {\n          window,\n          subs,\n          seen: 0,\n        };\n        windowRecords.push(record);\n        subscriber.next(window.asObservable());\n        executeSchedule(subs, scheduler, () => closeWindow(record), windowTimeSpan);\n      }\n    };\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      // The user passed both a windowTimeSpan (required), and a creation interval\n      // That means we need to start new window on the interval, and those windows need\n      // to wait the required time span before completing.\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n\n    startWindow();\n\n    /**\n     * We need to loop over a copy of the window records several times in this operator.\n     * This is to save bytes over the wire more than anything.\n     * The reason we copy the array is that reentrant code could mutate the array while\n     * we are iterating over it.\n     */\n    const loop = (cb: (record: WindowRecord<T>) => void) => windowRecords!.slice().forEach(cb);\n\n    /**\n     * Used to notify all of the windows and the subscriber in the same way\n     * in the error and complete handlers.\n     */\n    const terminate = (cb: (consumer: Observer<any>) => void) => {\n      loop(({ window }) => cb(window));\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Notify all windows of the value.\n          loop((record) => {\n            record.window.next(value);\n            // If the window is over the max size, we need to close it.\n            maxWindowSize <= ++record.seen && closeWindow(record);\n          });\n        },\n        // Complete the windows and the downstream subscriber and clean up.\n        () => terminate((consumer) => consumer.complete()),\n        // Notify the windows and the downstream subscriber of the error and clean up.\n        (err) => terminate((consumer) => consumer.error(err))\n      )\n    );\n\n    // Additional finalization. This will be called when the\n    // destination tears down. Other finalizations are registered implicitly\n    // above via subscription.\n    return () => {\n      // Ensure that the buffer is released.\n      windowRecords = null!;\n    };\n  });\n}\n\ninterface WindowRecord<T> {\n  seen: number;\n  window: Subject<T>;\n  subs: Subscription;\n}\n", "import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, windowToggle, EMPTY, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n *   mergeAll()\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits a next notification, signals that the\n * associated window should complete.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (openValue: O) => ObservableInput<any>\n): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    const windows: Subject<T>[] = [];\n\n    const handleError = (err: any) => {\n      while (0 < windows.length) {\n        windows.shift()!.error(err);\n      }\n      subscriber.error(err);\n    };\n\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const window = new Subject<T>();\n          windows.push(window);\n          const closingSubscription = new Subscription();\n          const closeWindow = () => {\n            arrRemove(windows, window);\n            window.complete();\n            closingSubscription.unsubscribe();\n          };\n\n          let closingNotifier: Observable<any>;\n          try {\n            closingNotifier = innerFrom(closingSelector(openValue));\n          } catch (err) {\n            handleError(err);\n            return;\n          }\n\n          subscriber.next(window.asObservable());\n\n          closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n        },\n        noop\n      )\n    );\n\n    // Subscribe to the source to get things started.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Copy the windows array before we emit to\n          // make sure we don't have issues with reentrant code.\n          const windowsCopy = windows.slice();\n          for (const window of windowsCopy) {\n            window.next(value);\n          }\n        },\n        () => {\n          // Complete all of our windows before we complete.\n          while (0 < windows.length) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Add this finalization so that all window subjects are\n          // disposed of. This way, if a user tries to subscribe\n          // to a window *after* the outer subscription has been unsubscribed,\n          // they will get an error, instead of waiting forever to\n          // see if a value arrives.\n          while (0 < windows.length) {\n            windows.shift()!.unsubscribe();\n          }\n        }\n      )\n    );\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n *\n * Emit only the first two clicks events in every window of [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, windowWhen, interval, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let window: Subject<T> | null;\n    let closingSubscriber: Subscriber<any> | undefined;\n\n    /**\n     * When we get an error, we have to notify both the\n     * destination subscriber and the window.\n     */\n    const handleError = (err: any) => {\n      window!.error(err);\n      subscriber.error(err);\n    };\n\n    /**\n     * Called every time we need to open a window.\n     * Recursive, as it will start the closing notifier, which\n     * inevitably *should* call openWindow -- but may not if\n     * it is a \"never\" observable.\n     */\n    const openWindow = () => {\n      // We need to clean up our closing subscription,\n      // we only cared about the first next or complete notification.\n      closingSubscriber?.unsubscribe();\n\n      // Close our window before starting a new one.\n      window?.complete();\n\n      // Start the new window.\n      window = new Subject<T>();\n      subscriber.next(window.asObservable());\n\n      // Get our closing notifier.\n      let closingNotifier: Observable<any>;\n      try {\n        closingNotifier = innerFrom(closingSelector());\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      // Subscribe to the closing notifier, be sure\n      // to capture the subscriber (aka Subscription)\n      // so we can clean it up when we close the window\n      // and open a new one.\n      closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\n    };\n\n    // Start the first window.\n    openWindow();\n\n    // Subscribe to the source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => window!.next(value),\n        () => {\n          // The source completed, close the window and complete.\n          window!.complete();\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Be sure to clean up our closing subscription\n          // when this tears down.\n          closingSubscriber?.unsubscribe();\n          window = null!;\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\n\nexport function withLatestFrom<T, O extends unknown[]>(...inputs: [...ObservableInputTuple<O>]): OperatorFunction<T, [T, ...O]>;\n\nexport function withLatestFrom<T, O extends unknown[], R>(\n  ...inputs: [...ObservableInputTuple<O>, (...value: [T, ...O]) => R]\n): OperatorFunction<T, R>;\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n *\n * On every click event, emit an array with the latest timer event plus the click event\n *\n * ```ts\n * import { fromEvent, interval, withLatestFrom } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return A function that returns an Observable of projected values from the\n * most recent values from each input Observable, or an array of the most\n * recent values from each input Observable.\n */\nexport function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {\n  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;\n\n  return operate((source, subscriber) => {\n    const len = inputs.length;\n    const otherValues = new Array(len);\n    // An array of whether or not the other sources have emitted. Matched with them by index.\n    // TODO: At somepoint, we should investigate the performance implications here, and look\n    // into using a `Set()` and checking the `size` to see if we're ready.\n    let hasValue = inputs.map(() => false);\n    // Flipped true when we have at least one value from all other sources and\n    // we are ready to start emitting values.\n    let ready = false;\n\n    // Other sources. Note that here we are not checking `subscriber.closed`,\n    // this causes all inputs to be subscribed to, even if nothing can be emitted\n    // from them. This is an important distinction because subscription constitutes\n    // a side-effect.\n    for (let i = 0; i < len; i++) {\n      innerFrom(inputs[i]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            otherValues[i] = value;\n            if (!ready && !hasValue[i]) {\n              // If we're not ready yet, flag to show this observable has emitted.\n              hasValue[i] = true;\n              // Intentionally terse code.\n              // If all of our other observables have emitted, set `ready` to `true`,\n              // so we know we can start emitting values, then clean up the `hasValue` array,\n              // because we don't need it anymore.\n              (ready = hasValue.every(identity)) && (hasValue = null!);\n            }\n          },\n          // Completing one of the other sources has\n          // no bearing on the completion of our result.\n          noop\n        )\n      );\n    }\n\n    // Source subscription\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        if (ready) {\n          // We have at least one value from the other sources. Go ahead and emit.\n          const values = [value, ...otherValues];\n          subscriber.next(project ? project(...values) : values);\n        }\n      })\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { zip } from '../observable/zip';\nimport { joinAllInternals } from './joinAllInternals';\n\n/**\n * Collects all observable inner sources from the source, once the source completes,\n * it will subscribe to all inner sources, combining their values by index and emitting\n * them.\n *\n * @see {@link zipWith}\n * @see {@link zip}\n */\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: T[]) => R) {\n  return joinAllInternals(zip, project);\n}\n", "import { zip as zipStatic } from '../observable/zip';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { operate } from '../util/lift';\n\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  otherInputsAndProject: [...ObservableInputTuple<A>],\n  project: (...values: Cons<T, A>) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  ...otherInputsAndProject: [...ObservableInputTuple<A>, (...values: Cons<T, A>) => R]\n): OperatorFunction<T, R>;\n\n/**\n * @deprecated Replaced with {@link zipWith}. Will be removed in v8.\n */\nexport function zip<T, R>(...sources: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, any> {\n  return operate((source, subscriber) => {\n    zipStatic(source as ObservableInput<any>, ...(sources as Array<ObservableInput<any>>)).subscribe(subscriber);\n  });\n}\n", "import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { zip } from './zip';\n\n/**\n * Subscribes to the source, and the observable inputs provided as arguments, and combines their values, by index, into arrays.\n *\n * What is meant by \"combine by index\": The first value from each will be made into a single array, then emitted,\n * then the second value from each will be combined into a single array and emitted, then the third value\n * from each will be combined into a single array and emitted, and so on.\n *\n * This will continue until it is no longer able to combine values of the same index into an array.\n *\n * After the last value from any one completed source is emitted in an array, the resulting observable will complete,\n * as there is no way to continue \"zipping\" values together by index.\n *\n * Use-cases for this operator are limited. There are memory concerns if one of the streams is emitting\n * values at a much faster rate than the others. Usage should likely be limited to streams that emit\n * at a similar pace, or finite streams of known length.\n *\n * In many cases, authors want `combineLatestWith` and not `zipWith`.\n *\n * @param otherInputs other observable inputs to collate values from.\n * @return A function that returns an Observable that emits items by index\n * combined from the source Observable and provided Observables, in form of an\n * array.\n */\nexport function zipWith<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>> {\n  return zip(...otherInputs);\n}\n", "//////////////////////////////////////////////////////////\n// Here we need to reference our other deep imports\n// so VS code will figure out where they are\n// see conversation here:\n// https://github.com/microsoft/TypeScript/issues/43034\n//////////////////////////////////////////////////////////\n\n// tslint:disable: no-reference\n// It's tempting to add references to all of the deep-import locations, but\n// adding references to those that require DOM types breaks Node projects.\n/// <reference path=\"./operators/index.ts\" />\n/// <reference path=\"./testing/index.ts\" />\n// tslint:enable: no-reference\n\n/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\nexport { animationFrames } from './internal/observable/dom/animationFrames';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Promise Conversion */\nexport { lastValueFrom } from './internal/lastValueFrom';\nexport { firstValueFrom } from './internal/firstValueFrom';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { NotFoundError } from './internal/util/NotFoundError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { SequenceError } from './internal/util/SequenceError';\nexport { TimeoutError } from './internal/operators/timeout';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { connectable } from './internal/observable/connectable';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config, GlobalConfig } from './internal/config';\n\n/* Operators */\nexport { audit } from './internal/operators/audit';\nexport { auditTime } from './internal/operators/auditTime';\nexport { buffer } from './internal/operators/buffer';\nexport { bufferCount } from './internal/operators/bufferCount';\nexport { bufferTime } from './internal/operators/bufferTime';\nexport { bufferToggle } from './internal/operators/bufferToggle';\nexport { bufferWhen } from './internal/operators/bufferWhen';\nexport { catchError } from './internal/operators/catchError';\nexport { combineAll } from './internal/operators/combineAll';\nexport { combineLatestAll } from './internal/operators/combineLatestAll';\nexport { combineLatestWith } from './internal/operators/combineLatestWith';\nexport { concatAll } from './internal/operators/concatAll';\nexport { concatMap } from './internal/operators/concatMap';\nexport { concatMapTo } from './internal/operators/concatMapTo';\nexport { concatWith } from './internal/operators/concatWith';\nexport { connect, ConnectConfig } from './internal/operators/connect';\nexport { count } from './internal/operators/count';\nexport { debounce } from './internal/operators/debounce';\nexport { debounceTime } from './internal/operators/debounceTime';\nexport { defaultIfEmpty } from './internal/operators/defaultIfEmpty';\nexport { delay } from './internal/operators/delay';\nexport { delayWhen } from './internal/operators/delayWhen';\nexport { dematerialize } from './internal/operators/dematerialize';\nexport { distinct } from './internal/operators/distinct';\nexport { distinctUntilChanged } from './internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from './internal/operators/elementAt';\nexport { endWith } from './internal/operators/endWith';\nexport { every } from './internal/operators/every';\nexport { exhaust } from './internal/operators/exhaust';\nexport { exhaustAll } from './internal/operators/exhaustAll';\nexport { exhaustMap } from './internal/operators/exhaustMap';\nexport { expand } from './internal/operators/expand';\nexport { filter } from './internal/operators/filter';\nexport { finalize } from './internal/operators/finalize';\nexport { find } from './internal/operators/find';\nexport { findIndex } from './internal/operators/findIndex';\nexport { first } from './internal/operators/first';\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from './internal/operators/groupBy';\nexport { ignoreElements } from './internal/operators/ignoreElements';\nexport { isEmpty } from './internal/operators/isEmpty';\nexport { last } from './internal/operators/last';\nexport { map } from './internal/operators/map';\nexport { mapTo } from './internal/operators/mapTo';\nexport { materialize } from './internal/operators/materialize';\nexport { max } from './internal/operators/max';\nexport { mergeAll } from './internal/operators/mergeAll';\nexport { flatMap } from './internal/operators/flatMap';\nexport { mergeMap } from './internal/operators/mergeMap';\nexport { mergeMapTo } from './internal/operators/mergeMapTo';\nexport { mergeScan } from './internal/operators/mergeScan';\nexport { mergeWith } from './internal/operators/mergeWith';\nexport { min } from './internal/operators/min';\nexport { multicast } from './internal/operators/multicast';\nexport { observeOn } from './internal/operators/observeOn';\nexport { onErrorResumeNextWith } from './internal/operators/onErrorResumeNextWith';\nexport { pairwise } from './internal/operators/pairwise';\nexport { pluck } from './internal/operators/pluck';\nexport { publish } from './internal/operators/publish';\nexport { publishBehavior } from './internal/operators/publishBehavior';\nexport { publishLast } from './internal/operators/publishLast';\nexport { publishReplay } from './internal/operators/publishReplay';\nexport { raceWith } from './internal/operators/raceWith';\nexport { reduce } from './internal/operators/reduce';\nexport { repeat, RepeatConfig } from './internal/operators/repeat';\nexport { repeatWhen } from './internal/operators/repeatWhen';\nexport { retry, RetryConfig } from './internal/operators/retry';\nexport { retryWhen } from './internal/operators/retryWhen';\nexport { refCount } from './internal/operators/refCount';\nexport { sample } from './internal/operators/sample';\nexport { sampleTime } from './internal/operators/sampleTime';\nexport { scan } from './internal/operators/scan';\nexport { sequenceEqual } from './internal/operators/sequenceEqual';\nexport { share, ShareConfig } from './internal/operators/share';\nexport { shareReplay, ShareReplayConfig } from './internal/operators/shareReplay';\nexport { single } from './internal/operators/single';\nexport { skip } from './internal/operators/skip';\nexport { skipLast } from './internal/operators/skipLast';\nexport { skipUntil } from './internal/operators/skipUntil';\nexport { skipWhile } from './internal/operators/skipWhile';\nexport { startWith } from './internal/operators/startWith';\nexport { subscribeOn } from './internal/operators/subscribeOn';\nexport { switchAll } from './internal/operators/switchAll';\nexport { switchMap } from './internal/operators/switchMap';\nexport { switchMapTo } from './internal/operators/switchMapTo';\nexport { switchScan } from './internal/operators/switchScan';\nexport { take } from './internal/operators/take';\nexport { takeLast } from './internal/operators/takeLast';\nexport { takeUntil } from './internal/operators/takeUntil';\nexport { takeWhile } from './internal/operators/takeWhile';\nexport { tap, TapObserver } from './internal/operators/tap';\nexport { throttle, ThrottleConfig } from './internal/operators/throttle';\nexport { throttleTime } from './internal/operators/throttleTime';\nexport { throwIfEmpty } from './internal/operators/throwIfEmpty';\nexport { timeInterval } from './internal/operators/timeInterval';\nexport { timeout, TimeoutConfig, TimeoutInfo } from './internal/operators/timeout';\nexport { timeoutWith } from './internal/operators/timeoutWith';\nexport { timestamp } from './internal/operators/timestamp';\nexport { toArray } from './internal/operators/toArray';\nexport { window } from './internal/operators/window';\nexport { windowCount } from './internal/operators/windowCount';\nexport { windowTime } from './internal/operators/windowTime';\nexport { windowToggle } from './internal/operators/windowToggle';\nexport { windowWhen } from './internal/operators/windowWhen';\nexport { withLatestFrom } from './internal/operators/withLatestFrom';\nexport { zipAll } from './internal/operators/zipAll';\nexport { zipWith } from './internal/operators/zipWith';\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.versionInfo = exports.version = void 0;\n\n/**\n * Note: This file is autogenerated using \"resources/gen-version.js\" script and\n * automatically updated by \"npm version\" command.\n */\n\n/**\n * A string containing the version of the GraphQL.js library\n */\nvar version = '15.8.0';\n/**\n * An object containing the components of the GraphQL.js version string\n */\n\nexports.version = version;\nvar versionInfo = Object.freeze({\n  major: 15,\n  minor: 8,\n  patch: 0,\n  preReleaseTag: null\n});\nexports.versionInfo = versionInfo;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPromise;\n\n/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\n// eslint-disable-next-line no-redeclare\nfunction isPromise(value) {\n  return typeof (value === null || value === void 0 ? void 0 : value.then) === 'function';\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isObjectLike;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nfunction isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SYMBOL_TO_STRING_TAG = exports.SYMBOL_ASYNC_ITERATOR = exports.SYMBOL_ITERATOR = void 0;\n// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar SYMBOL_ITERATOR = typeof Symbol === 'function' && Symbol.iterator != null ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexports.SYMBOL_ITERATOR = SYMBOL_ITERATOR;\nvar SYMBOL_ASYNC_ITERATOR = typeof Symbol === 'function' && Symbol.asyncIterator != null ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexports.SYMBOL_ASYNC_ITERATOR = SYMBOL_ASYNC_ITERATOR;\nvar SYMBOL_TO_STRING_TAG = typeof Symbol === 'function' && Symbol.toStringTag != null ? Symbol.toStringTag : '@@toStringTag';\nexports.SYMBOL_TO_STRING_TAG = SYMBOL_TO_STRING_TAG;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLocation = getLocation;\n\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nfunction getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printLocation = printLocation;\nexports.printSourceLocation = printSourceLocation;\n\nvar _location = require(\"./location.js\");\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nfunction printLocation(location) {\n  return printSourceLocation(location.source, (0, _location.getLocation)(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\n\nfunction printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printError = printError;\nexports.GraphQLError = void 0;\n\nvar _isObjectLike = _interopRequireDefault(require(\"../jsutils/isObjectLike.js\"));\n\nvar _symbols = require(\"../polyfills/symbols.js\");\n\nvar _location = require(\"../language/location.js\");\n\nvar _printLocation = require(\"../language/printLocation.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\nvar GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _nodeLocations, _nodeLocations2, _nodeLocations3;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message);\n    _this.name = 'GraphQLError';\n    _this.originalError = originalError !== null && originalError !== void 0 ? originalError : undefined; // Compute list of blame nodes.\n\n    _this.nodes = undefinedIfEmpty(Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined);\n    var nodeLocations = [];\n\n    for (var _i2 = 0, _ref3 = (_this$nodes = _this.nodes) !== null && _this$nodes !== void 0 ? _this$nodes : []; _i2 < _ref3.length; _i2++) {\n      var _this$nodes;\n\n      var _ref4 = _ref3[_i2];\n      var loc = _ref4.loc;\n\n      if (loc != null) {\n        nodeLocations.push(loc);\n      }\n    }\n\n    nodeLocations = undefinedIfEmpty(nodeLocations); // Compute locations in the source for the given nodes/positions.\n\n    _this.source = source !== null && source !== void 0 ? source : (_nodeLocations = nodeLocations) === null || _nodeLocations === void 0 ? void 0 : _nodeLocations[0].source;\n    _this.positions = positions !== null && positions !== void 0 ? positions : (_nodeLocations2 = nodeLocations) === null || _nodeLocations2 === void 0 ? void 0 : _nodeLocations2.map(function (loc) {\n      return loc.start;\n    });\n    _this.locations = positions && source ? positions.map(function (pos) {\n      return (0, _location.getLocation)(source, pos);\n    }) : (_nodeLocations3 = nodeLocations) === null || _nodeLocations3 === void 0 ? void 0 : _nodeLocations3.map(function (loc) {\n      return (0, _location.getLocation)(loc.source, loc.start);\n    });\n    _this.path = path !== null && path !== void 0 ? path : undefined;\n    var originalExtensions = originalError === null || originalError === void 0 ? void 0 : originalError.extensions;\n\n    if (extensions == null && (0, _isObjectLike.default)(originalExtensions)) {\n      _this.extensions = _objectSpread({}, originalExtensions);\n    } else {\n      _this.extensions = extensions !== null && extensions !== void 0 ? extensions : {};\n    } // By being enumerable, JSON.stringify will include bellow properties in the resulting output.\n    // This ensures that the simplest possible GraphQL service adheres to the spec.\n\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      message: {\n        enumerable: true\n      },\n      locations: {\n        enumerable: _this.locations != null\n      },\n      path: {\n        enumerable: _this.path != null\n      },\n      extensions: {\n        enumerable: _this.extensions != null && Object.keys(_this.extensions).length > 0\n      },\n      name: {\n        enumerable: false\n      },\n      nodes: {\n        enumerable: false\n      },\n      source: {\n        enumerable: false\n      },\n      positions: {\n        enumerable: false\n      },\n      originalError: {\n        enumerable: false\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n  }, {\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.GraphQLError = GraphQLError;\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\n\nfunction printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i4 = 0, _error$nodes2 = error.nodes; _i4 < _error$nodes2.length; _i4++) {\n      var node = _error$nodes2[_i4];\n\n      if (node.loc) {\n        output += '\\n\\n' + (0, _printLocation.printLocation)(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i6 = 0, _error$locations2 = error.locations; _i6 < _error$locations2.length; _i6++) {\n      var location = _error$locations2[_i6];\n      output += '\\n\\n' + (0, _printLocation.printSourceLocation)(error.source, location);\n    }\n  }\n\n  return output;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.syntaxError = syntaxError;\n\nvar _GraphQLError = require(\"./GraphQLError.js\");\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\nfunction syntaxError(source, position, description) {\n  return new _GraphQLError.GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Kind = void 0;\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n\nexports.Kind = Kind;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = invariant;\n\nfunction invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nvar _default = nodejsCustomInspectSymbol;\nexports.default = _default;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = defineInspect;\n\nvar _invariant = _interopRequireDefault(require(\"./invariant.js\"));\n\nvar _nodejsCustomInspectSymbol = _interopRequireDefault(require(\"./nodejsCustomInspectSymbol.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\nfunction defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || (0, _invariant.default)(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (_nodejsCustomInspectSymbol.default) {\n    classObject.prototype[_nodejsCustomInspectSymbol.default] = fn;\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNode = isNode;\nexports.Token = exports.Location = void 0;\n\nvar _defineInspect = _interopRequireDefault(require(\"../jsutils/defineInspect.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nvar Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.Location = Location;\n(0, _defineInspect.default)(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nvar Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.Token = Token;\n(0, _defineInspect.default)(Token);\n/**\n * @internal\n */\n\nfunction isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenKind = void 0;\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n\nexports.TokenKind = TokenKind;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inspect;\n\nvar _nodejsCustomInspectSymbol = _interopRequireDefault(require(\"./nodejsCustomInspectSymbol.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nfunction inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(_nodejsCustomInspectSymbol.default)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = devAssert;\n\nfunction devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _inspect = _interopRequireDefault(require(\"./inspect.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n// See: https://webpack.js.org/guides/production/\nvar _default = process.env.NODE_ENV === 'production' ? // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n// eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  return value instanceof constructor;\n} : // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  if (value instanceof constructor) {\n    return true;\n  }\n\n  if (_typeof(value) === 'object' && value !== null) {\n    var _value$constructor;\n\n    var className = constructor.prototype[Symbol.toStringTag];\n    var valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n    Symbol.toStringTag in value ? value[Symbol.toStringTag] : (_value$constructor = value.constructor) === null || _value$constructor === void 0 ? void 0 : _value$constructor.name;\n\n    if (className === valueClassName) {\n      var stringifiedValue = (0, _inspect.default)(value);\n      throw new Error(\"Cannot use \".concat(className, \" \\\"\").concat(stringifiedValue, \"\\\" from another module or realm.\\n\\nEnsure that there is only one instance of \\\"graphql\\\" in the node_modules\\ndirectory. If different versions of \\\"graphql\\\" are the dependencies of other\\nrelied on modules, use \\\"resolutions\\\" to ensure only one version is installed.\\n\\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\\n\\nDuplicate \\\"graphql\\\" modules cannot be used at the same time since different\\nversions may have different capabilities and behavior. The data from one\\nversion used in the function from another could produce confusing and\\nspurious results.\"));\n    }\n  }\n\n  return false;\n};\n\nexports.default = _default;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSource = isSource;\nexports.Source = void 0;\n\nvar _symbols = require(\"../polyfills/symbols.js\");\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert.js\"));\n\nvar _instanceOf = _interopRequireDefault(require(\"../jsutils/instanceOf.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nvar Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    typeof body === 'string' || (0, _devAssert.default)(0, \"Body must be a string. Received: \".concat((0, _inspect.default)(body), \".\"));\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || (0, _devAssert.default)(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || (0, _devAssert.default)(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\n\nexports.Source = Source;\n\n// eslint-disable-next-line no-redeclare\nfunction isSource(source) {\n  return (0, _instanceOf.default)(source, Source);\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DirectiveLocation = void 0;\n\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n\nexports.DirectiveLocation = DirectiveLocation;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dedentBlockStringValue = dedentBlockStringValue;\nexports.getBlockStringIndentation = getBlockStringIndentation;\nexports.printBlockString = printBlockString;\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nfunction dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(rawString);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  var startLine = 0;\n\n  while (startLine < lines.length && isBlank(lines[startLine])) {\n    ++startLine;\n  }\n\n  var endLine = lines.length;\n\n  while (endLine > startLine && isBlank(lines[endLine - 1])) {\n    --endLine;\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.slice(startLine, endLine).join('\\n');\n}\n\nfunction isBlank(str) {\n  for (var i = 0; i < str.length; ++i) {\n    if (str[i] !== ' ' && str[i] !== '\\t') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @internal\n */\n\n\nfunction getBlockStringIndentation(value) {\n  var _commonIndent;\n\n  var isFirstLine = true;\n  var isEmptyLine = true;\n  var indent = 0;\n  var commonIndent = null;\n\n  for (var i = 0; i < value.length; ++i) {\n    switch (value.charCodeAt(i)) {\n      case 13:\n        //  \\r\n        if (value.charCodeAt(i + 1) === 10) {\n          ++i; // skip \\r\\n as one symbol\n        }\n\n      // falls through\n\n      case 10:\n        //  \\n\n        isFirstLine = false;\n        isEmptyLine = true;\n        indent = 0;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        ++indent;\n        break;\n\n      default:\n        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {\n          commonIndent = indent;\n        }\n\n        isEmptyLine = false;\n    }\n  }\n\n  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\n\nfunction printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isPunctuatorTokenKind = isPunctuatorTokenKind;\nexports.Lexer = void 0;\n\nvar _syntaxError = require(\"../error/syntaxError.js\");\n\nvar _ast = require(\"./ast.js\");\n\nvar _tokenKind = require(\"./tokenKind.js\");\n\nvar _blockString = require(\"./blockString.js\");\n\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nvar Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new _ast.Token(_tokenKind.TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== _tokenKind.TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === _tokenKind.TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\n\nexports.Lexer = Lexer;\n\nfunction isPunctuatorTokenKind(kind) {\n  return kind === _tokenKind.TokenKind.BANG || kind === _tokenKind.TokenKind.DOLLAR || kind === _tokenKind.TokenKind.AMP || kind === _tokenKind.TokenKind.PAREN_L || kind === _tokenKind.TokenKind.PAREN_R || kind === _tokenKind.TokenKind.SPREAD || kind === _tokenKind.TokenKind.COLON || kind === _tokenKind.TokenKind.EQUALS || kind === _tokenKind.TokenKind.AT || kind === _tokenKind.TokenKind.BRACKET_L || kind === _tokenKind.TokenKind.BRACKET_R || kind === _tokenKind.TokenKind.BRACE_L || kind === _tokenKind.TokenKind.PIPE || kind === _tokenKind.TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? _tokenKind.TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new _ast.Token(_tokenKind.TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new _ast.Token(_tokenKind.TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new _ast.Token(_tokenKind.TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new _ast.Token(_tokenKind.TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new _ast.Token(_tokenKind.TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new _ast.Token(_tokenKind.TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new _ast.Token(_tokenKind.TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new _ast.Token(_tokenKind.TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new _ast.Token(_tokenKind.TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new _ast.Token(_tokenKind.TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new _ast.Token(_tokenKind.TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new _ast.Token(_tokenKind.TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new _ast.Token(_tokenKind.TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new _ast.Token(_tokenKind.TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw (0, _syntaxError.syntaxError)(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new _ast.Token(_tokenKind.TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new _ast.Token(_tokenKind.TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw (0, _syntaxError.syntaxError)(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw (0, _syntaxError.syntaxError)(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new _ast.Token(isFloat ? _tokenKind.TokenKind.FLOAT : _tokenKind.TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw (0, _syntaxError.syntaxError)(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new _ast.Token(_tokenKind.TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new _ast.Token(_tokenKind.TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, (0, _blockString.dedentBlockStringValue)(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new _ast.Token(_tokenKind.TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\nexports.parseValue = parseValue;\nexports.parseType = parseType;\nexports.Parser = void 0;\n\nvar _syntaxError = require(\"../error/syntaxError.js\");\n\nvar _kinds = require(\"./kinds.js\");\n\nvar _ast = require(\"./ast.js\");\n\nvar _tokenKind = require(\"./tokenKind.js\");\n\nvar _source = require(\"./source.js\");\n\nvar _directiveLocation = require(\"./directiveLocation.js\");\n\nvar _lexer = require(\"./lexer.js\");\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nfunction parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\n\nfunction parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\n\nfunction parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = (0, _source.isSource)(source) ? source : new _source.Source(source);\n    this._lexer = new _lexer.Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(_tokenKind.TokenKind.NAME);\n    return {\n      kind: _kinds.Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.DOCUMENT,\n      definitions: this.many(_tokenKind.TokenKind.SOF, this.parseDefinition, _tokenKind.TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(_tokenKind.TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return {\n        kind: _kinds.Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(_tokenKind.TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: _kinds.Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(_tokenKind.TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(_tokenKind.TokenKind.PAREN_L, this.parseVariableDefinition, _tokenKind.TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(_tokenKind.TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(_tokenKind.TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.DOLLAR);\n    return {\n      kind: _kinds.Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.SELECTION_SET,\n      selections: this.many(_tokenKind.TokenKind.BRACE_L, this.parseSelection, _tokenKind.TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(_tokenKind.TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: _kinds.Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(_tokenKind.TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(_tokenKind.TokenKind.PAREN_L, item, _tokenKind.TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return {\n      kind: _kinds.Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(_tokenKind.TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(_tokenKind.TokenKind.NAME)) {\n      return {\n        kind: _kinds.Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: _kinds.Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: _kinds.Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: _kinds.Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case _tokenKind.TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case _tokenKind.TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case _tokenKind.TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: _kinds.Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case _tokenKind.TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: _kinds.Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case _tokenKind.TokenKind.STRING:\n      case _tokenKind.TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case _tokenKind.TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: _kinds.Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: _kinds.Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: _kinds.Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: _kinds.Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case _tokenKind.TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: _kinds.Kind.STRING,\n      value: token.value,\n      block: token.kind === _tokenKind.TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: _kinds.Kind.LIST,\n      values: this.any(_tokenKind.TokenKind.BRACKET_L, item, _tokenKind.TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: _kinds.Kind.OBJECT,\n      fields: this.any(_tokenKind.TokenKind.BRACE_L, item, _tokenKind.TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return {\n      kind: _kinds.Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(_tokenKind.TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.AT);\n    return {\n      kind: _kinds.Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(_tokenKind.TokenKind.BRACKET_R);\n      type = {\n        kind: _kinds.Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BANG)) {\n      return {\n        kind: _kinds.Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(_tokenKind.TokenKind.STRING) || this.peek(_tokenKind.TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(_tokenKind.TokenKind.BRACE_L, this.parseOperationTypeDefinition, _tokenKind.TokenKind.BRACE_R);\n    return {\n      kind: _kinds.Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: _kinds.Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: _kinds.Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var _this$_options2;\n\n    if (!this.expectOptionalKeyword('implements')) {\n      return [];\n    }\n\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {\n      var types = []; // Optional leading ampersand\n\n      this.expectOptionalToken(_tokenKind.TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(_tokenKind.TokenKind.AMP) || this.peek(_tokenKind.TokenKind.NAME));\n\n      return types;\n    }\n\n    return this.delimitedMany(_tokenKind.TokenKind.AMP, this.parseNamedType);\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(_tokenKind.TokenKind.BRACE_L) && this._lexer.lookahead().kind === _tokenKind.TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseFieldDefinition, _tokenKind.TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(_tokenKind.TokenKind.PAREN_L, this.parseInputValueDef, _tokenKind.TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: _kinds.Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: _kinds.Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    return this.expectOptionalToken(_tokenKind.TokenKind.EQUALS) ? this.delimitedMany(_tokenKind.TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: _kinds.Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseEnumValueDefinition, _tokenKind.TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseInputValueDef, _tokenKind.TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseOperationTypeDefinition, _tokenKind.TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(_tokenKind.TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: _kinds.Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    return this.delimitedMany(_tokenKind.TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (_directiveLocation.DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new _ast.Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw (0, _syntaxError.syntaxError)(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw (0, _syntaxError.syntaxError)(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return (0, _syntaxError.syntaxError)(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n  ;\n\n  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\n\nexports.Parser = Parser;\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return (0, _lexer.isPunctuatorTokenKind)(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\nexports.getVisitFn = getVisitFn;\nexports.BREAK = exports.QueryDocumentKeys = void 0;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _ast = require(\"./ast.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexports.QueryDocumentKeys = QueryDocumentKeys;\nvar BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexports.BREAK = BREAK;\n\nfunction visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!(0, _ast.isNode)(node)) {\n        throw new Error(\"Invalid AST Node: \".concat((0, _inspect.default)(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if ((0, _ast.isNode)(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\n\nfunction visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\n\nfunction getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound]\nvar find = Array.prototype.find ? function (list, predicate) {\n  return Array.prototype.find.call(list, predicate);\n} : function (list, predicate) {\n  for (var _i2 = 0; _i2 < list.length; _i2++) {\n    var value = list[_i2];\n\n    if (predicate(value)) {\n      return value;\n    }\n  }\n};\nvar _default = find;\nexports.default = _default;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar objectValues = Object.values || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n};\n\nvar _default = objectValues;\nexports.default = _default;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.locatedError = locatedError;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _GraphQLError = require(\"./GraphQLError.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  // Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n  var originalError = rawOriginalError instanceof Error ? rawOriginalError : new Error('Unexpected error value: ' + (0, _inspect.default)(rawOriginalError)); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (Array.isArray(originalError.path)) {\n    return originalError;\n  }\n\n  return new _GraphQLError.GraphQLError(originalError.message, (_nodes = originalError.nodes) !== null && _nodes !== void 0 ? _nodes : nodes, originalError.source, originalError.positions, path, originalError);\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertValidName = assertValidName;\nexports.isValidNameError = isValidNameError;\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert.js\"));\n\nvar _GraphQLError = require(\"../error/GraphQLError.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NAME_RX = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * Upholds the spec rules about naming.\n */\n\nfunction assertValidName(name) {\n  var error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n */\n\n\nfunction isValidNameError(name) {\n  typeof name === 'string' || (0, _devAssert.default)(0, 'Expected name to be a string.');\n\n  if (name.length > 1 && name[0] === '_' && name[1] === '_') {\n    return new _GraphQLError.GraphQLError(\"Name \\\"\".concat(name, \"\\\" must not begin with \\\"__\\\", which is reserved by GraphQL introspection.\"));\n  }\n\n  if (!NAME_RX.test(name)) {\n    return new _GraphQLError.GraphQLError(\"Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \\\"\".concat(name, \"\\\" does not.\"));\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar objectEntries = Object.entries || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return [key, obj[key]];\n  });\n};\n\nvar _default = objectEntries;\nexports.default = _default;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = keyMap;\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: { name: 'Jon', num: '555-1234' },\n *     //   Jenny: { name: 'Jenny', num: '867-5309' } }\n *     const entriesByName = keyMap(\n *       phoneBook,\n *       entry => entry.name\n *     )\n *\n *     // { name: 'Jenny', num: '857-6309' }\n *     const jennyEntry = entriesByName['Jenny']\n *\n */\nfunction keyMap(list, keyFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = item;\n    return map;\n  }, Object.create(null));\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mapValue;\n\nvar _objectEntries3 = _interopRequireDefault(require(\"../polyfills/objectEntries.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nfunction mapValue(map, fn) {\n  var result = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = (0, _objectEntries3.default)(map); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var _key = _ref2[0];\n    var _value = _ref2[1];\n    result[_key] = fn(_value, _key);\n  }\n\n  return result;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toObjMap;\n\nvar _objectEntries3 = _interopRequireDefault(require(\"../polyfills/objectEntries.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toObjMap(obj) {\n  /* eslint-enable no-redeclare */\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  var map = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = (0, _objectEntries3.default)(obj); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var key = _ref2[0];\n    var value = _ref2[1];\n    map[key] = value;\n  }\n\n  return map;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = keyValMap;\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nfunction keyValMap(list, keyFn, valFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = valFn(item);\n    return map;\n  }, Object.create(null));\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = didYouMean;\nvar MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\n// eslint-disable-next-line no-redeclare\nfunction didYouMean(firstArg, secondArg) {\n  var _ref = typeof firstArg === 'string' ? [firstArg, secondArg] : [undefined, firstArg],\n      subMessage = _ref[0],\n      suggestionsArg = _ref[1];\n\n  var message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  var suggestions = suggestionsArg.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  });\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  var selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  var lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = identityFunc;\n\n/**\n * Returns the first argument it receives.\n */\nfunction identityFunc(x) {\n  return x;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = naturalCompare;\n\n/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nfunction naturalCompare(aStr, bStr) {\n  var aIdx = 0;\n  var bIdx = 0;\n\n  while (aIdx < aStr.length && bIdx < bStr.length) {\n    var aChar = aStr.charCodeAt(aIdx);\n    var bChar = bStr.charCodeAt(bIdx);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      var aNum = 0;\n\n      do {\n        ++aIdx;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIdx);\n      } while (isDigit(aChar) && aNum > 0);\n\n      var bNum = 0;\n\n      do {\n        ++bIdx;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIdx);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIdx;\n      ++bIdx;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\n\nvar DIGIT_0 = 48;\nvar DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = suggestionList;\n\nvar _naturalCompare = _interopRequireDefault(require(\"./naturalCompare.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\nfunction suggestionList(input, options) {\n  var optionsByDistance = Object.create(null);\n  var lexicalDistance = new LexicalDistance(input);\n  var threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (var _i2 = 0; _i2 < options.length; _i2++) {\n    var option = options[_i2];\n    var distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort(function (a, b) {\n    var distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : (0, _naturalCompare.default)(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\n\nvar LexicalDistance = /*#__PURE__*/function () {\n  function LexicalDistance(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0)];\n  }\n\n  var _proto = LexicalDistance.prototype;\n\n  _proto.measure = function measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    var optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    var a = stringToArray(optionLowerCase);\n    var b = this._inputArray;\n\n    if (a.length < b.length) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var aLength = a.length;\n    var bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    var rows = this._rows;\n\n    for (var j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (var i = 1; i <= aLength; i++) {\n      var upRow = rows[(i - 1) % 3];\n      var currentRow = rows[i % 3];\n      var smallestCell = currentRow[0] = i;\n\n      for (var _j = 1; _j <= bLength; _j++) {\n        var cost = a[i - 1] === b[_j - 1] ? 0 : 1;\n        var currentCell = Math.min(upRow[_j] + 1, // delete\n        currentRow[_j - 1] + 1, // insert\n        upRow[_j - 1] + cost // substitute\n        );\n\n        if (i > 1 && _j > 1 && a[i - 1] === b[_j - 2] && a[i - 2] === b[_j - 1]) {\n          // transposition\n          var doubleDiagonalCell = rows[(i - 2) % 3][_j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[_j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    var distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  };\n\n  return LexicalDistance;\n}();\n\nfunction stringToArray(str) {\n  var strLength = str.length;\n  var array = new Array(strLength);\n\n  for (var i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require(\"./visitor.js\");\n\nvar _blockString = require(\"./blockString.js\");\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, {\n    leave: printDocASTReducer\n  });\n}\n\nvar MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    var prefix = wrap('', alias, ': ') + name;\n    var argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n    if (argsLine.length > MAX_LINE_LENGTH) {\n      argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n    }\n\n    return join([argsLine, join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? (0, _blockString.printBlockString)(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction isMultiline(str) {\n  return str.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray != null && maybeArray.some(isMultiline);\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.valueFromASTUntyped = valueFromASTUntyped;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _keyValMap = _interopRequireDefault(require(\"../jsutils/keyValMap.js\"));\n\nvar _kinds = require(\"../language/kinds.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.NULL:\n      return null;\n\n    case _kinds.Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case _kinds.Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.BOOLEAN:\n      return valueNode.value;\n\n    case _kinds.Kind.LIST:\n      return valueNode.values.map(function (node) {\n        return valueFromASTUntyped(node, variables);\n      });\n\n    case _kinds.Kind.OBJECT:\n      return (0, _keyValMap.default)(valueNode.fields, function (field) {\n        return field.name.value;\n      }, function (field) {\n        return valueFromASTUntyped(field.value, variables);\n      });\n\n    case _kinds.Kind.VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  } // istanbul ignore next (Not reachable. All possible value nodes have been considered)\n\n\n  false || (0, _invariant.default)(0, 'Unexpected value node: ' + (0, _inspect.default)(valueNode));\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isType = isType;\nexports.assertType = assertType;\nexports.isScalarType = isScalarType;\nexports.assertScalarType = assertScalarType;\nexports.isObjectType = isObjectType;\nexports.assertObjectType = assertObjectType;\nexports.isInterfaceType = isInterfaceType;\nexports.assertInterfaceType = assertInterfaceType;\nexports.isUnionType = isUnionType;\nexports.assertUnionType = assertUnionType;\nexports.isEnumType = isEnumType;\nexports.assertEnumType = assertEnumType;\nexports.isInputObjectType = isInputObjectType;\nexports.assertInputObjectType = assertInputObjectType;\nexports.isListType = isListType;\nexports.assertListType = assertListType;\nexports.isNonNullType = isNonNullType;\nexports.assertNonNullType = assertNonNullType;\nexports.isInputType = isInputType;\nexports.assertInputType = assertInputType;\nexports.isOutputType = isOutputType;\nexports.assertOutputType = assertOutputType;\nexports.isLeafType = isLeafType;\nexports.assertLeafType = assertLeafType;\nexports.isCompositeType = isCompositeType;\nexports.assertCompositeType = assertCompositeType;\nexports.isAbstractType = isAbstractType;\nexports.assertAbstractType = assertAbstractType;\nexports.GraphQLList = GraphQLList;\nexports.GraphQLNonNull = GraphQLNonNull;\nexports.isWrappingType = isWrappingType;\nexports.assertWrappingType = assertWrappingType;\nexports.isNullableType = isNullableType;\nexports.assertNullableType = assertNullableType;\nexports.getNullableType = getNullableType;\nexports.isNamedType = isNamedType;\nexports.assertNamedType = assertNamedType;\nexports.getNamedType = getNamedType;\nexports.argsToArgsConfig = argsToArgsConfig;\nexports.isRequiredArgument = isRequiredArgument;\nexports.isRequiredInputField = isRequiredInputField;\nexports.GraphQLInputObjectType = exports.GraphQLEnumType = exports.GraphQLUnionType = exports.GraphQLInterfaceType = exports.GraphQLObjectType = exports.GraphQLScalarType = void 0;\n\nvar _objectEntries = _interopRequireDefault(require(\"../polyfills/objectEntries.js\"));\n\nvar _symbols = require(\"../polyfills/symbols.js\");\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _keyMap = _interopRequireDefault(require(\"../jsutils/keyMap.js\"));\n\nvar _mapValue = _interopRequireDefault(require(\"../jsutils/mapValue.js\"));\n\nvar _toObjMap = _interopRequireDefault(require(\"../jsutils/toObjMap.js\"));\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert.js\"));\n\nvar _keyValMap = _interopRequireDefault(require(\"../jsutils/keyValMap.js\"));\n\nvar _instanceOf = _interopRequireDefault(require(\"../jsutils/instanceOf.js\"));\n\nvar _didYouMean = _interopRequireDefault(require(\"../jsutils/didYouMean.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"../jsutils/isObjectLike.js\"));\n\nvar _identityFunc = _interopRequireDefault(require(\"../jsutils/identityFunc.js\"));\n\nvar _defineInspect = _interopRequireDefault(require(\"../jsutils/defineInspect.js\"));\n\nvar _suggestionList = _interopRequireDefault(require(\"../jsutils/suggestionList.js\"));\n\nvar _GraphQLError = require(\"../error/GraphQLError.js\");\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _printer = require(\"../language/printer.js\");\n\nvar _valueFromASTUntyped = require(\"../utilities/valueFromASTUntyped.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction isType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type) || isListType(type) || isNonNullType(type);\n}\n\nfunction assertType(type) {\n  if (!isType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL type.\"));\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\n\n// eslint-disable-next-line no-redeclare\nfunction isScalarType(type) {\n  return (0, _instanceOf.default)(type, GraphQLScalarType);\n}\n\nfunction assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL Scalar type.\"));\n  }\n\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isObjectType(type) {\n  return (0, _instanceOf.default)(type, GraphQLObjectType);\n}\n\nfunction assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL Object type.\"));\n  }\n\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isInterfaceType(type) {\n  return (0, _instanceOf.default)(type, GraphQLInterfaceType);\n}\n\nfunction assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL Interface type.\"));\n  }\n\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isUnionType(type) {\n  return (0, _instanceOf.default)(type, GraphQLUnionType);\n}\n\nfunction assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL Union type.\"));\n  }\n\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isEnumType(type) {\n  return (0, _instanceOf.default)(type, GraphQLEnumType);\n}\n\nfunction assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL Enum type.\"));\n  }\n\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isInputObjectType(type) {\n  return (0, _instanceOf.default)(type, GraphQLInputObjectType);\n}\n\nfunction assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL Input Object type.\"));\n  }\n\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isListType(type) {\n  return (0, _instanceOf.default)(type, GraphQLList);\n}\n\nfunction assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL List type.\"));\n  }\n\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isNonNullType(type) {\n  return (0, _instanceOf.default)(type, GraphQLNonNull);\n}\n\nfunction assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL Non-Null type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\n\nfunction isInputType(type) {\n  return isScalarType(type) || isEnumType(type) || isInputObjectType(type) || isWrappingType(type) && isInputType(type.ofType);\n}\n\nfunction assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL input type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\n\nfunction isOutputType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isWrappingType(type) && isOutputType(type.ofType);\n}\n\nfunction assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL output type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\n\nfunction isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\n\nfunction assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL leaf type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\n\nfunction isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\n\nfunction assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL composite type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\n\nfunction isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\n\nfunction assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL abstract type.\"));\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         parents: { type: new GraphQLList(PersonType) },\n *         children: { type: new GraphQLList(PersonType) },\n *       })\n *     })\n *\n */\n// FIXME: workaround to fix issue with Babel parser\n\n/* ::\ndeclare class GraphQLList<+T: GraphQLType> {\n  +ofType: T;\n  static <T>(ofType: T): GraphQLList<T>;\n  // Note: constructors cannot be used for covariant types. Drop the \"new\".\n  constructor(ofType: GraphQLType): void;\n}\n*/\n\n\nfunction GraphQLList(ofType) {\n  // istanbul ignore else (to be removed in v16.0.0)\n  if (this instanceof GraphQLList) {\n    this.ofType = assertType(ofType);\n  } else {\n    return new GraphQLList(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\n\nGraphQLList.prototype.toString = function toString() {\n  return '[' + String(this.ofType) + ']';\n};\n\nGraphQLList.prototype.toJSON = function toJSON() {\n  return this.toString();\n};\n\nObject.defineProperty(GraphQLList.prototype, _symbols.SYMBOL_TO_STRING_TAG, {\n  get: function get() {\n    return 'GraphQLList';\n  }\n}); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n(0, _defineInspect.default)(GraphQLList);\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n *     const RowType = new GraphQLObjectType({\n *       name: 'Row',\n *       fields: () => ({\n *         id: { type: new GraphQLNonNull(GraphQLString) },\n *       })\n *     })\n *\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n// FIXME: workaround to fix issue with Babel parser\n\n/* ::\ndeclare class GraphQLNonNull<+T: GraphQLNullableType> {\n  +ofType: T;\n  static <T>(ofType: T): GraphQLNonNull<T>;\n  // Note: constructors cannot be used for covariant types. Drop the \"new\".\n  constructor(ofType: GraphQLType): void;\n}\n*/\n\nfunction GraphQLNonNull(ofType) {\n  // istanbul ignore else (to be removed in v16.0.0)\n  if (this instanceof GraphQLNonNull) {\n    this.ofType = assertNullableType(ofType);\n  } else {\n    return new GraphQLNonNull(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\n\nGraphQLNonNull.prototype.toString = function toString() {\n  return String(this.ofType) + '!';\n};\n\nGraphQLNonNull.prototype.toJSON = function toJSON() {\n  return this.toString();\n};\n\nObject.defineProperty(GraphQLNonNull.prototype, _symbols.SYMBOL_TO_STRING_TAG, {\n  get: function get() {\n    return 'GraphQLNonNull';\n  }\n}); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n(0, _defineInspect.default)(GraphQLNonNull);\n/**\n * These types wrap and modify other types\n */\n\nfunction isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\n\nfunction assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL wrapping type.\"));\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\n\nfunction isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\n\nfunction assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL nullable type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\n\nfunction getNullableType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\n\nfunction isNamedType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type);\n}\n\nfunction assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(type), \" to be a GraphQL named type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\n\nfunction getNamedType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    var unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\n\nfunction resolveThunk(thunk) {\n  // $FlowFixMe[incompatible-use]\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\nfunction undefineIfEmpty(arr) {\n  return arr && arr.length > 0 ? arr : undefined;\n}\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function does not return a value (i.e. it returns\n * `undefined`) then an error will be raised and a `null` value will be returned\n * in the response. If the serialize function returns `null`, then no error will\n * be included in the response.\n *\n * Example:\n *\n *     const OddType = new GraphQLScalarType({\n *       name: 'Odd',\n *       serialize(value) {\n *         if (value % 2 === 1) {\n *           return value;\n *         }\n *       }\n *     });\n *\n */\n\n\nvar GraphQLScalarType = /*#__PURE__*/function () {\n  function GraphQLScalarType(config) {\n    var _config$parseValue, _config$serialize, _config$parseLiteral;\n\n    var parseValue = (_config$parseValue = config.parseValue) !== null && _config$parseValue !== void 0 ? _config$parseValue : _identityFunc.default;\n    this.name = config.name;\n    this.description = config.description;\n    this.specifiedByUrl = config.specifiedByUrl;\n    this.serialize = (_config$serialize = config.serialize) !== null && _config$serialize !== void 0 ? _config$serialize : _identityFunc.default;\n    this.parseValue = parseValue;\n    this.parseLiteral = (_config$parseLiteral = config.parseLiteral) !== null && _config$parseLiteral !== void 0 ? _config$parseLiteral : function (node, variables) {\n      return parseValue((0, _valueFromASTUntyped.valueFromASTUntyped)(node, variables));\n    };\n    this.extensions = config.extensions && (0, _toObjMap.default)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    typeof config.name === 'string' || (0, _devAssert.default)(0, 'Must provide name.');\n    config.specifiedByUrl == null || typeof config.specifiedByUrl === 'string' || (0, _devAssert.default)(0, \"\".concat(this.name, \" must provide \\\"specifiedByUrl\\\" as a string, \") + \"but got: \".concat((0, _inspect.default)(config.specifiedByUrl), \".\"));\n    config.serialize == null || typeof config.serialize === 'function' || (0, _devAssert.default)(0, \"\".concat(this.name, \" must provide \\\"serialize\\\" function. If this custom Scalar is also used as an input type, ensure \\\"parseValue\\\" and \\\"parseLiteral\\\" functions are also provided.\"));\n\n    if (config.parseLiteral) {\n      typeof config.parseValue === 'function' && typeof config.parseLiteral === 'function' || (0, _devAssert.default)(0, \"\".concat(this.name, \" must provide both \\\"parseValue\\\" and \\\"parseLiteral\\\" functions.\"));\n    }\n  }\n\n  var _proto = GraphQLScalarType.prototype;\n\n  _proto.toConfig = function toConfig() {\n    var _this$extensionASTNod;\n\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByUrl: this.specifiedByUrl,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod = this.extensionASTNodes) !== null && _this$extensionASTNod !== void 0 ? _this$extensionASTNod : []\n    };\n  };\n\n  _proto.toString = function toString() {\n    return this.name;\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLScalarType, [{\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLScalarType';\n    }\n  }]);\n\n  return GraphQLScalarType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.GraphQLScalarType = GraphQLScalarType;\n(0, _defineInspect.default)(GraphQLScalarType);\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n *     const AddressType = new GraphQLObjectType({\n *       name: 'Address',\n *       fields: {\n *         street: { type: GraphQLString },\n *         number: { type: GraphQLInt },\n *         formatted: {\n *           type: GraphQLString,\n *           resolve(obj) {\n *             return obj.number + ' ' + obj.street\n *           }\n *         }\n *       }\n *     });\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         name: { type: GraphQLString },\n *         bestFriend: { type: PersonType },\n *       })\n *     });\n *\n */\nvar GraphQLObjectType = /*#__PURE__*/function () {\n  function GraphQLObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = config.extensions && (0, _toObjMap.default)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    typeof config.name === 'string' || (0, _devAssert.default)(0, 'Must provide name.');\n    config.isTypeOf == null || typeof config.isTypeOf === 'function' || (0, _devAssert.default)(0, \"\".concat(this.name, \" must provide \\\"isTypeOf\\\" as a function, \") + \"but got: \".concat((0, _inspect.default)(config.isTypeOf), \".\"));\n  }\n\n  var _proto2 = GraphQLObjectType.prototype;\n\n  _proto2.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto2.getInterfaces = function getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  };\n\n  _proto2.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || []\n    };\n  };\n\n  _proto2.toString = function toString() {\n    return this.name;\n  };\n\n  _proto2.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLObjectType, [{\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLObjectType';\n    }\n  }]);\n\n  return GraphQLObjectType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.GraphQLObjectType = GraphQLObjectType;\n(0, _defineInspect.default)(GraphQLObjectType);\n\nfunction defineInterfaces(config) {\n  var _resolveThunk;\n\n  var interfaces = (_resolveThunk = resolveThunk(config.interfaces)) !== null && _resolveThunk !== void 0 ? _resolveThunk : [];\n  Array.isArray(interfaces) || (0, _devAssert.default)(0, \"\".concat(config.name, \" interfaces must be an Array or a function which returns an Array.\"));\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields);\n  isPlainObj(fieldMap) || (0, _devAssert.default)(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return (0, _mapValue.default)(fieldMap, function (fieldConfig, fieldName) {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) || (0, _devAssert.default)(0, \"\".concat(config.name, \".\").concat(fieldName, \" field config must be an object.\"));\n    !('isDeprecated' in fieldConfig) || (0, _devAssert.default)(0, \"\".concat(config.name, \".\").concat(fieldName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    fieldConfig.resolve == null || typeof fieldConfig.resolve === 'function' || (0, _devAssert.default)(0, \"\".concat(config.name, \".\").concat(fieldName, \" field resolver must be a function if \") + \"provided, but got: \".concat((0, _inspect.default)(fieldConfig.resolve), \".\"));\n    var argsConfig = (_fieldConfig$args = fieldConfig.args) !== null && _fieldConfig$args !== void 0 ? _fieldConfig$args : {};\n    isPlainObj(argsConfig) || (0, _devAssert.default)(0, \"\".concat(config.name, \".\").concat(fieldName, \" args must be an object with argument names as keys.\"));\n    var args = (0, _objectEntries.default)(argsConfig).map(function (_ref) {\n      var argName = _ref[0],\n          argConfig = _ref[1];\n      return {\n        name: argName,\n        description: argConfig.description,\n        type: argConfig.type,\n        defaultValue: argConfig.defaultValue,\n        deprecationReason: argConfig.deprecationReason,\n        extensions: argConfig.extensions && (0, _toObjMap.default)(argConfig.extensions),\n        astNode: argConfig.astNode\n      };\n    });\n    return {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: args,\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      isDeprecated: fieldConfig.deprecationReason != null,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: fieldConfig.extensions && (0, _toObjMap.default)(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\n\nfunction isPlainObj(obj) {\n  return (0, _isObjectLike.default)(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return (0, _mapValue.default)(fields, function (field) {\n    return {\n      description: field.description,\n      type: field.type,\n      args: argsToArgsConfig(field.args),\n      resolve: field.resolve,\n      subscribe: field.subscribe,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode\n    };\n  });\n}\n/**\n * @internal\n */\n\n\nfunction argsToArgsConfig(args) {\n  return (0, _keyValMap.default)(args, function (arg) {\n    return arg.name;\n  }, function (arg) {\n    return {\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode\n    };\n  });\n}\n\nfunction isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n *     const EntityType = new GraphQLInterfaceType({\n *       name: 'Entity',\n *       fields: {\n *         name: { type: GraphQLString }\n *       }\n *     });\n *\n */\nvar GraphQLInterfaceType = /*#__PURE__*/function () {\n  function GraphQLInterfaceType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && (0, _toObjMap.default)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    typeof config.name === 'string' || (0, _devAssert.default)(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || (0, _devAssert.default)(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat((0, _inspect.default)(config.resolveType), \".\"));\n  }\n\n  var _proto3 = GraphQLInterfaceType.prototype;\n\n  _proto3.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto3.getInterfaces = function getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  };\n\n  _proto3.toConfig = function toConfig() {\n    var _this$extensionASTNod2;\n\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod2 = this.extensionASTNodes) !== null && _this$extensionASTNod2 !== void 0 ? _this$extensionASTNod2 : []\n    };\n  };\n\n  _proto3.toString = function toString() {\n    return this.name;\n  };\n\n  _proto3.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLInterfaceType, [{\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLInterfaceType';\n    }\n  }]);\n\n  return GraphQLInterfaceType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.GraphQLInterfaceType = GraphQLInterfaceType;\n(0, _defineInspect.default)(GraphQLInterfaceType);\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n *     const PetType = new GraphQLUnionType({\n *       name: 'Pet',\n *       types: [ DogType, CatType ],\n *       resolveType(value) {\n *         if (value instanceof Dog) {\n *           return DogType;\n *         }\n *         if (value instanceof Cat) {\n *           return CatType;\n *         }\n *       }\n *     });\n *\n */\nvar GraphQLUnionType = /*#__PURE__*/function () {\n  function GraphQLUnionType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && (0, _toObjMap.default)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._types = defineTypes.bind(undefined, config);\n    typeof config.name === 'string' || (0, _devAssert.default)(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || (0, _devAssert.default)(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat((0, _inspect.default)(config.resolveType), \".\"));\n  }\n\n  var _proto4 = GraphQLUnionType.prototype;\n\n  _proto4.getTypes = function getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  };\n\n  _proto4.toConfig = function toConfig() {\n    var _this$extensionASTNod3;\n\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod3 = this.extensionASTNodes) !== null && _this$extensionASTNod3 !== void 0 ? _this$extensionASTNod3 : []\n    };\n  };\n\n  _proto4.toString = function toString() {\n    return this.name;\n  };\n\n  _proto4.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLUnionType, [{\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLUnionType';\n    }\n  }]);\n\n  return GraphQLUnionType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.GraphQLUnionType = GraphQLUnionType;\n(0, _defineInspect.default)(GraphQLUnionType);\n\nfunction defineTypes(config) {\n  var types = resolveThunk(config.types);\n  Array.isArray(types) || (0, _devAssert.default)(0, \"Must provide Array of types or a function which returns such an array for Union \".concat(config.name, \".\"));\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n *     const RGBType = new GraphQLEnumType({\n *       name: 'RGB',\n *       values: {\n *         RED: { value: 0 },\n *         GREEN: { value: 1 },\n *         BLUE: { value: 2 }\n *       }\n *     });\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nvar GraphQLEnumType\n/* <T> */\n= /*#__PURE__*/function () {\n  function GraphQLEnumType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && (0, _toObjMap.default)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(this._values.map(function (enumValue) {\n      return [enumValue.value, enumValue];\n    }));\n    this._nameLookup = (0, _keyMap.default)(this._values, function (value) {\n      return value.name;\n    });\n    typeof config.name === 'string' || (0, _devAssert.default)(0, 'Must provide name.');\n  }\n\n  var _proto5 = GraphQLEnumType.prototype;\n\n  _proto5.getValues = function getValues() {\n    return this._values;\n  };\n\n  _proto5.getValue = function getValue(name) {\n    return this._nameLookup[name];\n  };\n\n  _proto5.serialize = function serialize(outputValue) {\n    var enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new _GraphQLError.GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent value: \").concat((0, _inspect.default)(outputValue)));\n    }\n\n    return enumValue.name;\n  };\n\n  _proto5.parseValue = function parseValue(inputValue)\n  /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      var valueStr = (0, _inspect.default)(inputValue);\n      throw new _GraphQLError.GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent non-string value: \").concat(valueStr, \".\") + didYouMeanEnumValue(this, valueStr));\n    }\n\n    var enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new _GraphQLError.GraphQLError(\"Value \\\"\".concat(inputValue, \"\\\" does not exist in \\\"\").concat(this.name, \"\\\" enum.\") + didYouMeanEnumValue(this, inputValue));\n    }\n\n    return enumValue.value;\n  };\n\n  _proto5.parseLiteral = function parseLiteral(valueNode, _variables)\n  /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== _kinds.Kind.ENUM) {\n      var valueStr = (0, _printer.print)(valueNode);\n      throw new _GraphQLError.GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent non-enum value: \").concat(valueStr, \".\") + didYouMeanEnumValue(this, valueStr), valueNode);\n    }\n\n    var enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      var _valueStr = (0, _printer.print)(valueNode);\n\n      throw new _GraphQLError.GraphQLError(\"Value \\\"\".concat(_valueStr, \"\\\" does not exist in \\\"\").concat(this.name, \"\\\" enum.\") + didYouMeanEnumValue(this, _valueStr), valueNode);\n    }\n\n    return enumValue.value;\n  };\n\n  _proto5.toConfig = function toConfig() {\n    var _this$extensionASTNod4;\n\n    var values = (0, _keyValMap.default)(this.getValues(), function (value) {\n      return value.name;\n    }, function (value) {\n      return {\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      values: values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod4 = this.extensionASTNodes) !== null && _this$extensionASTNod4 !== void 0 ? _this$extensionASTNod4 : []\n    };\n  };\n\n  _proto5.toString = function toString() {\n    return this.name;\n  };\n\n  _proto5.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLEnumType, [{\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLEnumType';\n    }\n  }]);\n\n  return GraphQLEnumType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.GraphQLEnumType = GraphQLEnumType;\n(0, _defineInspect.default)(GraphQLEnumType);\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  var allNames = enumType.getValues().map(function (value) {\n    return value.name;\n  });\n  var suggestedValues = (0, _suggestionList.default)(unknownValueStr, allNames);\n  return (0, _didYouMean.default)('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) || (0, _devAssert.default)(0, \"\".concat(typeName, \" values must be an object with value names as keys.\"));\n  return (0, _objectEntries.default)(valueMap).map(function (_ref2) {\n    var valueName = _ref2[0],\n        valueConfig = _ref2[1];\n    isPlainObj(valueConfig) || (0, _devAssert.default)(0, \"\".concat(typeName, \".\").concat(valueName, \" must refer to an object with a \\\"value\\\" key \") + \"representing an internal value but got: \".concat((0, _inspect.default)(valueConfig), \".\"));\n    !('isDeprecated' in valueConfig) || (0, _devAssert.default)(0, \"\".concat(typeName, \".\").concat(valueName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    return {\n      name: valueName,\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      isDeprecated: valueConfig.deprecationReason != null,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: valueConfig.extensions && (0, _toObjMap.default)(valueConfig.extensions),\n      astNode: valueConfig.astNode\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n *     const GeoPoint = new GraphQLInputObjectType({\n *       name: 'GeoPoint',\n *       fields: {\n *         lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *         lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *         alt: { type: GraphQLFloat, defaultValue: 0 },\n *       }\n *     });\n *\n */\nvar GraphQLInputObjectType = /*#__PURE__*/function () {\n  function GraphQLInputObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && (0, _toObjMap.default)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineInputFieldMap.bind(undefined, config);\n    typeof config.name === 'string' || (0, _devAssert.default)(0, 'Must provide name.');\n  }\n\n  var _proto6 = GraphQLInputObjectType.prototype;\n\n  _proto6.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto6.toConfig = function toConfig() {\n    var _this$extensionASTNod5;\n\n    var fields = (0, _mapValue.default)(this.getFields(), function (field) {\n      return {\n        description: field.description,\n        type: field.type,\n        defaultValue: field.defaultValue,\n        deprecationReason: field.deprecationReason,\n        extensions: field.extensions,\n        astNode: field.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      fields: fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod5 = this.extensionASTNodes) !== null && _this$extensionASTNod5 !== void 0 ? _this$extensionASTNod5 : []\n    };\n  };\n\n  _proto6.toString = function toString() {\n    return this.name;\n  };\n\n  _proto6.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLInputObjectType, [{\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLInputObjectType';\n    }\n  }]);\n\n  return GraphQLInputObjectType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.GraphQLInputObjectType = GraphQLInputObjectType;\n(0, _defineInspect.default)(GraphQLInputObjectType);\n\nfunction defineInputFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields);\n  isPlainObj(fieldMap) || (0, _devAssert.default)(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return (0, _mapValue.default)(fieldMap, function (fieldConfig, fieldName) {\n    !('resolve' in fieldConfig) || (0, _devAssert.default)(0, \"\".concat(config.name, \".\").concat(fieldName, \" field has a resolve property, but Input Types cannot define resolvers.\"));\n    return {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: fieldConfig.extensions && (0, _toObjMap.default)(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\n\nfunction isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isEqualType = isEqualType;\nexports.isTypeSubTypeOf = isTypeSubTypeOf;\nexports.doTypesOverlap = doTypesOverlap;\n\nvar _definition = require(\"../type/definition.js\");\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nfunction isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n\n  if ((0, _definition.isNonNullType)(typeA) && (0, _definition.isNonNullType)(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n\n  if ((0, _definition.isListType)(typeA) && (0, _definition.isListType)(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\n\nfunction isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n\n  if ((0, _definition.isNonNullType)(superType)) {\n    if ((0, _definition.isNonNullType)(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if ((0, _definition.isNonNullType)(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n\n  if ((0, _definition.isListType)(superType)) {\n    if ((0, _definition.isListType)(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if ((0, _definition.isListType)(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n\n  return (0, _definition.isAbstractType)(superType) && ((0, _definition.isInterfaceType)(maybeSubType) || (0, _definition.isObjectType)(maybeSubType)) && schema.isSubType(superType, maybeSubType);\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\n\nfunction doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if ((0, _definition.isAbstractType)(typeA)) {\n    if ((0, _definition.isAbstractType)(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema.getPossibleTypes(typeA).some(function (type) {\n        return schema.isSubType(typeB, type);\n      });\n    } // Determine if the latter type is a possible concrete type of the former.\n\n\n    return schema.isSubType(typeA, typeB);\n  }\n\n  if ((0, _definition.isAbstractType)(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n\n  return false;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _symbols = require(\"./symbols.js\");\n\n/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound]\nvar arrayFrom = Array.from || function (obj, mapFn, thisArg) {\n  if (obj == null) {\n    throw new TypeError('Array.from requires an array-like object - not null or undefined');\n  } // Is Iterable?\n\n\n  var iteratorMethod = obj[_symbols.SYMBOL_ITERATOR];\n\n  if (typeof iteratorMethod === 'function') {\n    var iterator = iteratorMethod.call(obj);\n    var result = [];\n    var step;\n\n    for (var i = 0; !(step = iterator.next()).done; ++i) {\n      result.push(mapFn.call(thisArg, step.value, i)); // Infinite Iterators could cause forEach to run forever.\n      // After a very large number of iterations, produce an error.\n      // istanbul ignore if (Too big to actually test)\n\n      if (i > 9999999) {\n        throw new TypeError('Near-infinite iteration.');\n      }\n    }\n\n    return result;\n  } // Is Array like?\n\n\n  var length = obj.length;\n\n  if (typeof length === 'number' && length >= 0 && length % 1 === 0) {\n    var _result = [];\n\n    for (var _i = 0; _i < length; ++_i) {\n      if (Object.prototype.hasOwnProperty.call(obj, _i)) {\n        _result.push(mapFn.call(thisArg, obj[_i], _i));\n      }\n    }\n\n    return _result;\n  }\n\n  return [];\n};\n\nvar _default = arrayFrom;\nexports.default = _default;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar isFinitePolyfill = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value);\n};\n\nvar _default = isFinitePolyfill;\nexports.default = _default;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = safeArrayFrom;\n\nvar _symbols = require(\"../polyfills/symbols.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Safer version of `Array.from` that return `null` if value isn't convertible to array.\n * Also protects against Array-like objects without items.\n *\n * @example\n *\n * safeArrayFrom([ 1, 2, 3 ]) // [1, 2, 3]\n * safeArrayFrom('ABC') // null\n * safeArrayFrom({ length: 1 }) // null\n * safeArrayFrom({ length: 1, 0: 'Alpha' }) // ['Alpha']\n * safeArrayFrom({ key: 'value' }) // null\n * safeArrayFrom(new Map()) // []\n *\n */\nfunction safeArrayFrom(collection) {\n  var mapFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (item) {\n    return item;\n  };\n\n  if (collection == null || _typeof(collection) !== 'object') {\n    return null;\n  }\n\n  if (Array.isArray(collection)) {\n    return collection.map(mapFn);\n  } // Is Iterable?\n\n\n  var iteratorMethod = collection[_symbols.SYMBOL_ITERATOR];\n\n  if (typeof iteratorMethod === 'function') {\n    // $FlowFixMe[incompatible-use]\n    var iterator = iteratorMethod.call(collection);\n    var result = [];\n    var step;\n\n    for (var i = 0; !(step = iterator.next()).done; ++i) {\n      result.push(mapFn(step.value, i));\n    }\n\n    return result;\n  } // Is Array like?\n\n\n  var length = collection.length;\n\n  if (typeof length === 'number' && length >= 0 && length % 1 === 0) {\n    var _result = [];\n\n    for (var _i = 0; _i < length; ++_i) {\n      if (!Object.prototype.hasOwnProperty.call(collection, _i)) {\n        return null;\n      }\n\n      _result.push(mapFn(collection[String(_i)], _i));\n    }\n\n    return _result;\n  }\n\n  return null;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n};\n\nvar _default = isInteger;\nexports.default = _default;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSpecifiedScalarType = isSpecifiedScalarType;\nexports.specifiedScalarTypes = exports.GraphQLID = exports.GraphQLBoolean = exports.GraphQLString = exports.GraphQLFloat = exports.GraphQLInt = void 0;\n\nvar _isFinite = _interopRequireDefault(require(\"../polyfills/isFinite.js\"));\n\nvar _isInteger = _interopRequireDefault(require(\"../polyfills/isInteger.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"../jsutils/isObjectLike.js\"));\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _printer = require(\"../language/printer.js\");\n\nvar _GraphQLError = require(\"../error/GraphQLError.js\");\n\nvar _definition = require(\"./definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// As per the GraphQL Spec, Integers are only treated as valid when a valid\n// 32-bit signed integer, providing the broadest support across platforms.\n//\n// n.b. JavaScript's integers are safe between -(2^53 - 1) and 2^53 - 1 because\n// they are internally represented as IEEE 754 doubles.\nvar MAX_INT = 2147483647;\nvar MIN_INT = -2147483648;\n\nfunction serializeInt(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue ? 1 : 0;\n  }\n\n  var num = coercedValue;\n\n  if (typeof coercedValue === 'string' && coercedValue !== '') {\n    num = Number(coercedValue);\n  }\n\n  if (!(0, _isInteger.default)(num)) {\n    throw new _GraphQLError.GraphQLError(\"Int cannot represent non-integer value: \".concat((0, _inspect.default)(coercedValue)));\n  }\n\n  if (num > MAX_INT || num < MIN_INT) {\n    throw new _GraphQLError.GraphQLError('Int cannot represent non 32-bit signed integer value: ' + (0, _inspect.default)(coercedValue));\n  }\n\n  return num;\n}\n\nfunction coerceInt(inputValue) {\n  if (!(0, _isInteger.default)(inputValue)) {\n    throw new _GraphQLError.GraphQLError(\"Int cannot represent non-integer value: \".concat((0, _inspect.default)(inputValue)));\n  }\n\n  if (inputValue > MAX_INT || inputValue < MIN_INT) {\n    throw new _GraphQLError.GraphQLError(\"Int cannot represent non 32-bit signed integer value: \".concat(inputValue));\n  }\n\n  return inputValue;\n}\n\nvar GraphQLInt = new _definition.GraphQLScalarType({\n  name: 'Int',\n  description: 'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n  serialize: serializeInt,\n  parseValue: coerceInt,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.INT) {\n      throw new _GraphQLError.GraphQLError(\"Int cannot represent non-integer value: \".concat((0, _printer.print)(valueNode)), valueNode);\n    }\n\n    var num = parseInt(valueNode.value, 10);\n\n    if (num > MAX_INT || num < MIN_INT) {\n      throw new _GraphQLError.GraphQLError(\"Int cannot represent non 32-bit signed integer value: \".concat(valueNode.value), valueNode);\n    }\n\n    return num;\n  }\n});\nexports.GraphQLInt = GraphQLInt;\n\nfunction serializeFloat(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue ? 1 : 0;\n  }\n\n  var num = coercedValue;\n\n  if (typeof coercedValue === 'string' && coercedValue !== '') {\n    num = Number(coercedValue);\n  }\n\n  if (!(0, _isFinite.default)(num)) {\n    throw new _GraphQLError.GraphQLError(\"Float cannot represent non numeric value: \".concat((0, _inspect.default)(coercedValue)));\n  }\n\n  return num;\n}\n\nfunction coerceFloat(inputValue) {\n  if (!(0, _isFinite.default)(inputValue)) {\n    throw new _GraphQLError.GraphQLError(\"Float cannot represent non numeric value: \".concat((0, _inspect.default)(inputValue)));\n  }\n\n  return inputValue;\n}\n\nvar GraphQLFloat = new _definition.GraphQLScalarType({\n  name: 'Float',\n  description: 'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n  serialize: serializeFloat,\n  parseValue: coerceFloat,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.FLOAT && valueNode.kind !== _kinds.Kind.INT) {\n      throw new _GraphQLError.GraphQLError(\"Float cannot represent non numeric value: \".concat((0, _printer.print)(valueNode)), valueNode);\n    }\n\n    return parseFloat(valueNode.value);\n  }\n}); // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nexports.GraphQLFloat = GraphQLFloat;\n\nfunction serializeObject(outputValue) {\n  if ((0, _isObjectLike.default)(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      var valueOfResult = outputValue.valueOf();\n\n      if (!(0, _isObjectLike.default)(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof outputValue.toJSON === 'function') {\n      // $FlowFixMe[incompatible-use]\n      return outputValue.toJSON();\n    }\n  }\n\n  return outputValue;\n}\n\nfunction serializeString(outputValue) {\n  var coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n  // attempt to coerce object, function, symbol, or other types as strings.\n\n  if (typeof coercedValue === 'string') {\n    return coercedValue;\n  }\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue ? 'true' : 'false';\n  }\n\n  if ((0, _isFinite.default)(coercedValue)) {\n    return coercedValue.toString();\n  }\n\n  throw new _GraphQLError.GraphQLError(\"String cannot represent value: \".concat((0, _inspect.default)(outputValue)));\n}\n\nfunction coerceString(inputValue) {\n  if (typeof inputValue !== 'string') {\n    throw new _GraphQLError.GraphQLError(\"String cannot represent a non string value: \".concat((0, _inspect.default)(inputValue)));\n  }\n\n  return inputValue;\n}\n\nvar GraphQLString = new _definition.GraphQLScalarType({\n  name: 'String',\n  description: 'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n  serialize: serializeString,\n  parseValue: coerceString,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.STRING) {\n      throw new _GraphQLError.GraphQLError(\"String cannot represent a non string value: \".concat((0, _printer.print)(valueNode)), valueNode);\n    }\n\n    return valueNode.value;\n  }\n});\nexports.GraphQLString = GraphQLString;\n\nfunction serializeBoolean(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'boolean') {\n    return coercedValue;\n  }\n\n  if ((0, _isFinite.default)(coercedValue)) {\n    return coercedValue !== 0;\n  }\n\n  throw new _GraphQLError.GraphQLError(\"Boolean cannot represent a non boolean value: \".concat((0, _inspect.default)(coercedValue)));\n}\n\nfunction coerceBoolean(inputValue) {\n  if (typeof inputValue !== 'boolean') {\n    throw new _GraphQLError.GraphQLError(\"Boolean cannot represent a non boolean value: \".concat((0, _inspect.default)(inputValue)));\n  }\n\n  return inputValue;\n}\n\nvar GraphQLBoolean = new _definition.GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n  serialize: serializeBoolean,\n  parseValue: coerceBoolean,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.BOOLEAN) {\n      throw new _GraphQLError.GraphQLError(\"Boolean cannot represent a non boolean value: \".concat((0, _printer.print)(valueNode)), valueNode);\n    }\n\n    return valueNode.value;\n  }\n});\nexports.GraphQLBoolean = GraphQLBoolean;\n\nfunction serializeID(outputValue) {\n  var coercedValue = serializeObject(outputValue);\n\n  if (typeof coercedValue === 'string') {\n    return coercedValue;\n  }\n\n  if ((0, _isInteger.default)(coercedValue)) {\n    return String(coercedValue);\n  }\n\n  throw new _GraphQLError.GraphQLError(\"ID cannot represent value: \".concat((0, _inspect.default)(outputValue)));\n}\n\nfunction coerceID(inputValue) {\n  if (typeof inputValue === 'string') {\n    return inputValue;\n  }\n\n  if ((0, _isInteger.default)(inputValue)) {\n    return inputValue.toString();\n  }\n\n  throw new _GraphQLError.GraphQLError(\"ID cannot represent value: \".concat((0, _inspect.default)(inputValue)));\n}\n\nvar GraphQLID = new _definition.GraphQLScalarType({\n  name: 'ID',\n  description: 'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n  serialize: serializeID,\n  parseValue: coerceID,\n  parseLiteral: function parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.STRING && valueNode.kind !== _kinds.Kind.INT) {\n      throw new _GraphQLError.GraphQLError('ID cannot represent a non-string and non-integer value: ' + (0, _printer.print)(valueNode), valueNode);\n    }\n\n    return valueNode.value;\n  }\n});\nexports.GraphQLID = GraphQLID;\nvar specifiedScalarTypes = Object.freeze([GraphQLString, GraphQLInt, GraphQLFloat, GraphQLBoolean, GraphQLID]);\nexports.specifiedScalarTypes = specifiedScalarTypes;\n\nfunction isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(function (_ref) {\n    var name = _ref.name;\n    return type.name === name;\n  });\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.astFromValue = astFromValue;\n\nvar _isFinite = _interopRequireDefault(require(\"../polyfills/isFinite.js\"));\n\nvar _objectValues3 = _interopRequireDefault(require(\"../polyfills/objectValues.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"../jsutils/isObjectLike.js\"));\n\nvar _safeArrayFrom = _interopRequireDefault(require(\"../jsutils/safeArrayFrom.js\"));\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _scalars = require(\"../type/scalars.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Mixed         | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n  if ((0, _definition.isNonNullType)(type)) {\n    var astValue = astFromValue(value, type.ofType);\n\n    if ((astValue === null || astValue === void 0 ? void 0 : astValue.kind) === _kinds.Kind.NULL) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n\n  if (value === null) {\n    return {\n      kind: _kinds.Kind.NULL\n    };\n  } // undefined\n\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n\n  if ((0, _definition.isListType)(type)) {\n    var itemType = type.ofType;\n    var items = (0, _safeArrayFrom.default)(value);\n\n    if (items != null) {\n      var valuesNodes = [];\n\n      for (var _i2 = 0; _i2 < items.length; _i2++) {\n        var item = items[_i2];\n        var itemNode = astFromValue(item, itemType);\n\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n\n      return {\n        kind: _kinds.Kind.LIST,\n        values: valuesNodes\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (!(0, _isObjectLike.default)(value)) {\n      return null;\n    }\n\n    var fieldNodes = [];\n\n    for (var _i4 = 0, _objectValues2 = (0, _objectValues3.default)(type.getFields()); _i4 < _objectValues2.length; _i4++) {\n      var field = _objectValues2[_i4];\n      var fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: _kinds.Kind.OBJECT_FIELD,\n          name: {\n            kind: _kinds.Kind.NAME,\n            value: field.name\n          },\n          value: fieldValue\n        });\n      }\n    }\n\n    return {\n      kind: _kinds.Kind.OBJECT,\n      fields: fieldNodes\n    };\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if ((0, _definition.isLeafType)(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    var serialized = type.serialize(value);\n\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: _kinds.Kind.BOOLEAN,\n        value: serialized\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n\n    if (typeof serialized === 'number' && (0, _isFinite.default)(serialized)) {\n      var stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum) ? {\n        kind: _kinds.Kind.INT,\n        value: stringNum\n      } : {\n        kind: _kinds.Kind.FLOAT,\n        value: stringNum\n      };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if ((0, _definition.isEnumType)(type)) {\n        return {\n          kind: _kinds.Kind.ENUM,\n          value: serialized\n        };\n      } // ID types can use Int literals.\n\n\n      if (type === _scalars.GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: _kinds.Kind.INT,\n          value: serialized\n        };\n      }\n\n      return {\n        kind: _kinds.Kind.STRING,\n        value: serialized\n      };\n    }\n\n    throw new TypeError(\"Cannot convert value to AST: \".concat((0, _inspect.default)(serialized), \".\"));\n  } // istanbul ignore next (Not reachable. All possible input types have been considered)\n\n\n  false || (0, _invariant.default)(0, 'Unexpected input type: ' + (0, _inspect.default)(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\n\nvar integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isIntrospectionType = isIntrospectionType;\nexports.introspectionTypes = exports.TypeNameMetaFieldDef = exports.TypeMetaFieldDef = exports.SchemaMetaFieldDef = exports.__TypeKind = exports.TypeKind = exports.__EnumValue = exports.__InputValue = exports.__Field = exports.__Type = exports.__DirectiveLocation = exports.__Directive = exports.__Schema = void 0;\n\nvar _objectValues = _interopRequireDefault(require(\"../polyfills/objectValues.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _printer = require(\"../language/printer.js\");\n\nvar _directiveLocation = require(\"../language/directiveLocation.js\");\n\nvar _astFromValue = require(\"../utilities/astFromValue.js\");\n\nvar _scalars = require(\"./scalars.js\");\n\nvar _definition = require(\"./definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __Schema = new _definition.GraphQLObjectType({\n  name: '__Schema',\n  description: 'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: function fields() {\n    return {\n      description: {\n        type: _scalars.GraphQLString,\n        resolve: function resolve(schema) {\n          return schema.description;\n        }\n      },\n      types: {\n        description: 'A list of all types supported by this server.',\n        type: new _definition.GraphQLNonNull(new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type))),\n        resolve: function resolve(schema) {\n          return (0, _objectValues.default)(schema.getTypeMap());\n        }\n      },\n      queryType: {\n        description: 'The type that query operations will be rooted at.',\n        type: new _definition.GraphQLNonNull(__Type),\n        resolve: function resolve(schema) {\n          return schema.getQueryType();\n        }\n      },\n      mutationType: {\n        description: 'If this server supports mutation, the type that mutation operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getMutationType();\n        }\n      },\n      subscriptionType: {\n        description: 'If this server support subscription, the type that subscription operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getSubscriptionType();\n        }\n      },\n      directives: {\n        description: 'A list of all directives supported by this server.',\n        type: new _definition.GraphQLNonNull(new _definition.GraphQLList(new _definition.GraphQLNonNull(__Directive))),\n        resolve: function resolve(schema) {\n          return schema.getDirectives();\n        }\n      }\n    };\n  }\n});\n\nexports.__Schema = __Schema;\n\nvar __Directive = new _definition.GraphQLObjectType({\n  name: '__Directive',\n  description: \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: function fields() {\n    return {\n      name: {\n        type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n        resolve: function resolve(directive) {\n          return directive.name;\n        }\n      },\n      description: {\n        type: _scalars.GraphQLString,\n        resolve: function resolve(directive) {\n          return directive.description;\n        }\n      },\n      isRepeatable: {\n        type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n        resolve: function resolve(directive) {\n          return directive.isRepeatable;\n        }\n      },\n      locations: {\n        type: new _definition.GraphQLNonNull(new _definition.GraphQLList(new _definition.GraphQLNonNull(__DirectiveLocation))),\n        resolve: function resolve(directive) {\n          return directive.locations;\n        }\n      },\n      args: {\n        type: new _definition.GraphQLNonNull(new _definition.GraphQLList(new _definition.GraphQLNonNull(__InputValue))),\n        args: {\n          includeDeprecated: {\n            type: _scalars.GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(field, _ref) {\n          var includeDeprecated = _ref.includeDeprecated;\n          return includeDeprecated ? field.args : field.args.filter(function (arg) {\n            return arg.deprecationReason == null;\n          });\n        }\n      }\n    };\n  }\n});\n\nexports.__Directive = __Directive;\n\nvar __DirectiveLocation = new _definition.GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description: 'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: _directiveLocation.DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.'\n    },\n    MUTATION: {\n      value: _directiveLocation.DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.'\n    },\n    SUBSCRIPTION: {\n      value: _directiveLocation.DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.'\n    },\n    FIELD: {\n      value: _directiveLocation.DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.'\n    },\n    FRAGMENT_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.'\n    },\n    FRAGMENT_SPREAD: {\n      value: _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.'\n    },\n    INLINE_FRAGMENT: {\n      value: _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.'\n    },\n    VARIABLE_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.'\n    },\n    SCHEMA: {\n      value: _directiveLocation.DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.'\n    },\n    SCALAR: {\n      value: _directiveLocation.DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.'\n    },\n    OBJECT: {\n      value: _directiveLocation.DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.'\n    },\n    FIELD_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.'\n    },\n    ARGUMENT_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.'\n    },\n    INTERFACE: {\n      value: _directiveLocation.DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.'\n    },\n    UNION: {\n      value: _directiveLocation.DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.'\n    },\n    ENUM: {\n      value: _directiveLocation.DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.'\n    },\n    ENUM_VALUE: {\n      value: _directiveLocation.DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.'\n    },\n    INPUT_OBJECT: {\n      value: _directiveLocation.DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.'\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.'\n    }\n  }\n});\n\nexports.__DirectiveLocation = __DirectiveLocation;\n\nvar __Type = new _definition.GraphQLObjectType({\n  name: '__Type',\n  description: 'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: function fields() {\n    return {\n      kind: {\n        type: new _definition.GraphQLNonNull(__TypeKind),\n        resolve: function resolve(type) {\n          if ((0, _definition.isScalarType)(type)) {\n            return TypeKind.SCALAR;\n          }\n\n          if ((0, _definition.isObjectType)(type)) {\n            return TypeKind.OBJECT;\n          }\n\n          if ((0, _definition.isInterfaceType)(type)) {\n            return TypeKind.INTERFACE;\n          }\n\n          if ((0, _definition.isUnionType)(type)) {\n            return TypeKind.UNION;\n          }\n\n          if ((0, _definition.isEnumType)(type)) {\n            return TypeKind.ENUM;\n          }\n\n          if ((0, _definition.isInputObjectType)(type)) {\n            return TypeKind.INPUT_OBJECT;\n          }\n\n          if ((0, _definition.isListType)(type)) {\n            return TypeKind.LIST;\n          } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n          if ((0, _definition.isNonNullType)(type)) {\n            return TypeKind.NON_NULL;\n          } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n          false || (0, _invariant.default)(0, \"Unexpected type: \\\"\".concat((0, _inspect.default)(type), \"\\\".\"));\n        }\n      },\n      name: {\n        type: _scalars.GraphQLString,\n        resolve: function resolve(type) {\n          return type.name !== undefined ? type.name : undefined;\n        }\n      },\n      description: {\n        type: _scalars.GraphQLString,\n        resolve: function resolve(type) {\n          return type.description !== undefined ? type.description : undefined;\n        }\n      },\n      specifiedByUrl: {\n        type: _scalars.GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.specifiedByUrl !== undefined ? obj.specifiedByUrl : undefined;\n        }\n      },\n      fields: {\n        type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Field)),\n        args: {\n          includeDeprecated: {\n            type: _scalars.GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(type, _ref2) {\n          var includeDeprecated = _ref2.includeDeprecated;\n\n          if ((0, _definition.isObjectType)(type) || (0, _definition.isInterfaceType)(type)) {\n            var fields = (0, _objectValues.default)(type.getFields());\n            return includeDeprecated ? fields : fields.filter(function (field) {\n              return field.deprecationReason == null;\n            });\n          }\n        }\n      },\n      interfaces: {\n        type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n        resolve: function resolve(type) {\n          if ((0, _definition.isObjectType)(type) || (0, _definition.isInterfaceType)(type)) {\n            return type.getInterfaces();\n          }\n        }\n      },\n      possibleTypes: {\n        type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n        resolve: function resolve(type, _args, _context, _ref3) {\n          var schema = _ref3.schema;\n\n          if ((0, _definition.isAbstractType)(type)) {\n            return schema.getPossibleTypes(type);\n          }\n        }\n      },\n      enumValues: {\n        type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__EnumValue)),\n        args: {\n          includeDeprecated: {\n            type: _scalars.GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(type, _ref4) {\n          var includeDeprecated = _ref4.includeDeprecated;\n\n          if ((0, _definition.isEnumType)(type)) {\n            var values = type.getValues();\n            return includeDeprecated ? values : values.filter(function (field) {\n              return field.deprecationReason == null;\n            });\n          }\n        }\n      },\n      inputFields: {\n        type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__InputValue)),\n        args: {\n          includeDeprecated: {\n            type: _scalars.GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(type, _ref5) {\n          var includeDeprecated = _ref5.includeDeprecated;\n\n          if ((0, _definition.isInputObjectType)(type)) {\n            var values = (0, _objectValues.default)(type.getFields());\n            return includeDeprecated ? values : values.filter(function (field) {\n              return field.deprecationReason == null;\n            });\n          }\n        }\n      },\n      ofType: {\n        type: __Type,\n        resolve: function resolve(type) {\n          return type.ofType !== undefined ? type.ofType : undefined;\n        }\n      }\n    };\n  }\n});\n\nexports.__Type = __Type;\n\nvar __Field = new _definition.GraphQLObjectType({\n  name: '__Field',\n  description: 'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: function fields() {\n    return {\n      name: {\n        type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n        resolve: function resolve(field) {\n          return field.name;\n        }\n      },\n      description: {\n        type: _scalars.GraphQLString,\n        resolve: function resolve(field) {\n          return field.description;\n        }\n      },\n      args: {\n        type: new _definition.GraphQLNonNull(new _definition.GraphQLList(new _definition.GraphQLNonNull(__InputValue))),\n        args: {\n          includeDeprecated: {\n            type: _scalars.GraphQLBoolean,\n            defaultValue: false\n          }\n        },\n        resolve: function resolve(field, _ref6) {\n          var includeDeprecated = _ref6.includeDeprecated;\n          return includeDeprecated ? field.args : field.args.filter(function (arg) {\n            return arg.deprecationReason == null;\n          });\n        }\n      },\n      type: {\n        type: new _definition.GraphQLNonNull(__Type),\n        resolve: function resolve(field) {\n          return field.type;\n        }\n      },\n      isDeprecated: {\n        type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n        resolve: function resolve(field) {\n          return field.deprecationReason != null;\n        }\n      },\n      deprecationReason: {\n        type: _scalars.GraphQLString,\n        resolve: function resolve(field) {\n          return field.deprecationReason;\n        }\n      }\n    };\n  }\n});\n\nexports.__Field = __Field;\n\nvar __InputValue = new _definition.GraphQLObjectType({\n  name: '__InputValue',\n  description: 'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: function fields() {\n    return {\n      name: {\n        type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n        resolve: function resolve(inputValue) {\n          return inputValue.name;\n        }\n      },\n      description: {\n        type: _scalars.GraphQLString,\n        resolve: function resolve(inputValue) {\n          return inputValue.description;\n        }\n      },\n      type: {\n        type: new _definition.GraphQLNonNull(__Type),\n        resolve: function resolve(inputValue) {\n          return inputValue.type;\n        }\n      },\n      defaultValue: {\n        type: _scalars.GraphQLString,\n        description: 'A GraphQL-formatted string representing the default value for this input value.',\n        resolve: function resolve(inputValue) {\n          var type = inputValue.type,\n              defaultValue = inputValue.defaultValue;\n          var valueAST = (0, _astFromValue.astFromValue)(defaultValue, type);\n          return valueAST ? (0, _printer.print)(valueAST) : null;\n        }\n      },\n      isDeprecated: {\n        type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n        resolve: function resolve(field) {\n          return field.deprecationReason != null;\n        }\n      },\n      deprecationReason: {\n        type: _scalars.GraphQLString,\n        resolve: function resolve(obj) {\n          return obj.deprecationReason;\n        }\n      }\n    };\n  }\n});\n\nexports.__InputValue = __InputValue;\n\nvar __EnumValue = new _definition.GraphQLObjectType({\n  name: '__EnumValue',\n  description: 'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: function fields() {\n    return {\n      name: {\n        type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n        resolve: function resolve(enumValue) {\n          return enumValue.name;\n        }\n      },\n      description: {\n        type: _scalars.GraphQLString,\n        resolve: function resolve(enumValue) {\n          return enumValue.description;\n        }\n      },\n      isDeprecated: {\n        type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n        resolve: function resolve(enumValue) {\n          return enumValue.deprecationReason != null;\n        }\n      },\n      deprecationReason: {\n        type: _scalars.GraphQLString,\n        resolve: function resolve(enumValue) {\n          return enumValue.deprecationReason;\n        }\n      }\n    };\n  }\n});\n\nexports.__EnumValue = __EnumValue;\nvar TypeKind = Object.freeze({\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  LIST: 'LIST',\n  NON_NULL: 'NON_NULL'\n});\nexports.TypeKind = TypeKind;\n\nvar __TypeKind = new _definition.GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.'\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description: 'Indicates this type is an object. `fields` and `interfaces` are valid fields.'\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description: 'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.'\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description: 'Indicates this type is a union. `possibleTypes` is a valid field.'\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description: 'Indicates this type is an enum. `enumValues` is a valid field.'\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description: 'Indicates this type is an input object. `inputFields` is a valid field.'\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.'\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description: 'Indicates this type is a non-null. `ofType` is a valid field.'\n    }\n  }\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\n\nexports.__TypeKind = __TypeKind;\nvar SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new _definition.GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: function resolve(_source, _args, _context, _ref7) {\n    var schema = _ref7.schema;\n    return schema;\n  },\n  isDeprecated: false,\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexports.SchemaMetaFieldDef = SchemaMetaFieldDef;\nvar TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [{\n    name: 'name',\n    description: undefined,\n    type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n    defaultValue: undefined,\n    deprecationReason: undefined,\n    extensions: undefined,\n    astNode: undefined\n  }],\n  resolve: function resolve(_source, _ref8, _context, _ref9) {\n    var name = _ref8.name;\n    var schema = _ref9.schema;\n    return schema.getType(name);\n  },\n  isDeprecated: false,\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexports.TypeMetaFieldDef = TypeMetaFieldDef;\nvar TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: function resolve(_source, _args, _context, _ref10) {\n    var parentType = _ref10.parentType;\n    return parentType.name;\n  },\n  isDeprecated: false,\n  deprecationReason: undefined,\n  extensions: undefined,\n  astNode: undefined\n};\nexports.TypeNameMetaFieldDef = TypeNameMetaFieldDef;\nvar introspectionTypes = Object.freeze([__Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind]);\nexports.introspectionTypes = introspectionTypes;\n\nfunction isIntrospectionType(type) {\n  return introspectionTypes.some(function (_ref11) {\n    var name = _ref11.name;\n    return type.name === name;\n  });\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDirective = isDirective;\nexports.assertDirective = assertDirective;\nexports.isSpecifiedDirective = isSpecifiedDirective;\nexports.specifiedDirectives = exports.GraphQLSpecifiedByDirective = exports.GraphQLDeprecatedDirective = exports.DEFAULT_DEPRECATION_REASON = exports.GraphQLSkipDirective = exports.GraphQLIncludeDirective = exports.GraphQLDirective = void 0;\n\nvar _objectEntries = _interopRequireDefault(require(\"../polyfills/objectEntries.js\"));\n\nvar _symbols = require(\"../polyfills/symbols.js\");\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _toObjMap = _interopRequireDefault(require(\"../jsutils/toObjMap.js\"));\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert.js\"));\n\nvar _instanceOf = _interopRequireDefault(require(\"../jsutils/instanceOf.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"../jsutils/isObjectLike.js\"));\n\nvar _defineInspect = _interopRequireDefault(require(\"../jsutils/defineInspect.js\"));\n\nvar _directiveLocation = require(\"../language/directiveLocation.js\");\n\nvar _scalars = require(\"./scalars.js\");\n\nvar _definition = require(\"./definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// eslint-disable-next-line no-redeclare\nfunction isDirective(directive) {\n  return (0, _instanceOf.default)(directive, GraphQLDirective);\n}\n\nfunction assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(directive), \" to be a GraphQL directive.\"));\n  }\n\n  return directive;\n}\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\n\nvar GraphQLDirective = /*#__PURE__*/function () {\n  function GraphQLDirective(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = config.name;\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable = (_config$isRepeatable = config.isRepeatable) !== null && _config$isRepeatable !== void 0 ? _config$isRepeatable : false;\n    this.extensions = config.extensions && (0, _toObjMap.default)(config.extensions);\n    this.astNode = config.astNode;\n    config.name || (0, _devAssert.default)(0, 'Directive must be named.');\n    Array.isArray(config.locations) || (0, _devAssert.default)(0, \"@\".concat(config.name, \" locations must be an Array.\"));\n    var args = (_config$args = config.args) !== null && _config$args !== void 0 ? _config$args : {};\n    (0, _isObjectLike.default)(args) && !Array.isArray(args) || (0, _devAssert.default)(0, \"@\".concat(config.name, \" args must be an object with argument names as keys.\"));\n    this.args = (0, _objectEntries.default)(args).map(function (_ref) {\n      var argName = _ref[0],\n          argConfig = _ref[1];\n      return {\n        name: argName,\n        description: argConfig.description,\n        type: argConfig.type,\n        defaultValue: argConfig.defaultValue,\n        deprecationReason: argConfig.deprecationReason,\n        extensions: argConfig.extensions && (0, _toObjMap.default)(argConfig.extensions),\n        astNode: argConfig.astNode\n      };\n    });\n  }\n\n  var _proto = GraphQLDirective.prototype;\n\n  _proto.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: (0, _definition.argsToArgsConfig)(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode\n    };\n  };\n\n  _proto.toString = function toString() {\n    return '@' + this.name;\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLDirective, [{\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLDirective';\n    }\n  }]);\n\n  return GraphQLDirective;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.GraphQLDirective = GraphQLDirective;\n(0, _defineInspect.default)(GraphQLDirective);\n\n/**\n * Used to conditionally include fields or fragments.\n */\nvar GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [_directiveLocation.DirectiveLocation.FIELD, _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD, _directiveLocation.DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexports.GraphQLIncludeDirective = GraphQLIncludeDirective;\nvar GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [_directiveLocation.DirectiveLocation.FIELD, _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD, _directiveLocation.DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexports.GraphQLSkipDirective = GraphQLSkipDirective;\nvar DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexports.DEFAULT_DEPRECATION_REASON = DEFAULT_DEPRECATION_REASON;\nvar GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [_directiveLocation.DirectiveLocation.FIELD_DEFINITION, _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION, _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION, _directiveLocation.DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: _scalars.GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * Used to provide a URL for specifying the behaviour of custom scalar definitions.\n */\n\nexports.GraphQLDeprecatedDirective = GraphQLDeprecatedDirective;\nvar GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behaviour of this scalar.',\n  locations: [_directiveLocation.DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      description: 'The URL that specifies the behaviour of this scalar.'\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nexports.GraphQLSpecifiedByDirective = GraphQLSpecifiedByDirective;\nvar specifiedDirectives = Object.freeze([GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective, GraphQLSpecifiedByDirective]);\nexports.specifiedDirectives = specifiedDirectives;\n\nfunction isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(function (_ref2) {\n    var name = _ref2.name;\n    return name === directive.name;\n  });\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSchema = isSchema;\nexports.assertSchema = assertSchema;\nexports.GraphQLSchema = void 0;\n\nvar _find = _interopRequireDefault(require(\"../polyfills/find.js\"));\n\nvar _arrayFrom3 = _interopRequireDefault(require(\"../polyfills/arrayFrom.js\"));\n\nvar _objectValues5 = _interopRequireDefault(require(\"../polyfills/objectValues.js\"));\n\nvar _symbols = require(\"../polyfills/symbols.js\");\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _toObjMap = _interopRequireDefault(require(\"../jsutils/toObjMap.js\"));\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert.js\"));\n\nvar _instanceOf = _interopRequireDefault(require(\"../jsutils/instanceOf.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"../jsutils/isObjectLike.js\"));\n\nvar _introspection = require(\"./introspection.js\");\n\nvar _directives = require(\"./directives.js\");\n\nvar _definition = require(\"./definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// eslint-disable-next-line no-redeclare\nfunction isSchema(schema) {\n  return (0, _instanceOf.default)(schema, GraphQLSchema);\n}\n\nfunction assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(\"Expected \".concat((0, _inspect.default)(schema), \" to be a GraphQL schema.\"));\n  }\n\n  return schema;\n}\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       query: MyAppQueryRootType,\n *       mutation: MyAppMutationRootType,\n *     })\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n *     const characterInterface = new GraphQLInterfaceType({\n *       name: 'Character',\n *       ...\n *     });\n *\n *     const humanType = new GraphQLObjectType({\n *       name: 'Human',\n *       interfaces: [characterInterface],\n *       ...\n *     });\n *\n *     const droidType = new GraphQLObjectType({\n *       name: 'Droid',\n *       interfaces: [characterInterface],\n *       ...\n *     });\n *\n *     const schema = new GraphQLSchema({\n *       query: new GraphQLObjectType({\n *         name: 'Query',\n *         fields: {\n *           hero: { type: characterInterface, ... },\n *         }\n *       }),\n *       ...\n *       // Since this schema references only the `Character` interface it's\n *       // necessary to explicitly list the types that implement it if\n *       // you want them to be included in the final schema.\n *       types: [humanType, droidType],\n *     })\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. @include and\n * @skip) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       ...\n *       directives: specifiedDirectives.concat([ myCustomDirective ]),\n *     })\n *\n */\n\n\nvar GraphQLSchema = /*#__PURE__*/function () {\n  // Used as a cache for validateSchema().\n  function GraphQLSchema(config) {\n    var _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.\n\n    (0, _isObjectLike.default)(config) || (0, _devAssert.default)(0, 'Must provide configuration object.');\n    !config.types || Array.isArray(config.types) || (0, _devAssert.default)(0, \"\\\"types\\\" must be Array if provided but got: \".concat((0, _inspect.default)(config.types), \".\"));\n    !config.directives || Array.isArray(config.directives) || (0, _devAssert.default)(0, '\"directives\" must be Array if provided but got: ' + \"\".concat((0, _inspect.default)(config.directives), \".\"));\n    this.description = config.description;\n    this.extensions = config.extensions && (0, _toObjMap.default)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = config.extensionASTNodes;\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives = (_config$directives = config.directives) !== null && _config$directives !== void 0 ? _config$directives : _directives.specifiedDirectives; // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    var allReferencedTypes = new Set(config.types);\n\n    if (config.types != null) {\n      for (var _i2 = 0, _config$types2 = config.types; _i2 < _config$types2.length; _i2++) {\n        var type = _config$types2[_i2];\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n\n    for (var _i4 = 0, _this$_directives2 = this._directives; _i4 < _this$_directives2.length; _i4++) {\n      var directive = _this$_directives2[_i4];\n\n      // Directives are not validated until validateSchema() is called.\n      if ((0, _directives.isDirective)(directive)) {\n        for (var _i6 = 0, _directive$args2 = directive.args; _i6 < _directive$args2.length; _i6++) {\n          var arg = _directive$args2[_i6];\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n\n    collectReferencedTypes(_introspection.__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n\n    for (var _i8 = 0, _arrayFrom2 = (0, _arrayFrom3.default)(allReferencedTypes); _i8 < _arrayFrom2.length; _i8++) {\n      var namedType = _arrayFrom2[_i8];\n\n      if (namedType == null) {\n        continue;\n      }\n\n      var typeName = namedType.name;\n      typeName || (0, _devAssert.default)(0, 'One of the provided types for building the Schema is missing a name.');\n\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(\"Schema must contain uniquely named types but contains multiple types named \\\"\".concat(typeName, \"\\\".\"));\n      }\n\n      this._typeMap[typeName] = namedType;\n\n      if ((0, _definition.isInterfaceType)(namedType)) {\n        // Store implementations by interface.\n        for (var _i10 = 0, _namedType$getInterfa2 = namedType.getInterfaces(); _i10 < _namedType$getInterfa2.length; _i10++) {\n          var iface = _namedType$getInterfa2[_i10];\n\n          if ((0, _definition.isInterfaceType)(iface)) {\n            var implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: []\n              };\n            }\n\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if ((0, _definition.isObjectType)(namedType)) {\n        // Store implementations by objects.\n        for (var _i12 = 0, _namedType$getInterfa4 = namedType.getInterfaces(); _i12 < _namedType$getInterfa4.length; _i12++) {\n          var _iface = _namedType$getInterfa4[_i12];\n\n          if ((0, _definition.isInterfaceType)(_iface)) {\n            var _implementations = this._implementationsMap[_iface.name];\n\n            if (_implementations === undefined) {\n              _implementations = this._implementationsMap[_iface.name] = {\n                objects: [],\n                interfaces: []\n              };\n            }\n\n            _implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n\n  var _proto = GraphQLSchema.prototype;\n\n  _proto.getQueryType = function getQueryType() {\n    return this._queryType;\n  };\n\n  _proto.getMutationType = function getMutationType() {\n    return this._mutationType;\n  };\n\n  _proto.getSubscriptionType = function getSubscriptionType() {\n    return this._subscriptionType;\n  };\n\n  _proto.getTypeMap = function getTypeMap() {\n    return this._typeMap;\n  };\n\n  _proto.getType = function getType(name) {\n    return this.getTypeMap()[name];\n  };\n\n  _proto.getPossibleTypes = function getPossibleTypes(abstractType) {\n    return (0, _definition.isUnionType)(abstractType) ? abstractType.getTypes() : this.getImplementations(abstractType).objects;\n  };\n\n  _proto.getImplementations = function getImplementations(interfaceType) {\n    var implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0 ? implementations : {\n      objects: [],\n      interfaces: []\n    };\n  } // @deprecated: use isSubType instead - will be removed in v16.\n  ;\n\n  _proto.isPossibleType = function isPossibleType(abstractType, possibleType) {\n    return this.isSubType(abstractType, possibleType);\n  };\n\n  _proto.isSubType = function isSubType(abstractType, maybeSubType) {\n    var map = this._subTypeMap[abstractType.name];\n\n    if (map === undefined) {\n      map = Object.create(null);\n\n      if ((0, _definition.isUnionType)(abstractType)) {\n        for (var _i14 = 0, _abstractType$getType2 = abstractType.getTypes(); _i14 < _abstractType$getType2.length; _i14++) {\n          var type = _abstractType$getType2[_i14];\n          map[type.name] = true;\n        }\n      } else {\n        var implementations = this.getImplementations(abstractType);\n\n        for (var _i16 = 0, _implementations$obje2 = implementations.objects; _i16 < _implementations$obje2.length; _i16++) {\n          var _type = _implementations$obje2[_i16];\n          map[_type.name] = true;\n        }\n\n        for (var _i18 = 0, _implementations$inte2 = implementations.interfaces; _i18 < _implementations$inte2.length; _i18++) {\n          var _type2 = _implementations$inte2[_i18];\n          map[_type2.name] = true;\n        }\n      }\n\n      this._subTypeMap[abstractType.name] = map;\n    }\n\n    return map[maybeSubType.name] !== undefined;\n  };\n\n  _proto.getDirectives = function getDirectives() {\n    return this._directives;\n  };\n\n  _proto.getDirective = function getDirective(name) {\n    return (0, _find.default)(this.getDirectives(), function (directive) {\n      return directive.name === name;\n    });\n  };\n\n  _proto.toConfig = function toConfig() {\n    var _this$extensionASTNod;\n\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: (0, _objectValues5.default)(this.getTypeMap()),\n      directives: this.getDirectives().slice(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod = this.extensionASTNodes) !== null && _this$extensionASTNod !== void 0 ? _this$extensionASTNod : [],\n      assumeValid: this.__validationErrors !== undefined\n    };\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLSchema, [{\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLSchema';\n    }\n  }]);\n\n  return GraphQLSchema;\n}();\n\nexports.GraphQLSchema = GraphQLSchema;\n\nfunction collectReferencedTypes(type, typeSet) {\n  var namedType = (0, _definition.getNamedType)(type);\n\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n\n    if ((0, _definition.isUnionType)(namedType)) {\n      for (var _i20 = 0, _namedType$getTypes2 = namedType.getTypes(); _i20 < _namedType$getTypes2.length; _i20++) {\n        var memberType = _namedType$getTypes2[_i20];\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if ((0, _definition.isObjectType)(namedType) || (0, _definition.isInterfaceType)(namedType)) {\n      for (var _i22 = 0, _namedType$getInterfa6 = namedType.getInterfaces(); _i22 < _namedType$getInterfa6.length; _i22++) {\n        var interfaceType = _namedType$getInterfa6[_i22];\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n\n      for (var _i24 = 0, _objectValues2 = (0, _objectValues5.default)(namedType.getFields()); _i24 < _objectValues2.length; _i24++) {\n        var field = _objectValues2[_i24];\n        collectReferencedTypes(field.type, typeSet);\n\n        for (var _i26 = 0, _field$args2 = field.args; _i26 < _field$args2.length; _i26++) {\n          var arg = _field$args2[_i26];\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if ((0, _definition.isInputObjectType)(namedType)) {\n      for (var _i28 = 0, _objectValues4 = (0, _objectValues5.default)(namedType.getFields()); _i28 < _objectValues4.length; _i28++) {\n        var _field = _objectValues4[_i28];\n        collectReferencedTypes(_field.type, typeSet);\n      }\n    }\n  }\n\n  return typeSet;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateSchema = validateSchema;\nexports.assertValidSchema = assertValidSchema;\n\nvar _find = _interopRequireDefault(require(\"../polyfills/find.js\"));\n\nvar _objectValues5 = _interopRequireDefault(require(\"../polyfills/objectValues.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _GraphQLError = require(\"../error/GraphQLError.js\");\n\nvar _locatedError = require(\"../error/locatedError.js\");\n\nvar _assertValidName = require(\"../utilities/assertValidName.js\");\n\nvar _typeComparators = require(\"../utilities/typeComparators.js\");\n\nvar _schema = require(\"./schema.js\");\n\nvar _introspection = require(\"./introspection.js\");\n\nvar _directives = require(\"./directives.js\");\n\nvar _definition = require(\"./definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\nfunction validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  (0, _schema.assertSchema)(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n\n  var context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  var errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\n\nfunction assertValidSchema(schema) {\n  var errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n\nvar SchemaValidationContext = /*#__PURE__*/function () {\n  function SchemaValidationContext(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  var _proto = SchemaValidationContext.prototype;\n\n  _proto.reportError = function reportError(message, nodes) {\n    var _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this.addError(new _GraphQLError.GraphQLError(message, _nodes));\n  };\n\n  _proto.addError = function addError(error) {\n    this._errors.push(error);\n  };\n\n  _proto.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  return SchemaValidationContext;\n}();\n\nfunction validateRootTypes(context) {\n  var schema = context.schema;\n  var queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!(0, _definition.isObjectType)(queryType)) {\n    var _getOperationTypeNode;\n\n    context.reportError(\"Query root type must be Object type, it cannot be \".concat((0, _inspect.default)(queryType), \".\"), (_getOperationTypeNode = getOperationTypeNode(schema, 'query')) !== null && _getOperationTypeNode !== void 0 ? _getOperationTypeNode : queryType.astNode);\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && !(0, _definition.isObjectType)(mutationType)) {\n    var _getOperationTypeNode2;\n\n    context.reportError('Mutation root type must be Object type if provided, it cannot be ' + \"\".concat((0, _inspect.default)(mutationType), \".\"), (_getOperationTypeNode2 = getOperationTypeNode(schema, 'mutation')) !== null && _getOperationTypeNode2 !== void 0 ? _getOperationTypeNode2 : mutationType.astNode);\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !(0, _definition.isObjectType)(subscriptionType)) {\n    var _getOperationTypeNode3;\n\n    context.reportError('Subscription root type must be Object type if provided, it cannot be ' + \"\".concat((0, _inspect.default)(subscriptionType), \".\"), (_getOperationTypeNode3 = getOperationTypeNode(schema, 'subscription')) !== null && _getOperationTypeNode3 !== void 0 ? _getOperationTypeNode3 : subscriptionType.astNode);\n  }\n}\n\nfunction getOperationTypeNode(schema, operation) {\n  var operationNodes = getAllSubNodes(schema, function (node) {\n    return node.operationTypes;\n  });\n\n  for (var _i2 = 0; _i2 < operationNodes.length; _i2++) {\n    var node = operationNodes[_i2];\n\n    if (node.operation === operation) {\n      return node.type;\n    }\n  }\n\n  return undefined;\n}\n\nfunction validateDirectives(context) {\n  for (var _i4 = 0, _context$schema$getDi2 = context.schema.getDirectives(); _i4 < _context$schema$getDi2.length; _i4++) {\n    var directive = _context$schema$getDi2[_i4];\n\n    // Ensure all directives are in fact GraphQL directives.\n    if (!(0, _directives.isDirective)(directive)) {\n      context.reportError(\"Expected directive but got: \".concat((0, _inspect.default)(directive), \".\"), directive === null || directive === void 0 ? void 0 : directive.astNode);\n      continue;\n    } // Ensure they are named correctly.\n\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (var _i6 = 0, _directive$args2 = directive.args; _i6 < _directive$args2.length; _i6++) {\n      var arg = _directive$args2[_i6];\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!(0, _definition.isInputType)(arg.type)) {\n        context.reportError(\"The type of @\".concat(directive.name, \"(\").concat(arg.name, \":) must be Input Type \") + \"but got: \".concat((0, _inspect.default)(arg.type), \".\"), arg.astNode);\n      }\n\n      if ((0, _definition.isRequiredArgument)(arg) && arg.deprecationReason != null) {\n        var _arg$astNode;\n\n        context.reportError(\"Required argument @\".concat(directive.name, \"(\").concat(arg.name, \":) cannot be deprecated.\"), [getDeprecatedDirectiveNode(arg.astNode), // istanbul ignore next (TODO need to write coverage tests)\n        (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0 ? void 0 : _arg$astNode.type]);\n      }\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  var error = (0, _assertValidName.isValidNameError)(node.name);\n\n  if (error) {\n    context.addError((0, _locatedError.locatedError)(error, node.astNode));\n  }\n}\n\nfunction validateTypes(context) {\n  var validateInputObjectCircularRefs = createInputObjectCircularRefsValidator(context);\n  var typeMap = context.schema.getTypeMap();\n\n  for (var _i8 = 0, _objectValues2 = (0, _objectValues5.default)(typeMap); _i8 < _objectValues2.length; _i8++) {\n    var type = _objectValues2[_i8];\n\n    // Ensure all provided types are in fact GraphQL type.\n    if (!(0, _definition.isNamedType)(type)) {\n      context.reportError(\"Expected GraphQL named type but got: \".concat((0, _inspect.default)(type), \".\"), type.astNode);\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n\n    if (!(0, _introspection.isIntrospectionType)(type)) {\n      validateName(context, type);\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if ((0, _definition.isInterfaceType)(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if ((0, _definition.isUnionType)(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if ((0, _definition.isEnumType)(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if ((0, _definition.isInputObjectType)(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  var fields = (0, _objectValues5.default)(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(\"Type \".concat(type.name, \" must define one or more fields.\"), getAllNodes(type));\n  }\n\n  for (var _i10 = 0; _i10 < fields.length; _i10++) {\n    var field = fields[_i10];\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!(0, _definition.isOutputType)(field.type)) {\n      var _field$astNode;\n\n      context.reportError(\"The type of \".concat(type.name, \".\").concat(field.name, \" must be Output Type \") + \"but got: \".concat((0, _inspect.default)(field.type), \".\"), (_field$astNode = field.astNode) === null || _field$astNode === void 0 ? void 0 : _field$astNode.type);\n    } // Ensure the arguments are valid\n\n\n    for (var _i12 = 0, _field$args2 = field.args; _i12 < _field$args2.length; _i12++) {\n      var arg = _field$args2[_i12];\n      var argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!(0, _definition.isInputType)(arg.type)) {\n        var _arg$astNode2;\n\n        context.reportError(\"The type of \".concat(type.name, \".\").concat(field.name, \"(\").concat(argName, \":) must be Input \") + \"Type but got: \".concat((0, _inspect.default)(arg.type), \".\"), (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0 ? void 0 : _arg$astNode2.type);\n      }\n\n      if ((0, _definition.isRequiredArgument)(arg) && arg.deprecationReason != null) {\n        var _arg$astNode3;\n\n        context.reportError(\"Required argument \".concat(type.name, \".\").concat(field.name, \"(\").concat(argName, \":) cannot be deprecated.\"), [getDeprecatedDirectiveNode(arg.astNode), // istanbul ignore next (TODO need to write coverage tests)\n        (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0 ? void 0 : _arg$astNode3.type]);\n      }\n    }\n  }\n}\n\nfunction validateInterfaces(context, type) {\n  var ifaceTypeNames = Object.create(null);\n\n  for (var _i14 = 0, _type$getInterfaces2 = type.getInterfaces(); _i14 < _type$getInterfaces2.length; _i14++) {\n    var iface = _type$getInterfaces2[_i14];\n\n    if (!(0, _definition.isInterfaceType)(iface)) {\n      context.reportError(\"Type \".concat((0, _inspect.default)(type), \" must only implement Interface types, \") + \"it cannot implement \".concat((0, _inspect.default)(iface), \".\"), getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n\n    if (type === iface) {\n      context.reportError(\"Type \".concat(type.name, \" cannot implement itself because it would create a circular reference.\"), getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(\"Type \".concat(type.name, \" can only implement \").concat(iface.name, \" once.\"), getAllImplementsInterfaceNodes(type, iface));\n      continue;\n    }\n\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\n\nfunction validateTypeImplementsInterface(context, type, iface) {\n  var typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (var _i16 = 0, _objectValues4 = (0, _objectValues5.default)(iface.getFields()); _i16 < _objectValues4.length; _i16++) {\n    var ifaceField = _objectValues4[_i16];\n    var fieldName = ifaceField.name;\n    var typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(\"Interface field \".concat(iface.name, \".\").concat(fieldName, \" expected but \").concat(type.name, \" does not provide it.\"), [ifaceField.astNode].concat(getAllNodes(type)));\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n\n    if (!(0, _typeComparators.isTypeSubTypeOf)(context.schema, typeField.type, ifaceField.type)) {\n      var _ifaceField$astNode, _typeField$astNode;\n\n      context.reportError(\"Interface field \".concat(iface.name, \".\").concat(fieldName, \" expects type \") + \"\".concat((0, _inspect.default)(ifaceField.type), \" but \").concat(type.name, \".\").concat(fieldName, \" \") + \"is type \".concat((0, _inspect.default)(typeField.type), \".\"), [// istanbul ignore next (TODO need to write coverage tests)\n      (_ifaceField$astNode = ifaceField.astNode) === null || _ifaceField$astNode === void 0 ? void 0 : _ifaceField$astNode.type, // istanbul ignore next (TODO need to write coverage tests)\n      (_typeField$astNode = typeField.astNode) === null || _typeField$astNode === void 0 ? void 0 : _typeField$astNode.type]);\n    } // Assert each interface field arg is implemented.\n\n\n    var _loop = function _loop(_i18, _ifaceField$args2) {\n      var ifaceArg = _ifaceField$args2[_i18];\n      var argName = ifaceArg.name;\n      var typeArg = (0, _find.default)(typeField.args, function (arg) {\n        return arg.name === argName;\n      }); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(\"Interface field argument \".concat(iface.name, \".\").concat(fieldName, \"(\").concat(argName, \":) expected but \").concat(type.name, \".\").concat(fieldName, \" does not provide it.\"), [ifaceArg.astNode, typeField.astNode]);\n        return \"continue\";\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n\n      if (!(0, _typeComparators.isEqualType)(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n\n        context.reportError(\"Interface field argument \".concat(iface.name, \".\").concat(fieldName, \"(\").concat(argName, \":) \") + \"expects type \".concat((0, _inspect.default)(ifaceArg.type), \" but \") + \"\".concat(type.name, \".\").concat(fieldName, \"(\").concat(argName, \":) is type \") + \"\".concat((0, _inspect.default)(typeArg.type), \".\"), [// istanbul ignore next (TODO need to write coverage tests)\n        (_ifaceArg$astNode = ifaceArg.astNode) === null || _ifaceArg$astNode === void 0 ? void 0 : _ifaceArg$astNode.type, // istanbul ignore next (TODO need to write coverage tests)\n        (_typeArg$astNode = typeArg.astNode) === null || _typeArg$astNode === void 0 ? void 0 : _typeArg$astNode.type]);\n      } // TODO: validate default values?\n\n    };\n\n    for (var _i18 = 0, _ifaceField$args2 = ifaceField.args; _i18 < _ifaceField$args2.length; _i18++) {\n      var _ret = _loop(_i18, _ifaceField$args2);\n\n      if (_ret === \"continue\") continue;\n    } // Assert additional arguments must not be required.\n\n\n    var _loop2 = function _loop2(_i20, _typeField$args2) {\n      var typeArg = _typeField$args2[_i20];\n      var argName = typeArg.name;\n      var ifaceArg = (0, _find.default)(ifaceField.args, function (arg) {\n        return arg.name === argName;\n      });\n\n      if (!ifaceArg && (0, _definition.isRequiredArgument)(typeArg)) {\n        context.reportError(\"Object field \".concat(type.name, \".\").concat(fieldName, \" includes required argument \").concat(argName, \" that is missing from the Interface field \").concat(iface.name, \".\").concat(fieldName, \".\"), [typeArg.astNode, ifaceField.astNode]);\n      }\n    };\n\n    for (var _i20 = 0, _typeField$args2 = typeField.args; _i20 < _typeField$args2.length; _i20++) {\n      _loop2(_i20, _typeField$args2);\n    }\n  }\n}\n\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  var ifaceInterfaces = type.getInterfaces();\n\n  for (var _i22 = 0, _iface$getInterfaces2 = iface.getInterfaces(); _i22 < _iface$getInterfaces2.length; _i22++) {\n    var transitive = _iface$getInterfaces2[_i22];\n\n    if (ifaceInterfaces.indexOf(transitive) === -1) {\n      context.reportError(transitive === type ? \"Type \".concat(type.name, \" cannot implement \").concat(iface.name, \" because it would create a circular reference.\") : \"Type \".concat(type.name, \" must implement \").concat(transitive.name, \" because it is implemented by \").concat(iface.name, \".\"), [].concat(getAllImplementsInterfaceNodes(iface, transitive), getAllImplementsInterfaceNodes(type, iface)));\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  var memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\"Union type \".concat(union.name, \" must define one or more member types.\"), getAllNodes(union));\n  }\n\n  var includedTypeNames = Object.create(null);\n\n  for (var _i24 = 0; _i24 < memberTypes.length; _i24++) {\n    var memberType = memberTypes[_i24];\n\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\"Union type \".concat(union.name, \" can only include type \").concat(memberType.name, \" once.\"), getUnionMemberTypeNodes(union, memberType.name));\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!(0, _definition.isObjectType)(memberType)) {\n      context.reportError(\"Union type \".concat(union.name, \" can only include Object types, \") + \"it cannot include \".concat((0, _inspect.default)(memberType), \".\"), getUnionMemberTypeNodes(union, String(memberType)));\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  var enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\"Enum type \".concat(enumType.name, \" must define one or more values.\"), getAllNodes(enumType));\n  }\n\n  for (var _i26 = 0; _i26 < enumValues.length; _i26++) {\n    var enumValue = enumValues[_i26];\n    var valueName = enumValue.name; // Ensure valid name.\n\n    validateName(context, enumValue);\n\n    if (valueName === 'true' || valueName === 'false' || valueName === 'null') {\n      context.reportError(\"Enum type \".concat(enumType.name, \" cannot include value: \").concat(valueName, \".\"), enumValue.astNode);\n    }\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  var fields = (0, _objectValues5.default)(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\"Input Object type \".concat(inputObj.name, \" must define one or more fields.\"), getAllNodes(inputObj));\n  } // Ensure the arguments are valid\n\n\n  for (var _i28 = 0; _i28 < fields.length; _i28++) {\n    var field = fields[_i28];\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!(0, _definition.isInputType)(field.type)) {\n      var _field$astNode2;\n\n      context.reportError(\"The type of \".concat(inputObj.name, \".\").concat(field.name, \" must be Input Type \") + \"but got: \".concat((0, _inspect.default)(field.type), \".\"), (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0 ? void 0 : _field$astNode2.type);\n    }\n\n    if ((0, _definition.isRequiredInputField)(field) && field.deprecationReason != null) {\n      var _field$astNode3;\n\n      context.reportError(\"Required input field \".concat(inputObj.name, \".\").concat(field.name, \" cannot be deprecated.\"), [getDeprecatedDirectiveNode(field.astNode), // istanbul ignore next (TODO need to write coverage tests)\n      (_field$astNode3 = field.astNode) === null || _field$astNode3 === void 0 ? void 0 : _field$astNode3.type]);\n    }\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  var visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  var fieldPath = []; // Position in the type path\n\n  var fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    var fields = (0, _objectValues5.default)(inputObj.getFields());\n\n    for (var _i30 = 0; _i30 < fields.length; _i30++) {\n      var field = fields[_i30];\n\n      if ((0, _definition.isNonNullType)(field.type) && (0, _definition.isInputObjectType)(field.type.ofType)) {\n        var fieldType = field.type.ofType;\n        var cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          var cyclePath = fieldPath.slice(cycleIndex);\n          var pathStr = cyclePath.map(function (fieldObj) {\n            return fieldObj.name;\n          }).join('.');\n          context.reportError(\"Cannot reference Input Object \\\"\".concat(fieldType.name, \"\\\" within itself through a series of non-null fields: \\\"\").concat(pathStr, \"\\\".\"), cyclePath.map(function (fieldObj) {\n            return fieldObj.astNode;\n          }));\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllNodes(object) {\n  var astNode = object.astNode,\n      extensionASTNodes = object.extensionASTNodes;\n  return astNode ? extensionASTNodes ? [astNode].concat(extensionASTNodes) : [astNode] : extensionASTNodes !== null && extensionASTNodes !== void 0 ? extensionASTNodes : [];\n}\n\nfunction getAllSubNodes(object, getter) {\n  var subNodes = [];\n\n  for (var _i32 = 0, _getAllNodes2 = getAllNodes(object); _i32 < _getAllNodes2.length; _i32++) {\n    var _getter;\n\n    var node = _getAllNodes2[_i32];\n    // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n    subNodes = subNodes.concat((_getter = getter(node)) !== null && _getter !== void 0 ? _getter : []);\n  }\n\n  return subNodes;\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  return getAllSubNodes(type, function (typeNode) {\n    return typeNode.interfaces;\n  }).filter(function (ifaceNode) {\n    return ifaceNode.name.value === iface.name;\n  });\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  return getAllSubNodes(union, function (unionNode) {\n    return unionNode.types;\n  }).filter(function (typeNode) {\n    return typeNode.name.value === typeName;\n  });\n}\n\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n\n  // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n  return definitionNode === null || definitionNode === void 0 ? void 0 : (_definitionNode$direc = definitionNode.directives) === null || _definitionNode$direc === void 0 ? void 0 : _definitionNode$direc.find(function (node) {\n    return node.name.value === _directives.GraphQLDeprecatedDirective.name;\n  });\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.typeFromAST = typeFromAST;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction typeFromAST(schema, typeNode) {\n  /* eslint-enable no-redeclare */\n  var innerType;\n\n  if (typeNode.kind === _kinds.Kind.LIST_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && new _definition.GraphQLList(innerType);\n  }\n\n  if (typeNode.kind === _kinds.Kind.NON_NULL_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && new _definition.GraphQLNonNull(innerType);\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (typeNode.kind === _kinds.Kind.NAMED_TYPE) {\n    return schema.getType(typeNode.name.value);\n  } // istanbul ignore next (Not reachable. All possible type nodes have been considered)\n\n\n  false || (0, _invariant.default)(0, 'Unexpected type node: ' + (0, _inspect.default)(typeNode));\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.visitWithTypeInfo = visitWithTypeInfo;\nexports.TypeInfo = void 0;\n\nvar _find = _interopRequireDefault(require(\"../polyfills/find.js\"));\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _ast = require(\"../language/ast.js\");\n\nvar _visitor = require(\"../language/visitor.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nvar _introspection = require(\"../type/introspection.js\");\n\nvar _typeFromAST = require(\"./typeFromAST.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\nvar TypeInfo = /*#__PURE__*/function () {\n  function TypeInfo(schema, // NOTE: this experimental optional second parameter is only needed in order\n  // to support non-spec-compliant code bases. You should never need to use it.\n  // It may disappear in the future.\n  getFieldDefFn, // Initial type may be provided in rare cases to facilitate traversals\n  // beginning somewhere other than documents.\n  initialType) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef = getFieldDefFn !== null && getFieldDefFn !== void 0 ? getFieldDefFn : getFieldDef;\n\n    if (initialType) {\n      if ((0, _definition.isInputType)(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if ((0, _definition.isCompositeType)(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if ((0, _definition.isOutputType)(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  var _proto = TypeInfo.prototype;\n\n  _proto.getType = function getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  };\n\n  _proto.getParentType = function getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  };\n\n  _proto.getInputType = function getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  };\n\n  _proto.getParentInputType = function getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  };\n\n  _proto.getFieldDef = function getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  };\n\n  _proto.getDefaultValue = function getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  };\n\n  _proto.getDirective = function getDirective() {\n    return this._directive;\n  };\n\n  _proto.getArgument = function getArgument() {\n    return this._argument;\n  };\n\n  _proto.getEnumValue = function getEnumValue() {\n    return this._enumValue;\n  };\n\n  _proto.enter = function enter(node) {\n    var schema = this._schema; // Note: many of the types below are explicitly typed as \"mixed\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case _kinds.Kind.SELECTION_SET:\n        {\n          var namedType = (0, _definition.getNamedType)(this.getType());\n\n          this._parentTypeStack.push((0, _definition.isCompositeType)(namedType) ? namedType : undefined);\n\n          break;\n        }\n\n      case _kinds.Kind.FIELD:\n        {\n          var parentType = this.getParentType();\n          var fieldDef;\n          var fieldType;\n\n          if (parentType) {\n            fieldDef = this._getFieldDef(schema, parentType, node);\n\n            if (fieldDef) {\n              fieldType = fieldDef.type;\n            }\n          }\n\n          this._fieldDefStack.push(fieldDef);\n\n          this._typeStack.push((0, _definition.isOutputType)(fieldType) ? fieldType : undefined);\n\n          break;\n        }\n\n      case _kinds.Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case _kinds.Kind.OPERATION_DEFINITION:\n        {\n          var type;\n\n          switch (node.operation) {\n            case 'query':\n              type = schema.getQueryType();\n              break;\n\n            case 'mutation':\n              type = schema.getMutationType();\n              break;\n\n            case 'subscription':\n              type = schema.getSubscriptionType();\n              break;\n          }\n\n          this._typeStack.push((0, _definition.isObjectType)(type) ? type : undefined);\n\n          break;\n        }\n\n      case _kinds.Kind.INLINE_FRAGMENT:\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        {\n          var typeConditionAST = node.typeCondition;\n          var outputType = typeConditionAST ? (0, _typeFromAST.typeFromAST)(schema, typeConditionAST) : (0, _definition.getNamedType)(this.getType());\n\n          this._typeStack.push((0, _definition.isOutputType)(outputType) ? outputType : undefined);\n\n          break;\n        }\n\n      case _kinds.Kind.VARIABLE_DEFINITION:\n        {\n          var inputType = (0, _typeFromAST.typeFromAST)(schema, node.type);\n\n          this._inputTypeStack.push((0, _definition.isInputType)(inputType) ? inputType : undefined);\n\n          break;\n        }\n\n      case _kinds.Kind.ARGUMENT:\n        {\n          var _this$getDirective;\n\n          var argDef;\n          var argType;\n          var fieldOrDirective = (_this$getDirective = this.getDirective()) !== null && _this$getDirective !== void 0 ? _this$getDirective : this.getFieldDef();\n\n          if (fieldOrDirective) {\n            argDef = (0, _find.default)(fieldOrDirective.args, function (arg) {\n              return arg.name === node.name.value;\n            });\n\n            if (argDef) {\n              argType = argDef.type;\n            }\n          }\n\n          this._argument = argDef;\n\n          this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n          this._inputTypeStack.push((0, _definition.isInputType)(argType) ? argType : undefined);\n\n          break;\n        }\n\n      case _kinds.Kind.LIST:\n        {\n          var listType = (0, _definition.getNullableType)(this.getInputType());\n          var itemType = (0, _definition.isListType)(listType) ? listType.ofType : listType; // List positions never have a default value.\n\n          this._defaultValueStack.push(undefined);\n\n          this._inputTypeStack.push((0, _definition.isInputType)(itemType) ? itemType : undefined);\n\n          break;\n        }\n\n      case _kinds.Kind.OBJECT_FIELD:\n        {\n          var objectType = (0, _definition.getNamedType)(this.getInputType());\n          var inputFieldType;\n          var inputField;\n\n          if ((0, _definition.isInputObjectType)(objectType)) {\n            inputField = objectType.getFields()[node.name.value];\n\n            if (inputField) {\n              inputFieldType = inputField.type;\n            }\n          }\n\n          this._defaultValueStack.push(inputField ? inputField.defaultValue : undefined);\n\n          this._inputTypeStack.push((0, _definition.isInputType)(inputFieldType) ? inputFieldType : undefined);\n\n          break;\n        }\n\n      case _kinds.Kind.ENUM:\n        {\n          var enumType = (0, _definition.getNamedType)(this.getInputType());\n          var enumValue;\n\n          if ((0, _definition.isEnumType)(enumType)) {\n            enumValue = enumType.getValue(node.value);\n          }\n\n          this._enumValue = enumValue;\n          break;\n        }\n    }\n  };\n\n  _proto.leave = function leave(node) {\n    switch (node.kind) {\n      case _kinds.Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case _kinds.Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case _kinds.Kind.OPERATION_DEFINITION:\n      case _kinds.Kind.INLINE_FRAGMENT:\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case _kinds.Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.LIST:\n      case _kinds.Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.ENUM:\n        this._enumValue = null;\n        break;\n    }\n  };\n\n  return TypeInfo;\n}();\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\n\n\nexports.TypeInfo = TypeInfo;\n\nfunction getFieldDef(schema, parentType, fieldNode) {\n  var name = fieldNode.name.value;\n\n  if (name === _introspection.SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _introspection.SchemaMetaFieldDef;\n  }\n\n  if (name === _introspection.TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _introspection.TypeMetaFieldDef;\n  }\n\n  if (name === _introspection.TypeNameMetaFieldDef.name && (0, _definition.isCompositeType)(parentType)) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n\n  if ((0, _definition.isObjectType)(parentType) || (0, _definition.isInterfaceType)(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\n\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = (0, _visitor.getVisitFn)(visitor, node.kind,\n      /* isLeaving */\n      false);\n\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if ((0, _ast.isNode)(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = (0, _visitor.getVisitFn)(visitor, node.kind,\n      /* isLeaving */\n      true);\n      var result;\n\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDefinitionNode = isDefinitionNode;\nexports.isExecutableDefinitionNode = isExecutableDefinitionNode;\nexports.isSelectionNode = isSelectionNode;\nexports.isValueNode = isValueNode;\nexports.isTypeNode = isTypeNode;\nexports.isTypeSystemDefinitionNode = isTypeSystemDefinitionNode;\nexports.isTypeDefinitionNode = isTypeDefinitionNode;\nexports.isTypeSystemExtensionNode = isTypeSystemExtensionNode;\nexports.isTypeExtensionNode = isTypeExtensionNode;\n\nvar _kinds = require(\"./kinds.js\");\n\nfunction isDefinitionNode(node) {\n  return isExecutableDefinitionNode(node) || isTypeSystemDefinitionNode(node) || isTypeSystemExtensionNode(node);\n}\n\nfunction isExecutableDefinitionNode(node) {\n  return node.kind === _kinds.Kind.OPERATION_DEFINITION || node.kind === _kinds.Kind.FRAGMENT_DEFINITION;\n}\n\nfunction isSelectionNode(node) {\n  return node.kind === _kinds.Kind.FIELD || node.kind === _kinds.Kind.FRAGMENT_SPREAD || node.kind === _kinds.Kind.INLINE_FRAGMENT;\n}\n\nfunction isValueNode(node) {\n  return node.kind === _kinds.Kind.VARIABLE || node.kind === _kinds.Kind.INT || node.kind === _kinds.Kind.FLOAT || node.kind === _kinds.Kind.STRING || node.kind === _kinds.Kind.BOOLEAN || node.kind === _kinds.Kind.NULL || node.kind === _kinds.Kind.ENUM || node.kind === _kinds.Kind.LIST || node.kind === _kinds.Kind.OBJECT;\n}\n\nfunction isTypeNode(node) {\n  return node.kind === _kinds.Kind.NAMED_TYPE || node.kind === _kinds.Kind.LIST_TYPE || node.kind === _kinds.Kind.NON_NULL_TYPE;\n}\n\nfunction isTypeSystemDefinitionNode(node) {\n  return node.kind === _kinds.Kind.SCHEMA_DEFINITION || isTypeDefinitionNode(node) || node.kind === _kinds.Kind.DIRECTIVE_DEFINITION;\n}\n\nfunction isTypeDefinitionNode(node) {\n  return node.kind === _kinds.Kind.SCALAR_TYPE_DEFINITION || node.kind === _kinds.Kind.OBJECT_TYPE_DEFINITION || node.kind === _kinds.Kind.INTERFACE_TYPE_DEFINITION || node.kind === _kinds.Kind.UNION_TYPE_DEFINITION || node.kind === _kinds.Kind.ENUM_TYPE_DEFINITION || node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION;\n}\n\nfunction isTypeSystemExtensionNode(node) {\n  return node.kind === _kinds.Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\n\nfunction isTypeExtensionNode(node) {\n  return node.kind === _kinds.Kind.SCALAR_TYPE_EXTENSION || node.kind === _kinds.Kind.OBJECT_TYPE_EXTENSION || node.kind === _kinds.Kind.INTERFACE_TYPE_EXTENSION || node.kind === _kinds.Kind.UNION_TYPE_EXTENSION || node.kind === _kinds.Kind.ENUM_TYPE_EXTENSION || node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExecutableDefinitionsRule = ExecutableDefinitionsRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _kinds = require(\"../../language/kinds.js\");\n\nvar _predicates = require(\"../../language/predicates.js\");\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\nfunction ExecutableDefinitionsRule(context) {\n  return {\n    Document: function Document(node) {\n      for (var _i2 = 0, _node$definitions2 = node.definitions; _i2 < _node$definitions2.length; _i2++) {\n        var definition = _node$definitions2[_i2];\n\n        if (!(0, _predicates.isExecutableDefinitionNode)(definition)) {\n          var defName = definition.kind === _kinds.Kind.SCHEMA_DEFINITION || definition.kind === _kinds.Kind.SCHEMA_EXTENSION ? 'schema' : '\"' + definition.name.value + '\"';\n          context.reportError(new _GraphQLError.GraphQLError(\"The \".concat(defName, \" definition is not executable.\"), definition));\n        }\n      }\n\n      return false;\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueOperationNamesRule = UniqueOperationNamesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\nfunction UniqueOperationNamesRule(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new _GraphQLError.GraphQLError(\"There can be only one operation named \\\"\".concat(operationName.value, \"\\\".\"), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoneAnonymousOperationRule = LoneAnonymousOperationRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _kinds = require(\"../../language/kinds.js\");\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\nfunction LoneAnonymousOperationRule(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === _kinds.Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new _GraphQLError.GraphQLError('This anonymous operation must be the only defined operation.', node));\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SingleFieldSubscriptionsRule = SingleFieldSubscriptionsRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\nfunction SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new _GraphQLError.GraphQLError(node.name ? \"Subscription \\\"\".concat(node.name.value, \"\\\" must select only one top level field.\") : 'Anonymous Subscription must select only one top level field.', node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KnownTypeNamesRule = KnownTypeNamesRule;\n\nvar _didYouMean = _interopRequireDefault(require(\"../../jsutils/didYouMean.js\"));\n\nvar _suggestionList = _interopRequireDefault(require(\"../../jsutils/suggestionList.js\"));\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _predicates = require(\"../../language/predicates.js\");\n\nvar _scalars = require(\"../../type/scalars.js\");\n\nvar _introspection = require(\"../../type/introspection.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nfunction KnownTypeNamesRule(context) {\n  var schema = context.getSchema();\n  var existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  var definedTypes = Object.create(null);\n\n  for (var _i2 = 0, _context$getDocument$2 = context.getDocument().definitions; _i2 < _context$getDocument$2.length; _i2++) {\n    var def = _context$getDocument$2[_i2];\n\n    if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  var typeNames = Object.keys(existingTypesMap).concat(Object.keys(definedTypes));\n  return {\n    NamedType: function NamedType(node, _1, parent, _2, ancestors) {\n      var typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        var definitionNode = (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0 ? _ancestors$ : parent;\n        var isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && isStandardTypeName(typeName)) {\n          return;\n        }\n\n        var suggestedTypes = (0, _suggestionList.default)(typeName, isSDL ? standardTypeNames.concat(typeNames) : typeNames);\n        context.reportError(new _GraphQLError.GraphQLError(\"Unknown type \\\"\".concat(typeName, \"\\\".\") + (0, _didYouMean.default)(suggestedTypes), node));\n      }\n    }\n  };\n}\n\nvar standardTypeNames = [].concat(_scalars.specifiedScalarTypes, _introspection.introspectionTypes).map(function (type) {\n  return type.name;\n});\n\nfunction isStandardTypeName(typeName) {\n  return standardTypeNames.indexOf(typeName) !== -1;\n}\n\nfunction isSDLNode(value) {\n  return !Array.isArray(value) && ((0, _predicates.isTypeSystemDefinitionNode)(value) || (0, _predicates.isTypeSystemExtensionNode)(value));\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FragmentsOnCompositeTypesRule = FragmentsOnCompositeTypesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _printer = require(\"../../language/printer.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\nvar _typeFromAST = require(\"../../utilities/typeFromAST.js\");\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n */\nfunction FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        var type = (0, _typeFromAST.typeFromAST)(context.getSchema(), typeCondition);\n\n        if (type && !(0, _definition.isCompositeType)(type)) {\n          var typeStr = (0, _printer.print)(typeCondition);\n          context.reportError(new _GraphQLError.GraphQLError(\"Fragment cannot condition on non composite type \\\"\".concat(typeStr, \"\\\".\"), typeCondition));\n        }\n      }\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var type = (0, _typeFromAST.typeFromAST)(context.getSchema(), node.typeCondition);\n\n      if (type && !(0, _definition.isCompositeType)(type)) {\n        var typeStr = (0, _printer.print)(node.typeCondition);\n        context.reportError(new _GraphQLError.GraphQLError(\"Fragment \\\"\".concat(node.name.value, \"\\\" cannot condition on non composite type \\\"\").concat(typeStr, \"\\\".\"), node.typeCondition));\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariablesAreInputTypesRule = VariablesAreInputTypesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _printer = require(\"../../language/printer.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\nvar _typeFromAST = require(\"../../utilities/typeFromAST.js\");\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n */\nfunction VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var type = (0, _typeFromAST.typeFromAST)(context.getSchema(), node.type);\n\n      if (type && !(0, _definition.isInputType)(type)) {\n        var variableName = node.variable.name.value;\n        var typeName = (0, _printer.print)(node.type);\n        context.reportError(new _GraphQLError.GraphQLError(\"Variable \\\"$\".concat(variableName, \"\\\" cannot be non-input type \\\"\").concat(typeName, \"\\\".\"), node.type));\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScalarLeafsRule = ScalarLeafsRule;\n\nvar _inspect = _interopRequireDefault(require(\"../../jsutils/inspect.js\"));\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nfunction ScalarLeafsRule(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getType();\n      var selectionSet = node.selectionSet;\n\n      if (type) {\n        if ((0, _definition.isLeafType)((0, _definition.getNamedType)(type))) {\n          if (selectionSet) {\n            var fieldName = node.name.value;\n            var typeStr = (0, _inspect.default)(type);\n            context.reportError(new _GraphQLError.GraphQLError(\"Field \\\"\".concat(fieldName, \"\\\" must not have a selection since type \\\"\").concat(typeStr, \"\\\" has no subfields.\"), selectionSet));\n          }\n        } else if (!selectionSet) {\n          var _fieldName = node.name.value;\n\n          var _typeStr = (0, _inspect.default)(type);\n\n          context.reportError(new _GraphQLError.GraphQLError(\"Field \\\"\".concat(_fieldName, \"\\\" of type \\\"\").concat(_typeStr, \"\\\" must have a selection of subfields. Did you mean \\\"\").concat(_fieldName, \" { ... }\\\"?\"), node));\n        }\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FieldsOnCorrectTypeRule = FieldsOnCorrectTypeRule;\n\nvar _arrayFrom = _interopRequireDefault(require(\"../../polyfills/arrayFrom.js\"));\n\nvar _didYouMean = _interopRequireDefault(require(\"../../jsutils/didYouMean.js\"));\n\nvar _suggestionList = _interopRequireDefault(require(\"../../jsutils/suggestionList.js\"));\n\nvar _naturalCompare = _interopRequireDefault(require(\"../../jsutils/naturalCompare.js\"));\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n */\nfunction FieldsOnCorrectTypeRule(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getParentType();\n\n      if (type) {\n        var fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          var schema = context.getSchema();\n          var fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          var suggestion = (0, _didYouMean.default)('to use an inline fragment on', getSuggestedTypeNames(schema, type, fieldName)); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = (0, _didYouMean.default)(getSuggestedFieldNames(type, fieldName));\n          } // Report an error, including helpful suggestions.\n\n\n          context.reportError(new _GraphQLError.GraphQLError(\"Cannot query field \\\"\".concat(fieldName, \"\\\" on type \\\"\").concat(type.name, \"\\\".\") + suggestion, node));\n        }\n      }\n    }\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!(0, _definition.isAbstractType)(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n\n  var suggestedTypes = new Set();\n  var usageCount = Object.create(null);\n\n  for (var _i2 = 0, _schema$getPossibleTy2 = schema.getPossibleTypes(type); _i2 < _schema$getPossibleTy2.length; _i2++) {\n    var possibleType = _schema$getPossibleTy2[_i2];\n\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n\n    for (var _i4 = 0, _possibleType$getInte2 = possibleType.getInterfaces(); _i4 < _possibleType$getInte2.length; _i4++) {\n      var _usageCount$possibleI;\n\n      var possibleInterface = _possibleType$getInte2[_i4];\n\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] = ((_usageCount$possibleI = usageCount[possibleInterface.name]) !== null && _usageCount$possibleI !== void 0 ? _usageCount$possibleI : 0) + 1;\n    }\n  }\n\n  return (0, _arrayFrom.default)(suggestedTypes).sort(function (typeA, typeB) {\n    // Suggest both interface and object types based on how common they are.\n    var usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n\n    if (usageCountDiff !== 0) {\n      return usageCountDiff;\n    } // Suggest super types first followed by subtypes\n\n\n    if ((0, _definition.isInterfaceType)(typeA) && schema.isSubType(typeA, typeB)) {\n      return -1;\n    }\n\n    if ((0, _definition.isInterfaceType)(typeB) && schema.isSubType(typeB, typeA)) {\n      return 1;\n    }\n\n    return (0, _naturalCompare.default)(typeA.name, typeB.name);\n  }).map(function (x) {\n    return x.name;\n  });\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if ((0, _definition.isObjectType)(type) || (0, _definition.isInterfaceType)(type)) {\n    var possibleFieldNames = Object.keys(type.getFields());\n    return (0, _suggestionList.default)(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n\n  return [];\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueFragmentNamesRule = UniqueFragmentNamesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\nfunction UniqueFragmentNamesRule(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new _GraphQLError.GraphQLError(\"There can be only one fragment named \\\"\".concat(fragmentName, \"\\\".\"), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KnownFragmentNamesRule = KnownFragmentNamesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\nfunction KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(new _GraphQLError.GraphQLError(\"Unknown fragment \\\"\".concat(fragmentName, \"\\\".\"), node.name));\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoUnusedFragmentsRule = NoUnusedFragmentsRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\nfunction NoUnusedFragmentsRule(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n\n        for (var _i2 = 0; _i2 < operationDefs.length; _i2++) {\n          var operation = operationDefs[_i2];\n\n          for (var _i4 = 0, _context$getRecursive2 = context.getRecursivelyReferencedFragments(operation); _i4 < _context$getRecursive2.length; _i4++) {\n            var fragment = _context$getRecursive2[_i4];\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (var _i6 = 0; _i6 < fragmentDefs.length; _i6++) {\n          var fragmentDef = fragmentDefs[_i6];\n          var fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new _GraphQLError.GraphQLError(\"Fragment \\\"\".concat(fragName, \"\\\" is never used.\"), fragmentDef));\n          }\n        }\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PossibleFragmentSpreadsRule = PossibleFragmentSpreadsRule;\n\nvar _inspect = _interopRequireDefault(require(\"../../jsutils/inspect.js\"));\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\nvar _typeFromAST = require(\"../../utilities/typeFromAST.js\");\n\nvar _typeComparators = require(\"../../utilities/typeComparators.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nfunction PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var fragType = context.getType();\n      var parentType = context.getParentType();\n\n      if ((0, _definition.isCompositeType)(fragType) && (0, _definition.isCompositeType)(parentType) && !(0, _typeComparators.doTypesOverlap)(context.getSchema(), fragType, parentType)) {\n        var parentTypeStr = (0, _inspect.default)(parentType);\n        var fragTypeStr = (0, _inspect.default)(fragType);\n        context.reportError(new _GraphQLError.GraphQLError(\"Fragment cannot be spread here as objects of type \\\"\".concat(parentTypeStr, \"\\\" can never be of type \\\"\").concat(fragTypeStr, \"\\\".\"), node));\n      }\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var fragName = node.name.value;\n      var fragType = getFragmentType(context, fragName);\n      var parentType = context.getParentType();\n\n      if (fragType && parentType && !(0, _typeComparators.doTypesOverlap)(context.getSchema(), fragType, parentType)) {\n        var parentTypeStr = (0, _inspect.default)(parentType);\n        var fragTypeStr = (0, _inspect.default)(fragType);\n        context.reportError(new _GraphQLError.GraphQLError(\"Fragment \\\"\".concat(fragName, \"\\\" cannot be spread here as objects of type \\\"\").concat(parentTypeStr, \"\\\" can never be of type \\\"\").concat(fragTypeStr, \"\\\".\"), node));\n      }\n    }\n  };\n}\n\nfunction getFragmentType(context, name) {\n  var frag = context.getFragment(name);\n\n  if (frag) {\n    var type = (0, _typeFromAST.typeFromAST)(context.getSchema(), frag.typeCondition);\n\n    if ((0, _definition.isCompositeType)(type)) {\n      return type;\n    }\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoFragmentCyclesRule = NoFragmentCyclesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nfunction NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  var visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  var spreadPath = []; // Position in the spread path\n\n  var spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    }\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    var fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    var spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (var _i2 = 0; _i2 < spreadNodes.length; _i2++) {\n      var spreadNode = spreadNodes[_i2];\n      var spreadName = spreadNode.name.value;\n      var cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        var spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        var cyclePath = spreadPath.slice(cycleIndex);\n        var viaPath = cyclePath.slice(0, -1).map(function (s) {\n          return '\"' + s.name.value + '\"';\n        }).join(', ');\n        context.reportError(new _GraphQLError.GraphQLError(\"Cannot spread fragment \\\"\".concat(spreadName, \"\\\" within itself\") + (viaPath !== '' ? \" via \".concat(viaPath, \".\") : '.'), cyclePath));\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueVariableNamesRule = UniqueVariableNamesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nfunction UniqueVariableNamesRule(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n\n      if (knownVariableNames[variableName]) {\n        context.reportError(new _GraphQLError.GraphQLError(\"There can be only one variable named \\\"$\".concat(variableName, \"\\\".\"), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoUndefinedVariablesRule = NoUndefinedVariablesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */\nfunction NoUndefinedVariablesRule(context) {\n  var variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          var varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(new _GraphQLError.GraphQLError(operation.name ? \"Variable \\\"$\".concat(varName, \"\\\" is not defined by operation \\\"\").concat(operation.name.value, \"\\\".\") : \"Variable \\\"$\".concat(varName, \"\\\" is not defined.\"), [node, operation]));\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoUnusedVariablesRule = NoUnusedVariablesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n */\nfunction NoUnusedVariablesRule(context) {\n  var variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableDefs = [];\n      },\n      leave: function leave(operation) {\n        var variableNameUsed = Object.create(null);\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (var _i4 = 0, _variableDefs2 = variableDefs; _i4 < _variableDefs2.length; _i4++) {\n          var variableDef = _variableDefs2[_i4];\n          var variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(new _GraphQLError.GraphQLError(operation.name ? \"Variable \\\"$\".concat(variableName, \"\\\" is never used in operation \\\"\").concat(operation.name.value, \"\\\".\") : \"Variable \\\"$\".concat(variableName, \"\\\" is never used.\"), variableDef));\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(def) {\n      variableDefs.push(def);\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KnownDirectivesRule = KnownDirectivesRule;\n\nvar _inspect = _interopRequireDefault(require(\"../../jsutils/inspect.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../../jsutils/invariant.js\"));\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _kinds = require(\"../../language/kinds.js\");\n\nvar _directiveLocation = require(\"../../language/directiveLocation.js\");\n\nvar _directives = require(\"../../type/directives.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\nfunction KnownDirectivesRule(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : _directives.specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(node, _key, _parent, _path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(new _GraphQLError.GraphQLError(\"Unknown directive \\\"@\".concat(name, \"\\\".\"), node));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new _GraphQLError.GraphQLError(\"Directive \\\"@\".concat(name, \"\\\" may not be used on \").concat(candidateLocation, \".\"), node));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  !Array.isArray(appliedTo) || (0, _invariant.default)(0);\n\n  switch (appliedTo.kind) {\n    case _kinds.Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case _kinds.Kind.FIELD:\n      return _directiveLocation.DirectiveLocation.FIELD;\n\n    case _kinds.Kind.FRAGMENT_SPREAD:\n      return _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD;\n\n    case _kinds.Kind.INLINE_FRAGMENT:\n      return _directiveLocation.DirectiveLocation.INLINE_FRAGMENT;\n\n    case _kinds.Kind.FRAGMENT_DEFINITION:\n      return _directiveLocation.DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case _kinds.Kind.VARIABLE_DEFINITION:\n      return _directiveLocation.DirectiveLocation.VARIABLE_DEFINITION;\n\n    case _kinds.Kind.SCHEMA_DEFINITION:\n    case _kinds.Kind.SCHEMA_EXTENSION:\n      return _directiveLocation.DirectiveLocation.SCHEMA;\n\n    case _kinds.Kind.SCALAR_TYPE_DEFINITION:\n    case _kinds.Kind.SCALAR_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.SCALAR;\n\n    case _kinds.Kind.OBJECT_TYPE_DEFINITION:\n    case _kinds.Kind.OBJECT_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.OBJECT;\n\n    case _kinds.Kind.FIELD_DEFINITION:\n      return _directiveLocation.DirectiveLocation.FIELD_DEFINITION;\n\n    case _kinds.Kind.INTERFACE_TYPE_DEFINITION:\n    case _kinds.Kind.INTERFACE_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.INTERFACE;\n\n    case _kinds.Kind.UNION_TYPE_DEFINITION:\n    case _kinds.Kind.UNION_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.UNION;\n\n    case _kinds.Kind.ENUM_TYPE_DEFINITION:\n    case _kinds.Kind.ENUM_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.ENUM;\n\n    case _kinds.Kind.ENUM_VALUE_DEFINITION:\n      return _directiveLocation.DirectiveLocation.ENUM_VALUE;\n\n    case _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.INPUT_OBJECT;\n\n    case _kinds.Kind.INPUT_VALUE_DEFINITION:\n      {\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION ? _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION : _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION;\n      }\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case 'query':\n      return _directiveLocation.DirectiveLocation.QUERY;\n\n    case 'mutation':\n      return _directiveLocation.DirectiveLocation.MUTATION;\n\n    case 'subscription':\n      return _directiveLocation.DirectiveLocation.SUBSCRIPTION;\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || (0, _invariant.default)(0, 'Unexpected operation: ' + (0, _inspect.default)(operation));\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueDirectivesPerLocationRule = UniqueDirectivesPerLocationRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _kinds = require(\"../../language/kinds.js\");\n\nvar _predicates = require(\"../../language/predicates.js\");\n\nvar _directives = require(\"../../type/directives.js\");\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n */\nfunction UniqueDirectivesPerLocationRule(context) {\n  var uniqueDirectiveMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : _directives.specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  var schemaDirectives = Object.create(null);\n  var typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter: function enter(node) {\n      if (node.directives == null) {\n        return;\n      }\n\n      var seenDirectives;\n\n      if (node.kind === _kinds.Kind.SCHEMA_DEFINITION || node.kind === _kinds.Kind.SCHEMA_EXTENSION) {\n        seenDirectives = schemaDirectives;\n      } else if ((0, _predicates.isTypeDefinitionNode)(node) || (0, _predicates.isTypeExtensionNode)(node)) {\n        var typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (var _i6 = 0, _node$directives2 = node.directives; _i6 < _node$directives2.length; _i6++) {\n        var _directive = _node$directives2[_i6];\n        var directiveName = _directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(new _GraphQLError.GraphQLError(\"The directive \\\"@\".concat(directiveName, \"\\\" can only be used once at this location.\"), [seenDirectives[directiveName], _directive]));\n          } else {\n            seenDirectives[directiveName] = _directive;\n          }\n        }\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KnownArgumentNamesRule = KnownArgumentNamesRule;\nexports.KnownArgumentNamesOnDirectivesRule = KnownArgumentNamesOnDirectivesRule;\n\nvar _didYouMean = _interopRequireDefault(require(\"../../jsutils/didYouMean.js\"));\n\nvar _suggestionList = _interopRequireDefault(require(\"../../jsutils/suggestionList.js\"));\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _kinds = require(\"../../language/kinds.js\");\n\nvar _directives = require(\"../../type/directives.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\nfunction KnownArgumentNamesRule(context) {\n  return _objectSpread(_objectSpread({}, KnownArgumentNamesOnDirectivesRule(context)), {}, {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        var suggestions = (0, _suggestionList.default)(argName, knownArgsNames);\n        context.reportError(new _GraphQLError.GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(parentType.name, \".\").concat(fieldDef.name, \"\\\".\") + (0, _didYouMean.default)(suggestions), argNode));\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\n\nfunction KnownArgumentNamesOnDirectivesRule(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : _directives.specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    directiveArgs[directive.name] = directive.args.map(function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var argsNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      directiveArgs[def.name.value] = argsNodes.map(function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (var _i6 = 0, _directiveNode$argume2 = directiveNode.arguments; _i6 < _directiveNode$argume2.length; _i6++) {\n          var argNode = _directiveNode$argume2[_i6];\n          var argName = argNode.name.value;\n\n          if (knownArgs.indexOf(argName) === -1) {\n            var suggestions = (0, _suggestionList.default)(argName, knownArgs);\n            context.reportError(new _GraphQLError.GraphQLError(\"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + (0, _didYouMean.default)(suggestions), argNode));\n          }\n        }\n      }\n\n      return false;\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueArgumentNamesRule = UniqueArgumentNamesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n */\nfunction UniqueArgumentNamesRule(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n\n      if (knownArgNames[argName]) {\n        context.reportError(new _GraphQLError.GraphQLError(\"There can be only one argument named \\\"\".concat(argName, \"\\\".\"), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValuesOfCorrectTypeRule = ValuesOfCorrectTypeRule;\n\nvar _objectValues3 = _interopRequireDefault(require(\"../../polyfills/objectValues.js\"));\n\nvar _keyMap = _interopRequireDefault(require(\"../../jsutils/keyMap.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../../jsutils/inspect.js\"));\n\nvar _didYouMean = _interopRequireDefault(require(\"../../jsutils/didYouMean.js\"));\n\nvar _suggestionList = _interopRequireDefault(require(\"../../jsutils/suggestionList.js\"));\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _printer = require(\"../../language/printer.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n */\nfunction ValuesOfCorrectTypeRule(context) {\n  return {\n    ListValue: function ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      var type = (0, _definition.getNullableType)(context.getParentInputType());\n\n      if (!(0, _definition.isListType)(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n    ObjectValue: function ObjectValue(node) {\n      var type = (0, _definition.getNamedType)(context.getInputType());\n\n      if (!(0, _definition.isInputObjectType)(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n\n      var fieldNodeMap = (0, _keyMap.default)(node.fields, function (field) {\n        return field.name.value;\n      });\n\n      for (var _i2 = 0, _objectValues2 = (0, _objectValues3.default)(type.getFields()); _i2 < _objectValues2.length; _i2++) {\n        var fieldDef = _objectValues2[_i2];\n        var fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && (0, _definition.isRequiredInputField)(fieldDef)) {\n          var typeStr = (0, _inspect.default)(fieldDef.type);\n          context.reportError(new _GraphQLError.GraphQLError(\"Field \\\"\".concat(type.name, \".\").concat(fieldDef.name, \"\\\" of required type \\\"\").concat(typeStr, \"\\\" was not provided.\"), node));\n        }\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var parentType = (0, _definition.getNamedType)(context.getParentInputType());\n      var fieldType = context.getInputType();\n\n      if (!fieldType && (0, _definition.isInputObjectType)(parentType)) {\n        var suggestions = (0, _suggestionList.default)(node.name.value, Object.keys(parentType.getFields()));\n        context.reportError(new _GraphQLError.GraphQLError(\"Field \\\"\".concat(node.name.value, \"\\\" is not defined by type \\\"\").concat(parentType.name, \"\\\".\") + (0, _didYouMean.default)(suggestions), node));\n      }\n    },\n    NullValue: function NullValue(node) {\n      var type = context.getInputType();\n\n      if ((0, _definition.isNonNullType)(type)) {\n        context.reportError(new _GraphQLError.GraphQLError(\"Expected value of type \\\"\".concat((0, _inspect.default)(type), \"\\\", found \").concat((0, _printer.print)(node), \".\"), node));\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      return isValidValueNode(context, node);\n    },\n    IntValue: function IntValue(node) {\n      return isValidValueNode(context, node);\n    },\n    FloatValue: function FloatValue(node) {\n      return isValidValueNode(context, node);\n    },\n    StringValue: function StringValue(node) {\n      return isValidValueNode(context, node);\n    },\n    BooleanValue: function BooleanValue(node) {\n      return isValidValueNode(context, node);\n    }\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  var locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  var type = (0, _definition.getNamedType)(locationType);\n\n  if (!(0, _definition.isLeafType)(type)) {\n    var typeStr = (0, _inspect.default)(locationType);\n    context.reportError(new _GraphQLError.GraphQLError(\"Expected value of type \\\"\".concat(typeStr, \"\\\", found \").concat((0, _printer.print)(node), \".\"), node));\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n\n  try {\n    var parseResult = type.parseLiteral(node, undefined\n    /* variables */\n    );\n\n    if (parseResult === undefined) {\n      var _typeStr = (0, _inspect.default)(locationType);\n\n      context.reportError(new _GraphQLError.GraphQLError(\"Expected value of type \\\"\".concat(_typeStr, \"\\\", found \").concat((0, _printer.print)(node), \".\"), node));\n    }\n  } catch (error) {\n    var _typeStr2 = (0, _inspect.default)(locationType);\n\n    if (error instanceof _GraphQLError.GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(new _GraphQLError.GraphQLError(\"Expected value of type \\\"\".concat(_typeStr2, \"\\\", found \").concat((0, _printer.print)(node), \"; \") + error.message, node, undefined, undefined, undefined, error));\n    }\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProvidedRequiredArgumentsRule = ProvidedRequiredArgumentsRule;\nexports.ProvidedRequiredArgumentsOnDirectivesRule = ProvidedRequiredArgumentsOnDirectivesRule;\n\nvar _inspect = _interopRequireDefault(require(\"../../jsutils/inspect.js\"));\n\nvar _keyMap = _interopRequireDefault(require(\"../../jsutils/keyMap.js\"));\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _kinds = require(\"../../language/kinds.js\");\n\nvar _printer = require(\"../../language/printer.js\");\n\nvar _directives = require(\"../../type/directives.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nfunction ProvidedRequiredArgumentsRule(context) {\n  return _objectSpread(_objectSpread({}, ProvidedRequiredArgumentsOnDirectivesRule(context)), {}, {\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        var fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n        var argNodes = (_fieldNode$arguments = fieldNode.arguments) !== null && _fieldNode$arguments !== void 0 ? _fieldNode$arguments : [];\n        var argNodeMap = (0, _keyMap.default)(argNodes, function (arg) {\n          return arg.name.value;\n        });\n\n        for (var _i2 = 0, _fieldDef$args2 = fieldDef.args; _i2 < _fieldDef$args2.length; _i2++) {\n          var argDef = _fieldDef$args2[_i2];\n          var argNode = argNodeMap[argDef.name];\n\n          if (!argNode && (0, _definition.isRequiredArgument)(argDef)) {\n            var argTypeStr = (0, _inspect.default)(argDef.type);\n            context.reportError(new _GraphQLError.GraphQLError(\"Field \\\"\".concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), fieldNode));\n          }\n        }\n      }\n    }\n  });\n}\n/**\n * @internal\n */\n\n\nfunction ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var requiredArgsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : _directives.specifiedDirectives;\n\n  for (var _i4 = 0; _i4 < definedDirectives.length; _i4++) {\n    var directive = definedDirectives[_i4];\n    requiredArgsMap[directive.name] = (0, _keyMap.default)(directive.args.filter(_definition.isRequiredArgument), function (arg) {\n      return arg.name;\n    });\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i6 = 0; _i6 < astDefinitions.length; _i6++) {\n    var def = astDefinitions[_i6];\n\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var argNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      requiredArgsMap[def.name.value] = (0, _keyMap.default)(argNodes.filter(isRequiredArgumentNode), function (arg) {\n        return arg.name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(directiveNode) {\n        var directiveName = directiveNode.name.value;\n        var requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n          var _argNodes = (_directiveNode$argume = directiveNode.arguments) !== null && _directiveNode$argume !== void 0 ? _directiveNode$argume : [];\n\n          var argNodeMap = (0, _keyMap.default)(_argNodes, function (arg) {\n            return arg.name.value;\n          });\n\n          for (var _i8 = 0, _Object$keys2 = Object.keys(requiredArgs); _i8 < _Object$keys2.length; _i8++) {\n            var argName = _Object$keys2[_i8];\n\n            if (!argNodeMap[argName]) {\n              var argType = requiredArgs[argName].type;\n              var argTypeStr = (0, _definition.isType)(argType) ? (0, _inspect.default)(argType) : (0, _printer.print)(argType);\n              context.reportError(new _GraphQLError.GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" argument \\\"\").concat(argName, \"\\\" of type \\\"\").concat(argTypeStr, \"\\\" is required, but it was not provided.\"), directiveNode));\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === _kinds.Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariablesInAllowedPositionRule = VariablesInAllowedPositionRule;\n\nvar _inspect = _interopRequireDefault(require(\"../../jsutils/inspect.js\"));\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _kinds = require(\"../../language/kinds.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\nvar _typeFromAST = require(\"../../utilities/typeFromAST.js\");\n\nvar _typeComparators = require(\"../../utilities/typeComparators.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Variables passed to field arguments conform to type\n */\nfunction VariablesInAllowedPositionRule(context) {\n  var varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        varDefMap = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          var type = _ref2.type;\n          var defaultValue = _ref2.defaultValue;\n          var varName = node.name.value;\n          var varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            var schema = context.getSchema();\n            var varType = (0, _typeFromAST.typeFromAST)(schema, varDef.type);\n\n            if (varType && !allowedVariableUsage(schema, varType, varDef.defaultValue, type, defaultValue)) {\n              var varTypeStr = (0, _inspect.default)(varType);\n              var typeStr = (0, _inspect.default)(type);\n              context.reportError(new _GraphQLError.GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" of type \\\"\").concat(varTypeStr, \"\\\" used in position expecting type \\\"\").concat(typeStr, \"\\\".\"), [varDef, node]));\n            }\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\n\nfunction allowedVariableUsage(schema, varType, varDefaultValue, locationType, locationDefaultValue) {\n  if ((0, _definition.isNonNullType)(locationType) && !(0, _definition.isNonNullType)(varType)) {\n    var hasNonNullVariableDefaultValue = varDefaultValue != null && varDefaultValue.kind !== _kinds.Kind.NULL;\n    var hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    var nullableLocationType = locationType.ofType;\n    return (0, _typeComparators.isTypeSubTypeOf)(schema, varType, nullableLocationType);\n  }\n\n  return (0, _typeComparators.isTypeSubTypeOf)(schema, varType, locationType);\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OverlappingFieldsCanBeMergedRule = OverlappingFieldsCanBeMergedRule;\n\nvar _find = _interopRequireDefault(require(\"../../polyfills/find.js\"));\n\nvar _objectEntries3 = _interopRequireDefault(require(\"../../polyfills/objectEntries.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../../jsutils/inspect.js\"));\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _kinds = require(\"../../language/kinds.js\");\n\nvar _printer = require(\"../../language/printer.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\nvar _typeFromAST = require(\"../../utilities/typeFromAST.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason.map(function (_ref) {\n      var responseName = _ref[0],\n          subReason = _ref[1];\n      return \"subfields \\\"\".concat(responseName, \"\\\" conflict because \") + reasonMessage(subReason);\n    }).join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n */\n\n\nfunction OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  var comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  var cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet: function SelectionSet(selectionSet) {\n      var conflicts = findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, context.getParentType(), selectionSet);\n\n      for (var _i2 = 0; _i2 < conflicts.length; _i2++) {\n        var _ref3 = conflicts[_i2];\n        var _ref2$ = _ref3[0];\n        var responseName = _ref2$[0];\n        var reason = _ref2$[1];\n        var fields1 = _ref3[1];\n        var fields2 = _ref3[2];\n        var reasonMsg = reasonMessage(reason);\n        context.reportError(new _GraphQLError.GraphQLError(\"Fields \\\"\".concat(responseName, \"\\\" conflict because \").concat(reasonMsg, \". Use different aliases on the fields to fetch both if this was intentional.\"), fields1.concat(fields2)));\n      }\n    }\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentType, selectionSet) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet),\n      fieldMap = _getFieldsAndFragment[0],\n      fragmentNames = _getFieldsAndFragment[1]; // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n\n  collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap);\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (var i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, fieldMap, fragmentNames[i]); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (var j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, fragmentNames[i], fragmentNames[j]);\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\n\nfunction collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentName) {\n  var fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  var _getReferencedFieldsA = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment),\n      fieldMap2 = _getReferencedFieldsA[0],\n      fragmentNames2 = _getReferencedFieldsA[1]; // Do not compare a fragment's fieldMap to itself.\n\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fieldMap2); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (var i = 0; i < fragmentNames2.length; i++) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentNames2[i]);\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\n\nfunction collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentName2) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n\n  if (comparedFragmentPairs.has(fragmentName1, fragmentName2, areMutuallyExclusive)) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  var fragment1 = context.getFragment(fragmentName1);\n  var fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  var _getReferencedFieldsA2 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment1),\n      fieldMap1 = _getReferencedFieldsA2[0],\n      fragmentNames1 = _getReferencedFieldsA2[1];\n\n  var _getReferencedFieldsA3 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment2),\n      fieldMap2 = _getReferencedFieldsA3[0],\n      fragmentNames2 = _getReferencedFieldsA3[1]; // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (var j = 0; j < fragmentNames2.length; j++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentNames2[j]);\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n\n  for (var i = 0; i < fragmentNames1.length; i++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[i], fragmentName2);\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\n\nfunction findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, parentType1, selectionSet1, parentType2, selectionSet2) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment2 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType1, selectionSet1),\n      fieldMap1 = _getFieldsAndFragment2[0],\n      fragmentNames1 = _getFieldsAndFragment2[1];\n\n  var _getFieldsAndFragment3 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType2, selectionSet2),\n      fieldMap2 = _getFieldsAndFragment3[0],\n      fragmentNames2 = _getFieldsAndFragment3[1]; // (H) First, collect all conflicts between these two collections of field.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  if (fragmentNames2.length !== 0) {\n    for (var j = 0; j < fragmentNames2.length; j++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fragmentNames2[j]);\n    }\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n\n  if (fragmentNames1.length !== 0) {\n    for (var i = 0; i < fragmentNames1.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap2, fragmentNames1[i]);\n    }\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n\n  for (var _i3 = 0; _i3 < fragmentNames1.length; _i3++) {\n    for (var _j = 0; _j < fragmentNames2.length; _j++) {\n      collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[_i3], fragmentNames2[_j]);\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\n\nfunction collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (var _i5 = 0, _objectEntries2 = (0, _objectEntries3.default)(fieldMap); _i5 < _objectEntries2.length; _i5++) {\n    var _ref5 = _objectEntries2[_i5];\n    var responseName = _ref5[0];\n    var fields = _ref5[1];\n\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (var i = 0; i < fields.length; i++) {\n        for (var j = i + 1; j < fields.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, // within one collection is never mutually exclusive\n          responseName, fields[i], fields[j]);\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\n\nfunction collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, fieldMap1, fieldMap2) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (var _i7 = 0, _Object$keys2 = Object.keys(fieldMap1); _i7 < _Object$keys2.length; _i7++) {\n    var responseName = _Object$keys2[_i7];\n    var fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      var fields1 = fieldMap1[responseName];\n\n      for (var i = 0; i < fields1.length; i++) {\n        for (var j = 0; j < fields2.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, fields1[i], fields2[j]);\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\n\nfunction findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, field1, field2) {\n  var parentType1 = field1[0],\n      node1 = field1[1],\n      def1 = field1[2];\n  var parentType2 = field2[0],\n      node2 = field2[1],\n      def2 = field2[2]; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  var areMutuallyExclusive = parentFieldsAreMutuallyExclusive || parentType1 !== parentType2 && (0, _definition.isObjectType)(parentType1) && (0, _definition.isObjectType)(parentType2);\n\n  if (!areMutuallyExclusive) {\n    var _node1$arguments, _node2$arguments;\n\n    // Two aliases must refer to the same field.\n    var name1 = node1.name.value;\n    var name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [[responseName, \"\\\"\".concat(name1, \"\\\" and \\\"\").concat(name2, \"\\\" are different fields\")], [node1], [node2]];\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n    var args1 = (_node1$arguments = node1.arguments) !== null && _node1$arguments !== void 0 ? _node1$arguments : []; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n    var args2 = (_node2$arguments = node2.arguments) !== null && _node2$arguments !== void 0 ? _node2$arguments : []; // Two field calls must have the same arguments.\n\n    if (!sameArguments(args1, args2)) {\n      return [[responseName, 'they have differing arguments'], [node1], [node2]];\n    }\n  } // The return type for each field.\n\n\n  var type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  var type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [[responseName, \"they return conflicting types \\\"\".concat((0, _inspect.default)(type1), \"\\\" and \\\"\").concat((0, _inspect.default)(type2), \"\\\"\")], [node1], [node2]];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n\n  var selectionSet1 = node1.selectionSet;\n  var selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    var conflicts = findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, (0, _definition.getNamedType)(type1), selectionSet1, (0, _definition.getNamedType)(type2), selectionSet2);\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(arguments1, arguments2) {\n  if (arguments1.length !== arguments2.length) {\n    return false;\n  }\n\n  return arguments1.every(function (argument1) {\n    var argument2 = (0, _find.default)(arguments2, function (argument) {\n      return argument.name.value === argument1.name.value;\n    });\n\n    if (!argument2) {\n      return false;\n    }\n\n    return sameValue(argument1.value, argument2.value);\n  });\n}\n\nfunction sameValue(value1, value2) {\n  return (0, _printer.print)(value1) === (0, _printer.print)(value2);\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\n\nfunction doTypesConflict(type1, type2) {\n  if ((0, _definition.isListType)(type1)) {\n    return (0, _definition.isListType)(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n\n  if ((0, _definition.isListType)(type2)) {\n    return true;\n  }\n\n  if ((0, _definition.isNonNullType)(type1)) {\n    return (0, _definition.isNonNullType)(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n\n  if ((0, _definition.isNonNullType)(type2)) {\n    return true;\n  }\n\n  if ((0, _definition.isLeafType)(type1) || (0, _definition.isLeafType)(type2)) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\n\nfunction getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet) {\n  var cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (!cached) {\n    var nodeAndDefs = Object.create(null);\n    var fragmentNames = Object.create(null);\n\n    _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames);\n\n    cached = [nodeAndDefs, Object.keys(fragmentNames)];\n    cachedFieldsAndFragmentNames.set(selectionSet, cached);\n  }\n\n  return cached;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\n\nfunction getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment) {\n  // Short-circuit building a type from the node if possible.\n  var cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  var fragmentType = (0, _typeFromAST.typeFromAST)(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragmentType, fragment.selectionSet);\n}\n\nfunction _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames) {\n  for (var _i9 = 0, _selectionSet$selecti2 = selectionSet.selections; _i9 < _selectionSet$selecti2.length; _i9++) {\n    var selection = _selectionSet$selecti2[_i9];\n\n    switch (selection.kind) {\n      case _kinds.Kind.FIELD:\n        {\n          var fieldName = selection.name.value;\n          var fieldDef = void 0;\n\n          if ((0, _definition.isObjectType)(parentType) || (0, _definition.isInterfaceType)(parentType)) {\n            fieldDef = parentType.getFields()[fieldName];\n          }\n\n          var responseName = selection.alias ? selection.alias.value : fieldName;\n\n          if (!nodeAndDefs[responseName]) {\n            nodeAndDefs[responseName] = [];\n          }\n\n          nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n          break;\n        }\n\n      case _kinds.Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case _kinds.Kind.INLINE_FRAGMENT:\n        {\n          var typeCondition = selection.typeCondition;\n          var inlineFragmentType = typeCondition ? (0, _typeFromAST.typeFromAST)(context.getSchema(), typeCondition) : parentType;\n\n          _collectFieldsAndFragmentNames(context, inlineFragmentType, selection.selectionSet, nodeAndDefs, fragmentNames);\n\n          break;\n        }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [[responseName, conflicts.map(function (_ref6) {\n      var reason = _ref6[0];\n      return reason;\n    })], conflicts.reduce(function (allFields, _ref7) {\n      var fields1 = _ref7[1];\n      return allFields.concat(fields1);\n    }, [node1]), conflicts.reduce(function (allFields, _ref8) {\n      var fields2 = _ref8[2];\n      return allFields.concat(fields2);\n    }, [node2])];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does\n * not matter. We do this by maintaining a sort of double adjacency sets.\n */\n\n\nvar PairSet = /*#__PURE__*/function () {\n  function PairSet() {\n    this._data = Object.create(null);\n  }\n\n  var _proto = PairSet.prototype;\n\n  _proto.has = function has(a, b, areMutuallyExclusive) {\n    var first = this._data[a];\n    var result = first && first[b];\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true,\n    // hence if we want to know if this PairSet \"has\" these two with no\n    // exclusivity, we have to ensure it was added as such.\n\n\n    if (areMutuallyExclusive === false) {\n      return result === false;\n    }\n\n    return true;\n  };\n\n  _proto.add = function add(a, b, areMutuallyExclusive) {\n    this._pairSetAdd(a, b, areMutuallyExclusive);\n\n    this._pairSetAdd(b, a, areMutuallyExclusive);\n  };\n\n  _proto._pairSetAdd = function _pairSetAdd(a, b, areMutuallyExclusive) {\n    var map = this._data[a];\n\n    if (!map) {\n      map = Object.create(null);\n      this._data[a] = map;\n    }\n\n    map[b] = areMutuallyExclusive;\n  };\n\n  return PairSet;\n}();\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueInputFieldNamesRule = UniqueInputFieldNamesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\nfunction UniqueInputFieldNamesRule(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(new _GraphQLError.GraphQLError(\"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\"), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoneSchemaDefinitionRule = LoneSchemaDefinitionRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nfunction LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  var oldSchema = context.getSchema();\n  var alreadyDefined = (_ref = (_ref2 = (_oldSchema$astNode = oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0 ? _oldSchema$astNode : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getQueryType()) !== null && _ref2 !== void 0 ? _ref2 : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getMutationType()) !== null && _ref !== void 0 ? _ref : oldSchema === null || oldSchema === void 0 ? void 0 : oldSchema.getSubscriptionType();\n  var schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition: function SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(new _GraphQLError.GraphQLError('Cannot define a new schema within a schema extension.', node));\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(new _GraphQLError.GraphQLError('Must provide only one schema definition.', node));\n      }\n\n      ++schemaDefinitionsCount;\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueOperationTypesRule = UniqueOperationTypesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nfunction UniqueOperationTypesRule(context) {\n  var schema = context.getSchema();\n  var definedOperationTypes = Object.create(null);\n  var existingOperationTypes = schema ? {\n    query: schema.getQueryType(),\n    mutation: schema.getMutationType(),\n    subscription: schema.getSubscriptionType()\n  } : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n    var operationTypesNodes = (_node$operationTypes = node.operationTypes) !== null && _node$operationTypes !== void 0 ? _node$operationTypes : [];\n\n    for (var _i2 = 0; _i2 < operationTypesNodes.length; _i2++) {\n      var operationType = operationTypesNodes[_i2];\n      var operation = operationType.operation;\n      var alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(new _GraphQLError.GraphQLError(\"Type for \".concat(operation, \" already defined in the schema. It cannot be redefined.\"), operationType));\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(new _GraphQLError.GraphQLError(\"There can be only one \".concat(operation, \" type in schema.\"), [alreadyDefinedOperationType, operationType]));\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueTypeNamesRule = UniqueTypeNamesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\nfunction UniqueTypeNamesRule(context) {\n  var knownTypeNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName\n  };\n\n  function checkTypeName(node) {\n    var typeName = node.name.value;\n\n    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {\n      context.reportError(new _GraphQLError.GraphQLError(\"Type \\\"\".concat(typeName, \"\\\" already exists in the schema. It cannot also be defined in this type definition.\"), node.name));\n      return;\n    }\n\n    if (knownTypeNames[typeName]) {\n      context.reportError(new _GraphQLError.GraphQLError(\"There can be only one type named \\\"\".concat(typeName, \"\\\".\"), [knownTypeNames[typeName], node.name]));\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n\n    return false;\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueEnumValueNamesRule = UniqueEnumValueNamesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nfunction UniqueEnumValueNamesRule(context) {\n  var schema = context.getSchema();\n  var existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  var knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    var typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n    var valueNodes = (_node$values = node.values) !== null && _node$values !== void 0 ? _node$values : [];\n    var valueNames = knownValueNames[typeName];\n\n    for (var _i2 = 0; _i2 < valueNodes.length; _i2++) {\n      var valueDef = valueNodes[_i2];\n      var valueName = valueDef.name.value;\n      var existingType = existingTypeMap[typeName];\n\n      if ((0, _definition.isEnumType)(existingType) && existingType.getValue(valueName)) {\n        context.reportError(new _GraphQLError.GraphQLError(\"Enum value \\\"\".concat(typeName, \".\").concat(valueName, \"\\\" already exists in the schema. It cannot also be defined in this type extension.\"), valueDef.name));\n      } else if (valueNames[valueName]) {\n        context.reportError(new _GraphQLError.GraphQLError(\"Enum value \\\"\".concat(typeName, \".\").concat(valueName, \"\\\" can only be defined once.\"), [valueNames[valueName], valueDef.name]));\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueFieldDefinitionNamesRule = UniqueFieldDefinitionNamesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\nfunction UniqueFieldDefinitionNamesRule(context) {\n  var schema = context.getSchema();\n  var existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  var knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness\n  };\n\n  function checkFieldUniqueness(node) {\n    var _node$fields;\n\n    var typeName = node.name.value;\n\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n    var fieldNodes = (_node$fields = node.fields) !== null && _node$fields !== void 0 ? _node$fields : [];\n    var fieldNames = knownFieldNames[typeName];\n\n    for (var _i2 = 0; _i2 < fieldNodes.length; _i2++) {\n      var fieldDef = fieldNodes[_i2];\n      var fieldName = fieldDef.name.value;\n\n      if (hasField(existingTypeMap[typeName], fieldName)) {\n        context.reportError(new _GraphQLError.GraphQLError(\"Field \\\"\".concat(typeName, \".\").concat(fieldName, \"\\\" already exists in the schema. It cannot also be defined in this type extension.\"), fieldDef.name));\n      } else if (fieldNames[fieldName]) {\n        context.reportError(new _GraphQLError.GraphQLError(\"Field \\\"\".concat(typeName, \".\").concat(fieldName, \"\\\" can only be defined once.\"), [fieldNames[fieldName], fieldDef.name]));\n      } else {\n        fieldNames[fieldName] = fieldDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction hasField(type, fieldName) {\n  if ((0, _definition.isObjectType)(type) || (0, _definition.isInterfaceType)(type) || (0, _definition.isInputObjectType)(type)) {\n    return type.getFields()[fieldName] != null;\n  }\n\n  return false;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UniqueDirectiveNamesRule = UniqueDirectiveNamesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nfunction UniqueDirectiveNamesRule(context) {\n  var knownDirectiveNames = Object.create(null);\n  var schema = context.getSchema();\n  return {\n    DirectiveDefinition: function DirectiveDefinition(node) {\n      var directiveName = node.name.value;\n\n      if (schema !== null && schema !== void 0 && schema.getDirective(directiveName)) {\n        context.reportError(new _GraphQLError.GraphQLError(\"Directive \\\"@\".concat(directiveName, \"\\\" already exists in the schema. It cannot be redefined.\"), node.name));\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(new _GraphQLError.GraphQLError(\"There can be only one directive named \\\"@\".concat(directiveName, \"\\\".\"), [knownDirectiveNames[directiveName], node.name]));\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PossibleTypeExtensionsRule = PossibleTypeExtensionsRule;\n\nvar _inspect = _interopRequireDefault(require(\"../../jsutils/inspect.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../../jsutils/invariant.js\"));\n\nvar _didYouMean = _interopRequireDefault(require(\"../../jsutils/didYouMean.js\"));\n\nvar _suggestionList = _interopRequireDefault(require(\"../../jsutils/suggestionList.js\"));\n\nvar _GraphQLError = require(\"../../error/GraphQLError.js\");\n\nvar _kinds = require(\"../../language/kinds.js\");\n\nvar _predicates = require(\"../../language/predicates.js\");\n\nvar _definition = require(\"../../type/definition.js\");\n\nvar _defKindToExtKind;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nfunction PossibleTypeExtensionsRule(context) {\n  var schema = context.getSchema();\n  var definedTypes = Object.create(null);\n\n  for (var _i2 = 0, _context$getDocument$2 = context.getDocument().definitions; _i2 < _context$getDocument$2.length; _i2++) {\n    var def = _context$getDocument$2[_i2];\n\n    if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension\n  };\n\n  function checkExtension(node) {\n    var typeName = node.name.value;\n    var defNode = definedTypes[typeName];\n    var existingType = schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    var expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        var kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(new _GraphQLError.GraphQLError(\"Cannot extend non-\".concat(kindStr, \" type \\\"\").concat(typeName, \"\\\".\"), defNode ? [defNode, node] : node));\n      }\n    } else {\n      var allTypeNames = Object.keys(definedTypes);\n\n      if (schema) {\n        allTypeNames = allTypeNames.concat(Object.keys(schema.getTypeMap()));\n      }\n\n      var suggestedTypes = (0, _suggestionList.default)(typeName, allTypeNames);\n      context.reportError(new _GraphQLError.GraphQLError(\"Cannot extend type \\\"\".concat(typeName, \"\\\" because it is not defined.\") + (0, _didYouMean.default)(suggestedTypes), node.name));\n    }\n  }\n}\n\nvar defKindToExtKind = (_defKindToExtKind = {}, _defineProperty(_defKindToExtKind, _kinds.Kind.SCALAR_TYPE_DEFINITION, _kinds.Kind.SCALAR_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, _kinds.Kind.OBJECT_TYPE_DEFINITION, _kinds.Kind.OBJECT_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, _kinds.Kind.INTERFACE_TYPE_DEFINITION, _kinds.Kind.INTERFACE_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, _kinds.Kind.UNION_TYPE_DEFINITION, _kinds.Kind.UNION_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, _kinds.Kind.ENUM_TYPE_DEFINITION, _kinds.Kind.ENUM_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION, _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION), _defKindToExtKind);\n\nfunction typeToExtKind(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return _kinds.Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return _kinds.Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return _kinds.Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return _kinds.Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return _kinds.Kind.ENUM_TYPE_EXTENSION;\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || (0, _invariant.default)(0, 'Unexpected type: ' + (0, _inspect.default)(type));\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case _kinds.Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case _kinds.Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case _kinds.Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case _kinds.Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case _kinds.Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || (0, _invariant.default)(0, 'Unexpected kind: ' + (0, _inspect.default)(kind));\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.specifiedSDLRules = exports.specifiedRules = void 0;\n\nvar _ExecutableDefinitionsRule = require(\"./rules/ExecutableDefinitionsRule.js\");\n\nvar _UniqueOperationNamesRule = require(\"./rules/UniqueOperationNamesRule.js\");\n\nvar _LoneAnonymousOperationRule = require(\"./rules/LoneAnonymousOperationRule.js\");\n\nvar _SingleFieldSubscriptionsRule = require(\"./rules/SingleFieldSubscriptionsRule.js\");\n\nvar _KnownTypeNamesRule = require(\"./rules/KnownTypeNamesRule.js\");\n\nvar _FragmentsOnCompositeTypesRule = require(\"./rules/FragmentsOnCompositeTypesRule.js\");\n\nvar _VariablesAreInputTypesRule = require(\"./rules/VariablesAreInputTypesRule.js\");\n\nvar _ScalarLeafsRule = require(\"./rules/ScalarLeafsRule.js\");\n\nvar _FieldsOnCorrectTypeRule = require(\"./rules/FieldsOnCorrectTypeRule.js\");\n\nvar _UniqueFragmentNamesRule = require(\"./rules/UniqueFragmentNamesRule.js\");\n\nvar _KnownFragmentNamesRule = require(\"./rules/KnownFragmentNamesRule.js\");\n\nvar _NoUnusedFragmentsRule = require(\"./rules/NoUnusedFragmentsRule.js\");\n\nvar _PossibleFragmentSpreadsRule = require(\"./rules/PossibleFragmentSpreadsRule.js\");\n\nvar _NoFragmentCyclesRule = require(\"./rules/NoFragmentCyclesRule.js\");\n\nvar _UniqueVariableNamesRule = require(\"./rules/UniqueVariableNamesRule.js\");\n\nvar _NoUndefinedVariablesRule = require(\"./rules/NoUndefinedVariablesRule.js\");\n\nvar _NoUnusedVariablesRule = require(\"./rules/NoUnusedVariablesRule.js\");\n\nvar _KnownDirectivesRule = require(\"./rules/KnownDirectivesRule.js\");\n\nvar _UniqueDirectivesPerLocationRule = require(\"./rules/UniqueDirectivesPerLocationRule.js\");\n\nvar _KnownArgumentNamesRule = require(\"./rules/KnownArgumentNamesRule.js\");\n\nvar _UniqueArgumentNamesRule = require(\"./rules/UniqueArgumentNamesRule.js\");\n\nvar _ValuesOfCorrectTypeRule = require(\"./rules/ValuesOfCorrectTypeRule.js\");\n\nvar _ProvidedRequiredArgumentsRule = require(\"./rules/ProvidedRequiredArgumentsRule.js\");\n\nvar _VariablesInAllowedPositionRule = require(\"./rules/VariablesInAllowedPositionRule.js\");\n\nvar _OverlappingFieldsCanBeMergedRule = require(\"./rules/OverlappingFieldsCanBeMergedRule.js\");\n\nvar _UniqueInputFieldNamesRule = require(\"./rules/UniqueInputFieldNamesRule.js\");\n\nvar _LoneSchemaDefinitionRule = require(\"./rules/LoneSchemaDefinitionRule.js\");\n\nvar _UniqueOperationTypesRule = require(\"./rules/UniqueOperationTypesRule.js\");\n\nvar _UniqueTypeNamesRule = require(\"./rules/UniqueTypeNamesRule.js\");\n\nvar _UniqueEnumValueNamesRule = require(\"./rules/UniqueEnumValueNamesRule.js\");\n\nvar _UniqueFieldDefinitionNamesRule = require(\"./rules/UniqueFieldDefinitionNamesRule.js\");\n\nvar _UniqueDirectiveNamesRule = require(\"./rules/UniqueDirectiveNamesRule.js\");\n\nvar _PossibleTypeExtensionsRule = require(\"./rules/PossibleTypeExtensionsRule.js\");\n\n// Spec Section: \"Executable Definitions\"\n// Spec Section: \"Operation Name Uniqueness\"\n// Spec Section: \"Lone Anonymous Operation\"\n// Spec Section: \"Subscriptions with Single Root Field\"\n// Spec Section: \"Fragment Spread Type Existence\"\n// Spec Section: \"Fragments on Composite Types\"\n// Spec Section: \"Variables are Input Types\"\n// Spec Section: \"Leaf Field Selections\"\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n// Spec Section: \"Fragment Name Uniqueness\"\n// Spec Section: \"Fragment spread target defined\"\n// Spec Section: \"Fragments must be used\"\n// Spec Section: \"Fragment spread is possible\"\n// Spec Section: \"Fragments must not form cycles\"\n// Spec Section: \"Variable Uniqueness\"\n// Spec Section: \"All Variable Used Defined\"\n// Spec Section: \"All Variables Used\"\n// Spec Section: \"Directives Are Defined\"\n// Spec Section: \"Directives Are Unique Per Location\"\n// Spec Section: \"Argument Names\"\n// Spec Section: \"Argument Uniqueness\"\n// Spec Section: \"Value Type Correctness\"\n// Spec Section: \"Argument Optionality\"\n// Spec Section: \"All Variable Usages Are Allowed\"\n// Spec Section: \"Field Selection Merging\"\n// Spec Section: \"Input Object Field Uniqueness\"\n// SDL-specific validation rules\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nvar specifiedRules = Object.freeze([_ExecutableDefinitionsRule.ExecutableDefinitionsRule, _UniqueOperationNamesRule.UniqueOperationNamesRule, _LoneAnonymousOperationRule.LoneAnonymousOperationRule, _SingleFieldSubscriptionsRule.SingleFieldSubscriptionsRule, _KnownTypeNamesRule.KnownTypeNamesRule, _FragmentsOnCompositeTypesRule.FragmentsOnCompositeTypesRule, _VariablesAreInputTypesRule.VariablesAreInputTypesRule, _ScalarLeafsRule.ScalarLeafsRule, _FieldsOnCorrectTypeRule.FieldsOnCorrectTypeRule, _UniqueFragmentNamesRule.UniqueFragmentNamesRule, _KnownFragmentNamesRule.KnownFragmentNamesRule, _NoUnusedFragmentsRule.NoUnusedFragmentsRule, _PossibleFragmentSpreadsRule.PossibleFragmentSpreadsRule, _NoFragmentCyclesRule.NoFragmentCyclesRule, _UniqueVariableNamesRule.UniqueVariableNamesRule, _NoUndefinedVariablesRule.NoUndefinedVariablesRule, _NoUnusedVariablesRule.NoUnusedVariablesRule, _KnownDirectivesRule.KnownDirectivesRule, _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule, _KnownArgumentNamesRule.KnownArgumentNamesRule, _UniqueArgumentNamesRule.UniqueArgumentNamesRule, _ValuesOfCorrectTypeRule.ValuesOfCorrectTypeRule, _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsRule, _VariablesInAllowedPositionRule.VariablesInAllowedPositionRule, _OverlappingFieldsCanBeMergedRule.OverlappingFieldsCanBeMergedRule, _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule]);\n/**\n * @internal\n */\n\nexports.specifiedRules = specifiedRules;\nvar specifiedSDLRules = Object.freeze([_LoneSchemaDefinitionRule.LoneSchemaDefinitionRule, _UniqueOperationTypesRule.UniqueOperationTypesRule, _UniqueTypeNamesRule.UniqueTypeNamesRule, _UniqueEnumValueNamesRule.UniqueEnumValueNamesRule, _UniqueFieldDefinitionNamesRule.UniqueFieldDefinitionNamesRule, _UniqueDirectiveNamesRule.UniqueDirectiveNamesRule, _KnownTypeNamesRule.KnownTypeNamesRule, _KnownDirectivesRule.KnownDirectivesRule, _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule, _PossibleTypeExtensionsRule.PossibleTypeExtensionsRule, _KnownArgumentNamesRule.KnownArgumentNamesOnDirectivesRule, _UniqueArgumentNamesRule.UniqueArgumentNamesRule, _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule, _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsOnDirectivesRule]);\nexports.specifiedSDLRules = specifiedSDLRules;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidationContext = exports.SDLValidationContext = exports.ASTValidationContext = void 0;\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _visitor = require(\"../language/visitor.js\");\n\nvar _TypeInfo = require(\"../utilities/TypeInfo.js\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nvar ASTValidationContext = /*#__PURE__*/function () {\n  function ASTValidationContext(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  var _proto = ASTValidationContext.prototype;\n\n  _proto.reportError = function reportError(error) {\n    this._onError(error);\n  };\n\n  _proto.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  _proto.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === _kinds.Kind.FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n\n        return frags;\n      }, Object.create(null));\n    }\n\n    return fragments[name];\n  };\n\n  _proto.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n\n        for (var _i2 = 0, _set$selections2 = set.selections; _i2 < _set$selections2.length; _i2++) {\n          var selection = _set$selections2[_i2];\n\n          if (selection.kind === _kinds.Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  };\n\n  _proto.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n\n      while (nodesToVisit.length !== 0) {\n        var node = nodesToVisit.pop();\n\n        for (var _i4 = 0, _this$getFragmentSpre2 = this.getFragmentSpreads(node); _i4 < _this$getFragmentSpre2.length; _i4++) {\n          var spread = _this$getFragmentSpre2[_i4];\n          var fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            var fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  };\n\n  return ASTValidationContext;\n}();\n\nexports.ASTValidationContext = ASTValidationContext;\n\nvar SDLValidationContext = /*#__PURE__*/function (_ASTValidationContext) {\n  _inheritsLoose(SDLValidationContext, _ASTValidationContext);\n\n  function SDLValidationContext(ast, schema, onError) {\n    var _this;\n\n    _this = _ASTValidationContext.call(this, ast, onError) || this;\n    _this._schema = schema;\n    return _this;\n  }\n\n  var _proto2 = SDLValidationContext.prototype;\n\n  _proto2.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  return SDLValidationContext;\n}(ASTValidationContext);\n\nexports.SDLValidationContext = SDLValidationContext;\n\nvar ValidationContext = /*#__PURE__*/function (_ASTValidationContext2) {\n  _inheritsLoose(ValidationContext, _ASTValidationContext2);\n\n  function ValidationContext(schema, ast, typeInfo, onError) {\n    var _this2;\n\n    _this2 = _ASTValidationContext2.call(this, ast, onError) || this;\n    _this2._schema = schema;\n    _this2._typeInfo = typeInfo;\n    _this2._variableUsages = new Map();\n    _this2._recursiveVariableUsages = new Map();\n    return _this2;\n  }\n\n  var _proto3 = ValidationContext.prototype;\n\n  _proto3.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  _proto3.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new _TypeInfo.TypeInfo(this._schema);\n      (0, _visitor.visit)(node, (0, _TypeInfo.visitWithTypeInfo)(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({\n            node: variable,\n            type: typeInfo.getInputType(),\n            defaultValue: typeInfo.getDefaultValue()\n          });\n        }\n      }));\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  };\n\n  _proto3.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (var _i6 = 0, _this$getRecursivelyR2 = this.getRecursivelyReferencedFragments(operation); _i6 < _this$getRecursivelyR2.length; _i6++) {\n        var frag = _this$getRecursivelyR2[_i6];\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  };\n\n  _proto3.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  _proto3.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  _proto3.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  _proto3.getParentInputType = function getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  };\n\n  _proto3.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  _proto3.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  _proto3.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  _proto3.getEnumValue = function getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  };\n\n  return ValidationContext;\n}(ASTValidationContext);\n\nexports.ValidationContext = ValidationContext;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nexports.validateSDL = validateSDL;\nexports.assertValidSDL = assertValidSDL;\nexports.assertValidSDLExtension = assertValidSDLExtension;\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert.js\"));\n\nvar _GraphQLError = require(\"../error/GraphQLError.js\");\n\nvar _visitor = require(\"../language/visitor.js\");\n\nvar _validate = require(\"../type/validate.js\");\n\nvar _TypeInfo = require(\"../utilities/TypeInfo.js\");\n\nvar _specifiedRules = require(\"./specifiedRules.js\");\n\nvar _ValidationContext = require(\"./ValidationContext.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\nfunction validate(schema, documentAST) {\n  var rules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _specifiedRules.specifiedRules;\n  var typeInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new _TypeInfo.TypeInfo(schema);\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n    maxErrors: undefined\n  };\n  documentAST || (0, _devAssert.default)(0, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  (0, _validate.assertValidSchema)(schema);\n  var abortObj = Object.freeze({});\n  var errors = [];\n  var context = new _ValidationContext.ValidationContext(schema, documentAST, typeInfo, function (error) {\n    if (options.maxErrors != null && errors.length >= options.maxErrors) {\n      errors.push(new _GraphQLError.GraphQLError('Too many validation errors, error limit reached. Validation aborted.'));\n      throw abortObj;\n    }\n\n    errors.push(error);\n  }); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  var visitor = (0, _visitor.visitInParallel)(rules.map(function (rule) {\n    return rule(context);\n  })); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    (0, _visitor.visit)(documentAST, (0, _TypeInfo.visitWithTypeInfo)(typeInfo, visitor));\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n}\n/**\n * @internal\n */\n\n\nfunction validateSDL(documentAST, schemaToExtend) {\n  var rules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _specifiedRules.specifiedSDLRules;\n  var errors = [];\n  var context = new _ValidationContext.SDLValidationContext(documentAST, schemaToExtend, function (error) {\n    errors.push(error);\n  });\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  (0, _visitor.visit)(documentAST, (0, _visitor.visitInParallel)(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\n\nfunction assertValidSDL(documentAST) {\n  var errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\n\nfunction assertValidSDLExtension(documentAST, schema) {\n  var errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = memoize3;\n\n/**\n * Memoizes the provided three-argument function.\n */\nfunction memoize3(fn) {\n  var cache0;\n  return function memoized(a1, a2, a3) {\n    if (!cache0) {\n      cache0 = new WeakMap();\n    }\n\n    var cache1 = cache0.get(a1);\n    var cache2;\n\n    if (cache1) {\n      cache2 = cache1.get(a2);\n\n      if (cache2) {\n        var cachedValue = cache2.get(a3);\n\n        if (cachedValue !== undefined) {\n          return cachedValue;\n        }\n      }\n    } else {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n\n    if (!cache2) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n\n    var newValue = fn(a1, a2, a3);\n    cache2.set(a3, newValue);\n    return newValue;\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = promiseReduce;\n\nvar _isPromise = _interopRequireDefault(require(\"./isPromise.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nfunction promiseReduce(values, callback, initialValue) {\n  return values.reduce(function (previous, value) {\n    return (0, _isPromise.default)(previous) ? previous.then(function (resolved) {\n      return callback(resolved, value);\n    }) : callback(previous, value);\n  }, initialValue);\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = promiseForObject;\n\n/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nfunction promiseForObject(object) {\n  var keys = Object.keys(object);\n  var valuesAndPromises = keys.map(function (name) {\n    return object[name];\n  });\n  return Promise.all(valuesAndPromises).then(function (values) {\n    return values.reduce(function (resolvedObject, value, i) {\n      resolvedObject[keys[i]] = value;\n      return resolvedObject;\n    }, Object.create(null));\n  });\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addPath = addPath;\nexports.pathToArray = pathToArray;\n\n/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nfunction addPath(prev, key, typename) {\n  return {\n    prev: prev,\n    key: key,\n    typename: typename\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\n\nfunction pathToArray(path) {\n  var flattened = [];\n  var curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOperationRootType = getOperationRootType;\n\nvar _GraphQLError = require(\"../error/GraphQLError.js\");\n\n/**\n * Extracts the root type of the operation from the schema.\n */\nfunction getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    var queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new _GraphQLError.GraphQLError('Schema does not define the required query root type.', operation);\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    var mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new _GraphQLError.GraphQLError('Schema is not configured for mutations.', operation);\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    var subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new _GraphQLError.GraphQLError('Schema is not configured for subscriptions.', operation);\n    }\n\n    return subscriptionType;\n  }\n\n  throw new _GraphQLError.GraphQLError('Can only have query, mutation and subscription operations.', operation);\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = printPathArray;\n\n/**\n * Build a string describing the path.\n */\nfunction printPathArray(path) {\n  return path.map(function (key) {\n    return typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key;\n  }).join('');\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.valueFromAST = valueFromAST;\n\nvar _objectValues3 = _interopRequireDefault(require(\"../polyfills/objectValues.js\"));\n\nvar _keyMap = _interopRequireDefault(require(\"../jsutils/keyMap.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Mixed         |\n * | NullValue            | null          |\n *\n */\nfunction valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (valueNode.kind === _kinds.Kind.VARIABLE) {\n    var variableName = valueNode.name.value;\n\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n\n    var variableValue = variables[variableName];\n\n    if (variableValue === null && (0, _definition.isNonNullType)(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n\n    return variableValue;\n  }\n\n  if ((0, _definition.isNonNullType)(type)) {\n    if (valueNode.kind === _kinds.Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === _kinds.Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if ((0, _definition.isListType)(type)) {\n    var itemType = type.ofType;\n\n    if (valueNode.kind === _kinds.Kind.LIST) {\n      var coercedValues = [];\n\n      for (var _i2 = 0, _valueNode$values2 = valueNode.values; _i2 < _valueNode$values2.length; _i2++) {\n        var itemNode = _valueNode$values2[_i2];\n\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if ((0, _definition.isNonNullType)(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          var itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    var coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (valueNode.kind !== _kinds.Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    var coercedObj = Object.create(null);\n    var fieldNodes = (0, _keyMap.default)(valueNode.fields, function (field) {\n      return field.name.value;\n    });\n\n    for (var _i4 = 0, _objectValues2 = (0, _objectValues3.default)(type.getFields()); _i4 < _objectValues2.length; _i4++) {\n      var field = _objectValues2[_i4];\n      var fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if ((0, _definition.isNonNullType)(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      var fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    return coercedObj;\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if ((0, _definition.isLeafType)(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    var result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  } // istanbul ignore next (Not reachable. All possible input types have been considered)\n\n\n  false || (0, _invariant.default)(0, 'Unexpected input type: ' + (0, _inspect.default)(type));\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\n\nfunction isMissingVariable(valueNode, variables) {\n  return valueNode.kind === _kinds.Kind.VARIABLE && (variables == null || variables[valueNode.name.value] === undefined);\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.coerceInputValue = coerceInputValue;\n\nvar _objectValues3 = _interopRequireDefault(require(\"../polyfills/objectValues.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _didYouMean = _interopRequireDefault(require(\"../jsutils/didYouMean.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"../jsutils/isObjectLike.js\"));\n\nvar _safeArrayFrom = _interopRequireDefault(require(\"../jsutils/safeArrayFrom.js\"));\n\nvar _suggestionList = _interopRequireDefault(require(\"../jsutils/suggestionList.js\"));\n\nvar _printPathArray = _interopRequireDefault(require(\"../jsutils/printPathArray.js\"));\n\nvar _Path = require(\"../jsutils/Path.js\");\n\nvar _GraphQLError = require(\"../error/GraphQLError.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */\nfunction coerceInputValue(inputValue, type) {\n  var onError = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultOnError;\n  return coerceInputValueImpl(inputValue, type, onError);\n}\n\nfunction defaultOnError(path, invalidValue, error) {\n  var errorPrefix = 'Invalid value ' + (0, _inspect.default)(invalidValue);\n\n  if (path.length > 0) {\n    errorPrefix += \" at \\\"value\".concat((0, _printPathArray.default)(path), \"\\\"\");\n  }\n\n  error.message = errorPrefix + ': ' + error.message;\n  throw error;\n}\n\nfunction coerceInputValueImpl(inputValue, type, onError, path) {\n  if ((0, _definition.isNonNullType)(type)) {\n    if (inputValue != null) {\n      return coerceInputValueImpl(inputValue, type.ofType, onError, path);\n    }\n\n    onError((0, _Path.pathToArray)(path), inputValue, new _GraphQLError.GraphQLError(\"Expected non-nullable type \\\"\".concat((0, _inspect.default)(type), \"\\\" not to be null.\")));\n    return;\n  }\n\n  if (inputValue == null) {\n    // Explicitly return the value null.\n    return null;\n  }\n\n  if ((0, _definition.isListType)(type)) {\n    var itemType = type.ofType;\n    var coercedList = (0, _safeArrayFrom.default)(inputValue, function (itemValue, index) {\n      var itemPath = (0, _Path.addPath)(path, index, undefined);\n      return coerceInputValueImpl(itemValue, itemType, onError, itemPath);\n    });\n\n    if (coercedList != null) {\n      return coercedList;\n    } // Lists accept a non-list value as a list of one.\n\n\n    return [coerceInputValueImpl(inputValue, itemType, onError, path)];\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (!(0, _isObjectLike.default)(inputValue)) {\n      onError((0, _Path.pathToArray)(path), inputValue, new _GraphQLError.GraphQLError(\"Expected type \\\"\".concat(type.name, \"\\\" to be an object.\")));\n      return;\n    }\n\n    var coercedValue = {};\n    var fieldDefs = type.getFields();\n\n    for (var _i2 = 0, _objectValues2 = (0, _objectValues3.default)(fieldDefs); _i2 < _objectValues2.length; _i2++) {\n      var field = _objectValues2[_i2];\n      var fieldValue = inputValue[field.name];\n\n      if (fieldValue === undefined) {\n        if (field.defaultValue !== undefined) {\n          coercedValue[field.name] = field.defaultValue;\n        } else if ((0, _definition.isNonNullType)(field.type)) {\n          var typeStr = (0, _inspect.default)(field.type);\n          onError((0, _Path.pathToArray)(path), inputValue, new _GraphQLError.GraphQLError(\"Field \\\"\".concat(field.name, \"\\\" of required type \\\"\").concat(typeStr, \"\\\" was not provided.\")));\n        }\n\n        continue;\n      }\n\n      coercedValue[field.name] = coerceInputValueImpl(fieldValue, field.type, onError, (0, _Path.addPath)(path, field.name, type.name));\n    } // Ensure every provided field is defined.\n\n\n    for (var _i4 = 0, _Object$keys2 = Object.keys(inputValue); _i4 < _Object$keys2.length; _i4++) {\n      var fieldName = _Object$keys2[_i4];\n\n      if (!fieldDefs[fieldName]) {\n        var suggestions = (0, _suggestionList.default)(fieldName, Object.keys(type.getFields()));\n        onError((0, _Path.pathToArray)(path), inputValue, new _GraphQLError.GraphQLError(\"Field \\\"\".concat(fieldName, \"\\\" is not defined by type \\\"\").concat(type.name, \"\\\".\") + (0, _didYouMean.default)(suggestions)));\n      }\n    }\n\n    return coercedValue;\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if ((0, _definition.isLeafType)(type)) {\n    var parseResult; // Scalars and Enums determine if a input value is valid via parseValue(),\n    // which can throw to indicate failure. If it throws, maintain a reference\n    // to the original error.\n\n    try {\n      parseResult = type.parseValue(inputValue);\n    } catch (error) {\n      if (error instanceof _GraphQLError.GraphQLError) {\n        onError((0, _Path.pathToArray)(path), inputValue, error);\n      } else {\n        onError((0, _Path.pathToArray)(path), inputValue, new _GraphQLError.GraphQLError(\"Expected type \\\"\".concat(type.name, \"\\\". \") + error.message, undefined, undefined, undefined, undefined, error));\n      }\n\n      return;\n    }\n\n    if (parseResult === undefined) {\n      onError((0, _Path.pathToArray)(path), inputValue, new _GraphQLError.GraphQLError(\"Expected type \\\"\".concat(type.name, \"\\\".\")));\n    }\n\n    return parseResult;\n  } // istanbul ignore next (Not reachable. All possible input types have been considered)\n\n\n  false || (0, _invariant.default)(0, 'Unexpected input type: ' + (0, _inspect.default)(type));\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVariableValues = getVariableValues;\nexports.getArgumentValues = getArgumentValues;\nexports.getDirectiveValues = getDirectiveValues;\n\nvar _find = _interopRequireDefault(require(\"../polyfills/find.js\"));\n\nvar _keyMap = _interopRequireDefault(require(\"../jsutils/keyMap.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _printPathArray = _interopRequireDefault(require(\"../jsutils/printPathArray.js\"));\n\nvar _GraphQLError = require(\"../error/GraphQLError.js\");\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _printer = require(\"../language/printer.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nvar _typeFromAST = require(\"../utilities/typeFromAST.js\");\n\nvar _valueFromAST = require(\"../utilities/valueFromAST.js\");\n\nvar _coerceInputValue = require(\"../utilities/coerceInputValue.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n *\n * @internal\n */\nfunction getVariableValues(schema, varDefNodes, inputs, options) {\n  var errors = [];\n  var maxErrors = options === null || options === void 0 ? void 0 : options.maxErrors;\n\n  try {\n    var coerced = coerceVariableValues(schema, varDefNodes, inputs, function (error) {\n      if (maxErrors != null && errors.length >= maxErrors) {\n        throw new _GraphQLError.GraphQLError('Too many errors processing variables, error limit reached. Execution aborted.');\n      }\n\n      errors.push(error);\n    });\n\n    if (errors.length === 0) {\n      return {\n        coerced: coerced\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n\n  return {\n    errors: errors\n  };\n}\n\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  var coercedValues = {};\n\n  var _loop = function _loop(_i2) {\n    var varDefNode = varDefNodes[_i2];\n    var varName = varDefNode.variable.name.value;\n    var varType = (0, _typeFromAST.typeFromAST)(schema, varDefNode.type);\n\n    if (!(0, _definition.isInputType)(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      var varTypeStr = (0, _printer.print)(varDefNode.type);\n      onError(new _GraphQLError.GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" expected value of type \\\"\").concat(varTypeStr, \"\\\" which cannot be used as an input type.\"), varDefNode.type));\n      return \"continue\";\n    }\n\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = (0, _valueFromAST.valueFromAST)(varDefNode.defaultValue, varType);\n      } else if ((0, _definition.isNonNullType)(varType)) {\n        var _varTypeStr = (0, _inspect.default)(varType);\n\n        onError(new _GraphQLError.GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" of required type \\\"\").concat(_varTypeStr, \"\\\" was not provided.\"), varDefNode));\n      }\n\n      return \"continue\";\n    }\n\n    var value = inputs[varName];\n\n    if (value === null && (0, _definition.isNonNullType)(varType)) {\n      var _varTypeStr2 = (0, _inspect.default)(varType);\n\n      onError(new _GraphQLError.GraphQLError(\"Variable \\\"$\".concat(varName, \"\\\" of non-null type \\\"\").concat(_varTypeStr2, \"\\\" must not be null.\"), varDefNode));\n      return \"continue\";\n    }\n\n    coercedValues[varName] = (0, _coerceInputValue.coerceInputValue)(value, varType, function (path, invalidValue, error) {\n      var prefix = \"Variable \\\"$\".concat(varName, \"\\\" got invalid value \") + (0, _inspect.default)(invalidValue);\n\n      if (path.length > 0) {\n        prefix += \" at \\\"\".concat(varName).concat((0, _printPathArray.default)(path), \"\\\"\");\n      }\n\n      onError(new _GraphQLError.GraphQLError(prefix + '; ' + error.message, varDefNode, undefined, undefined, undefined, error.originalError));\n    });\n  };\n\n  for (var _i2 = 0; _i2 < varDefNodes.length; _i2++) {\n    var _ret = _loop(_i2);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n *\n * @internal\n */\n\n\nfunction getArgumentValues(def, node, variableValues) {\n  var _node$arguments;\n\n  var coercedValues = {}; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n  var argumentNodes = (_node$arguments = node.arguments) !== null && _node$arguments !== void 0 ? _node$arguments : [];\n  var argNodeMap = (0, _keyMap.default)(argumentNodes, function (arg) {\n    return arg.name.value;\n  });\n\n  for (var _i4 = 0, _def$args2 = def.args; _i4 < _def$args2.length; _i4++) {\n    var argDef = _def$args2[_i4];\n    var name = argDef.name;\n    var argType = argDef.type;\n    var argumentNode = argNodeMap[name];\n\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if ((0, _definition.isNonNullType)(argType)) {\n        throw new _GraphQLError.GraphQLError(\"Argument \\\"\".concat(name, \"\\\" of required type \\\"\").concat((0, _inspect.default)(argType), \"\\\" \") + 'was not provided.', node);\n      }\n\n      continue;\n    }\n\n    var valueNode = argumentNode.value;\n    var isNull = valueNode.kind === _kinds.Kind.NULL;\n\n    if (valueNode.kind === _kinds.Kind.VARIABLE) {\n      var variableName = valueNode.name.value;\n\n      if (variableValues == null || !hasOwnProperty(variableValues, variableName)) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if ((0, _definition.isNonNullType)(argType)) {\n          throw new _GraphQLError.GraphQLError(\"Argument \\\"\".concat(name, \"\\\" of required type \\\"\").concat((0, _inspect.default)(argType), \"\\\" \") + \"was provided the variable \\\"$\".concat(variableName, \"\\\" which was not provided a runtime value.\"), valueNode);\n        }\n\n        continue;\n      }\n\n      isNull = variableValues[variableName] == null;\n    }\n\n    if (isNull && (0, _definition.isNonNullType)(argType)) {\n      throw new _GraphQLError.GraphQLError(\"Argument \\\"\".concat(name, \"\\\" of non-null type \\\"\").concat((0, _inspect.default)(argType), \"\\\" \") + 'must not be null.', valueNode);\n    }\n\n    var coercedValue = (0, _valueFromAST.valueFromAST)(valueNode, argType, variableValues);\n\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectTypeRule validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new _GraphQLError.GraphQLError(\"Argument \\\"\".concat(name, \"\\\" has invalid value \").concat((0, _printer.print)(valueNode), \".\"), valueNode);\n    }\n\n    coercedValues[name] = coercedValue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\n\nfunction getDirectiveValues(directiveDef, node, variableValues) {\n  var directiveNode = node.directives && (0, _find.default)(node.directives, function (directive) {\n    return directive.name.value === directiveDef.name;\n  });\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.execute = execute;\nexports.executeSync = executeSync;\nexports.assertValidExecutionArguments = assertValidExecutionArguments;\nexports.buildExecutionContext = buildExecutionContext;\nexports.collectFields = collectFields;\nexports.buildResolveInfo = buildResolveInfo;\nexports.getFieldDef = getFieldDef;\nexports.defaultFieldResolver = exports.defaultTypeResolver = void 0;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _memoize = _interopRequireDefault(require(\"../jsutils/memoize3.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert.js\"));\n\nvar _isPromise = _interopRequireDefault(require(\"../jsutils/isPromise.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"../jsutils/isObjectLike.js\"));\n\nvar _safeArrayFrom = _interopRequireDefault(require(\"../jsutils/safeArrayFrom.js\"));\n\nvar _promiseReduce = _interopRequireDefault(require(\"../jsutils/promiseReduce.js\"));\n\nvar _promiseForObject = _interopRequireDefault(require(\"../jsutils/promiseForObject.js\"));\n\nvar _Path = require(\"../jsutils/Path.js\");\n\nvar _GraphQLError = require(\"../error/GraphQLError.js\");\n\nvar _locatedError = require(\"../error/locatedError.js\");\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _validate = require(\"../type/validate.js\");\n\nvar _introspection = require(\"../type/introspection.js\");\n\nvar _directives = require(\"../type/directives.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nvar _typeFromAST = require(\"../utilities/typeFromAST.js\");\n\nvar _getOperationRootType = require(\"../utilities/getOperationRootType.js\");\n\nvar _values = require(\"./values.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction execute(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  return arguments.length === 1 ? executeImpl(argsOrSchema) : executeImpl({\n    schema: argsOrSchema,\n    document: document,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    typeResolver: typeResolver\n  });\n}\n/**\n * Also implements the \"Evaluating requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\n\nfunction executeSync(args) {\n  var result = executeImpl(args); // Assert that the execution was synchronous.\n\n  if ((0, _isPromise.default)(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction executeImpl(args) {\n  var schema = args.schema,\n      document = args.document,\n      rootValue = args.rootValue,\n      contextValue = args.contextValue,\n      variableValues = args.variableValues,\n      operationName = args.operationName,\n      fieldResolver = args.fieldResolver,\n      typeResolver = args.typeResolver; // If arguments are missing or incorrect, throw an error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  var exeContext = buildExecutionContext(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver); // Return early errors if execution context failed.\n\n  if (Array.isArray(exeContext)) {\n    return {\n      errors: exeContext\n    };\n  } // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n\n\n  var data = executeOperation(exeContext, exeContext.operation, rootValue);\n  return buildResponse(exeContext, data);\n}\n/**\n * Given a completed execution context and data, build the { errors, data }\n * response defined by the \"Response\" section of the GraphQL specification.\n */\n\n\nfunction buildResponse(exeContext, data) {\n  if ((0, _isPromise.default)(data)) {\n    return data.then(function (resolved) {\n      return buildResponse(exeContext, resolved);\n    });\n  }\n\n  return exeContext.errors.length === 0 ? {\n    data: data\n  } : {\n    errors: exeContext.errors,\n    data: data\n  };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\n\n\nfunction assertValidExecutionArguments(schema, document, rawVariableValues) {\n  document || (0, _devAssert.default)(0, 'Must provide document.'); // If the schema used for execution is invalid, throw an error.\n\n  (0, _validate.assertValidSchema)(schema); // Variables, if provided, must be an object.\n\n  rawVariableValues == null || (0, _isObjectLike.default)(rawVariableValues) || (0, _devAssert.default)(0, 'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.');\n}\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * @internal\n */\n\n\nfunction buildExecutionContext(schema, document, rootValue, contextValue, rawVariableValues, operationName, fieldResolver, typeResolver) {\n  var _definition$name, _operation$variableDe;\n\n  var operation;\n  var fragments = Object.create(null);\n\n  for (var _i2 = 0, _document$definitions2 = document.definitions; _i2 < _document$definitions2.length; _i2++) {\n    var definition = _document$definitions2[_i2];\n\n    switch (definition.kind) {\n      case _kinds.Kind.OPERATION_DEFINITION:\n        if (operationName == null) {\n          if (operation !== undefined) {\n            return [new _GraphQLError.GraphQLError('Must provide operation name if query contains multiple operations.')];\n          }\n\n          operation = definition;\n        } else if (((_definition$name = definition.name) === null || _definition$name === void 0 ? void 0 : _definition$name.value) === operationName) {\n          operation = definition;\n        }\n\n        break;\n\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n    }\n  }\n\n  if (!operation) {\n    if (operationName != null) {\n      return [new _GraphQLError.GraphQLError(\"Unknown operation named \\\"\".concat(operationName, \"\\\".\"))];\n    }\n\n    return [new _GraphQLError.GraphQLError('Must provide an operation.')];\n  } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n  var variableDefinitions = (_operation$variableDe = operation.variableDefinitions) !== null && _operation$variableDe !== void 0 ? _operation$variableDe : [];\n  var coercedVariableValues = (0, _values.getVariableValues)(schema, variableDefinitions, rawVariableValues !== null && rawVariableValues !== void 0 ? rawVariableValues : {}, {\n    maxErrors: 50\n  });\n\n  if (coercedVariableValues.errors) {\n    return coercedVariableValues.errors;\n  }\n\n  return {\n    schema: schema,\n    fragments: fragments,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    operation: operation,\n    variableValues: coercedVariableValues.coerced,\n    fieldResolver: fieldResolver !== null && fieldResolver !== void 0 ? fieldResolver : defaultFieldResolver,\n    typeResolver: typeResolver !== null && typeResolver !== void 0 ? typeResolver : defaultTypeResolver,\n    errors: []\n  };\n}\n/**\n * Implements the \"Evaluating operations\" section of the spec.\n */\n\n\nfunction executeOperation(exeContext, operation, rootValue) {\n  var type = (0, _getOperationRootType.getOperationRootType)(exeContext.schema, operation);\n  var fields = collectFields(exeContext, type, operation.selectionSet, Object.create(null), Object.create(null));\n  var path = undefined; // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n\n  try {\n    var result = operation.operation === 'mutation' ? executeFieldsSerially(exeContext, type, rootValue, path, fields) : executeFields(exeContext, type, rootValue, path, fields);\n\n    if ((0, _isPromise.default)(result)) {\n      return result.then(undefined, function (error) {\n        exeContext.errors.push(error);\n        return Promise.resolve(null);\n      });\n    }\n\n    return result;\n  } catch (error) {\n    exeContext.errors.push(error);\n    return null;\n  }\n}\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"write\" mode.\n */\n\n\nfunction executeFieldsSerially(exeContext, parentType, sourceValue, path, fields) {\n  return (0, _promiseReduce.default)(Object.keys(fields), function (results, responseName) {\n    var fieldNodes = fields[responseName];\n    var fieldPath = (0, _Path.addPath)(path, responseName, parentType.name);\n    var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n\n    if (result === undefined) {\n      return results;\n    }\n\n    if ((0, _isPromise.default)(result)) {\n      return result.then(function (resolvedResult) {\n        results[responseName] = resolvedResult;\n        return results;\n      });\n    }\n\n    results[responseName] = result;\n    return results;\n  }, Object.create(null));\n}\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"read\" mode.\n */\n\n\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  var results = Object.create(null);\n  var containsPromise = false;\n\n  for (var _i4 = 0, _Object$keys2 = Object.keys(fields); _i4 < _Object$keys2.length; _i4++) {\n    var responseName = _Object$keys2[_i4];\n    var fieldNodes = fields[responseName];\n    var fieldPath = (0, _Path.addPath)(path, responseName, parentType.name);\n    var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n\n    if (result !== undefined) {\n      results[responseName] = result;\n\n      if ((0, _isPromise.default)(result)) {\n        containsPromise = true;\n      }\n    }\n  } // If there are no promises, we can just return the object\n\n\n  if (!containsPromise) {\n    return results;\n  } // Otherwise, results is a map from field name to the result of resolving that\n  // field, which is possibly a promise. Return a promise that will return this\n  // same map, but with any promises replaced with the values they resolved to.\n\n\n  return (0, _promiseForObject.default)(results);\n}\n/**\n * Given a selectionSet, adds all of the fields in that selection to\n * the passed in map of fields, and returns it at the end.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field which\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * Object type returned by that field.\n *\n * @internal\n */\n\n\nfunction collectFields(exeContext, runtimeType, selectionSet, fields, visitedFragmentNames) {\n  for (var _i6 = 0, _selectionSet$selecti2 = selectionSet.selections; _i6 < _selectionSet$selecti2.length; _i6++) {\n    var selection = _selectionSet$selecti2[_i6];\n\n    switch (selection.kind) {\n      case _kinds.Kind.FIELD:\n        {\n          if (!shouldIncludeNode(exeContext, selection)) {\n            continue;\n          }\n\n          var name = getFieldEntryKey(selection);\n\n          if (!fields[name]) {\n            fields[name] = [];\n          }\n\n          fields[name].push(selection);\n          break;\n        }\n\n      case _kinds.Kind.INLINE_FRAGMENT:\n        {\n          if (!shouldIncludeNode(exeContext, selection) || !doesFragmentConditionMatch(exeContext, selection, runtimeType)) {\n            continue;\n          }\n\n          collectFields(exeContext, runtimeType, selection.selectionSet, fields, visitedFragmentNames);\n          break;\n        }\n\n      case _kinds.Kind.FRAGMENT_SPREAD:\n        {\n          var fragName = selection.name.value;\n\n          if (visitedFragmentNames[fragName] || !shouldIncludeNode(exeContext, selection)) {\n            continue;\n          }\n\n          visitedFragmentNames[fragName] = true;\n          var fragment = exeContext.fragments[fragName];\n\n          if (!fragment || !doesFragmentConditionMatch(exeContext, fragment, runtimeType)) {\n            continue;\n          }\n\n          collectFields(exeContext, runtimeType, fragment.selectionSet, fields, visitedFragmentNames);\n          break;\n        }\n    }\n  }\n\n  return fields;\n}\n/**\n * Determines if a field should be included based on the @include and @skip\n * directives, where @skip has higher precedence than @include.\n */\n\n\nfunction shouldIncludeNode(exeContext, node) {\n  var skip = (0, _values.getDirectiveValues)(_directives.GraphQLSkipDirective, node, exeContext.variableValues);\n\n  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {\n    return false;\n  }\n\n  var include = (0, _values.getDirectiveValues)(_directives.GraphQLIncludeDirective, node, exeContext.variableValues);\n\n  if ((include === null || include === void 0 ? void 0 : include.if) === false) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\n\nfunction doesFragmentConditionMatch(exeContext, fragment, type) {\n  var typeConditionNode = fragment.typeCondition;\n\n  if (!typeConditionNode) {\n    return true;\n  }\n\n  var conditionalType = (0, _typeFromAST.typeFromAST)(exeContext.schema, typeConditionNode);\n\n  if (conditionalType === type) {\n    return true;\n  }\n\n  if ((0, _definition.isAbstractType)(conditionalType)) {\n    return exeContext.schema.isSubType(conditionalType, type);\n  }\n\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n/**\n * Resolves the field on the given source object. In particular, this\n * figures out the value that the field returns by calling its resolve function,\n * then calls completeValue to complete promises, serialize scalars, or execute\n * the sub-selection-set for objects.\n */\n\n\nfunction resolveField(exeContext, parentType, source, fieldNodes, path) {\n  var _fieldDef$resolve;\n\n  var fieldNode = fieldNodes[0];\n  var fieldName = fieldNode.name.value;\n  var fieldDef = getFieldDef(exeContext.schema, parentType, fieldName);\n\n  if (!fieldDef) {\n    return;\n  }\n\n  var returnType = fieldDef.type;\n  var resolveFn = (_fieldDef$resolve = fieldDef.resolve) !== null && _fieldDef$resolve !== void 0 ? _fieldDef$resolve : exeContext.fieldResolver;\n  var info = buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path); // Get the resolve function, regardless of if its result is normal or abrupt (error).\n\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    var args = (0, _values.getArgumentValues)(fieldDef, fieldNodes[0], exeContext.variableValues); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    var _contextValue = exeContext.contextValue;\n    var result = resolveFn(source, args, _contextValue, info);\n    var completed;\n\n    if ((0, _isPromise.default)(result)) {\n      completed = result.then(function (resolved) {\n        return completeValue(exeContext, returnType, fieldNodes, info, path, resolved);\n      });\n    } else {\n      completed = completeValue(exeContext, returnType, fieldNodes, info, path, result);\n    }\n\n    if ((0, _isPromise.default)(completed)) {\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, function (rawError) {\n        var error = (0, _locatedError.locatedError)(rawError, fieldNodes, (0, _Path.pathToArray)(path));\n        return handleFieldError(error, returnType, exeContext);\n      });\n    }\n\n    return completed;\n  } catch (rawError) {\n    var error = (0, _locatedError.locatedError)(rawError, fieldNodes, (0, _Path.pathToArray)(path));\n    return handleFieldError(error, returnType, exeContext);\n  }\n}\n/**\n * @internal\n */\n\n\nfunction buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldDef.name,\n    fieldNodes: fieldNodes,\n    returnType: fieldDef.type,\n    parentType: parentType,\n    path: path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues\n  };\n}\n\nfunction handleFieldError(error, returnType, exeContext) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if ((0, _definition.isNonNullType)(returnType)) {\n    throw error;\n  } // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n\n\n  exeContext.errors.push(error);\n  return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Field entries\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by evaluating all sub-selections.\n */\n\n\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  } // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n\n\n  if ((0, _definition.isNonNullType)(returnType)) {\n    var completed = completeValue(exeContext, returnType.ofType, fieldNodes, info, path, result);\n\n    if (completed === null) {\n      throw new Error(\"Cannot return null for non-nullable field \".concat(info.parentType.name, \".\").concat(info.fieldName, \".\"));\n    }\n\n    return completed;\n  } // If result value is null or undefined then return null.\n\n\n  if (result == null) {\n    return null;\n  } // If field type is List, complete each item in the list with the inner type\n\n\n  if ((0, _definition.isListType)(returnType)) {\n    return completeListValue(exeContext, returnType, fieldNodes, info, path, result);\n  } // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n\n\n  if ((0, _definition.isLeafType)(returnType)) {\n    return completeLeafValue(returnType, result);\n  } // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n\n\n  if ((0, _definition.isAbstractType)(returnType)) {\n    return completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result);\n  } // If field type is Object, execute and complete all sub-selections.\n  // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if ((0, _definition.isObjectType)(returnType)) {\n    return completeObjectValue(exeContext, returnType, fieldNodes, info, path, result);\n  } // istanbul ignore next (Not reachable. All possible output types have been considered)\n\n\n  false || (0, _invariant.default)(0, 'Cannot complete value of unexpected output type: ' + (0, _inspect.default)(returnType));\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\n\n\nfunction completeListValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n  var itemType = returnType.ofType;\n  var containsPromise = false;\n  var completedResults = (0, _safeArrayFrom.default)(result, function (item, index) {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    var itemPath = (0, _Path.addPath)(path, index, undefined);\n\n    try {\n      var completedItem;\n\n      if ((0, _isPromise.default)(item)) {\n        completedItem = item.then(function (resolved) {\n          return completeValue(exeContext, itemType, fieldNodes, info, itemPath, resolved);\n        });\n      } else {\n        completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item);\n      }\n\n      if ((0, _isPromise.default)(completedItem)) {\n        containsPromise = true; // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n        // to take a second callback for the error case.\n\n        return completedItem.then(undefined, function (rawError) {\n          var error = (0, _locatedError.locatedError)(rawError, fieldNodes, (0, _Path.pathToArray)(itemPath));\n          return handleFieldError(error, itemType, exeContext);\n        });\n      }\n\n      return completedItem;\n    } catch (rawError) {\n      var error = (0, _locatedError.locatedError)(rawError, fieldNodes, (0, _Path.pathToArray)(itemPath));\n      return handleFieldError(error, itemType, exeContext);\n    }\n  });\n\n  if (completedResults == null) {\n    throw new _GraphQLError.GraphQLError(\"Expected Iterable, but did not find one for field \\\"\".concat(info.parentType.name, \".\").concat(info.fieldName, \"\\\".\"));\n  }\n\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\n\n\nfunction completeLeafValue(returnType, result) {\n  var serializedResult = returnType.serialize(result);\n\n  if (serializedResult === undefined) {\n    throw new Error(\"Expected a value of type \\\"\".concat((0, _inspect.default)(returnType), \"\\\" but \") + \"received: \".concat((0, _inspect.default)(result)));\n  }\n\n  return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\n\n\nfunction completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result) {\n  var _returnType$resolveTy;\n\n  var resolveTypeFn = (_returnType$resolveTy = returnType.resolveType) !== null && _returnType$resolveTy !== void 0 ? _returnType$resolveTy : exeContext.typeResolver;\n  var contextValue = exeContext.contextValue;\n  var runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n\n  if ((0, _isPromise.default)(runtimeType)) {\n    return runtimeType.then(function (resolvedRuntimeType) {\n      return completeObjectValue(exeContext, ensureValidRuntimeType(resolvedRuntimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n    });\n  }\n\n  return completeObjectValue(exeContext, ensureValidRuntimeType(runtimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n}\n\nfunction ensureValidRuntimeType(runtimeTypeOrName, exeContext, returnType, fieldNodes, info, result) {\n  if (runtimeTypeOrName == null) {\n    throw new _GraphQLError.GraphQLError(\"Abstract type \\\"\".concat(returnType.name, \"\\\" must resolve to an Object type at runtime for field \\\"\").concat(info.parentType.name, \".\").concat(info.fieldName, \"\\\". Either the \\\"\").concat(returnType.name, \"\\\" type should provide a \\\"resolveType\\\" function or each possible type should provide an \\\"isTypeOf\\\" function.\"), fieldNodes);\n  } // FIXME: temporary workaround until support for passing object types would be removed in v16.0.0\n\n\n  var runtimeTypeName = (0, _definition.isNamedType)(runtimeTypeOrName) ? runtimeTypeOrName.name : runtimeTypeOrName;\n\n  if (typeof runtimeTypeName !== 'string') {\n    throw new _GraphQLError.GraphQLError(\"Abstract type \\\"\".concat(returnType.name, \"\\\" must resolve to an Object type at runtime for field \\\"\").concat(info.parentType.name, \".\").concat(info.fieldName, \"\\\" with \") + \"value \".concat((0, _inspect.default)(result), \", received \\\"\").concat((0, _inspect.default)(runtimeTypeOrName), \"\\\".\"));\n  }\n\n  var runtimeType = exeContext.schema.getType(runtimeTypeName);\n\n  if (runtimeType == null) {\n    throw new _GraphQLError.GraphQLError(\"Abstract type \\\"\".concat(returnType.name, \"\\\" was resolve to a type \\\"\").concat(runtimeTypeName, \"\\\" that does not exist inside schema.\"), fieldNodes);\n  }\n\n  if (!(0, _definition.isObjectType)(runtimeType)) {\n    throw new _GraphQLError.GraphQLError(\"Abstract type \\\"\".concat(returnType.name, \"\\\" was resolve to a non-object type \\\"\").concat(runtimeTypeName, \"\\\".\"), fieldNodes);\n  }\n\n  if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n    throw new _GraphQLError.GraphQLError(\"Runtime Object type \\\"\".concat(runtimeType.name, \"\\\" is not a possible type for \\\"\").concat(returnType.name, \"\\\".\"), fieldNodes);\n  }\n\n  return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\n\n\nfunction completeObjectValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n  if (returnType.isTypeOf) {\n    var isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    if ((0, _isPromise.default)(isTypeOf)) {\n      return isTypeOf.then(function (resolvedIsTypeOf) {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n\n        return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result);\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new _GraphQLError.GraphQLError(\"Expected value of type \\\"\".concat(returnType.name, \"\\\" but got: \").concat((0, _inspect.default)(result), \".\"), fieldNodes);\n}\n\nfunction collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result) {\n  // Collect sub-fields to execute to complete this value.\n  var subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes);\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\n\n\nvar collectSubfields = (0, _memoize.default)(_collectSubfields);\n\nfunction _collectSubfields(exeContext, returnType, fieldNodes) {\n  var subFieldNodes = Object.create(null);\n  var visitedFragmentNames = Object.create(null);\n\n  for (var _i8 = 0; _i8 < fieldNodes.length; _i8++) {\n    var node = fieldNodes[_i8];\n\n    if (node.selectionSet) {\n      subFieldNodes = collectFields(exeContext, returnType, node.selectionSet, subFieldNodes, visitedFragmentNames);\n    }\n  }\n\n  return subFieldNodes;\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\n\n\nvar defaultTypeResolver = function defaultTypeResolver(value, contextValue, info, abstractType) {\n  // First, look for `__typename`.\n  if ((0, _isObjectLike.default)(value) && typeof value.__typename === 'string') {\n    return value.__typename;\n  } // Otherwise, test each possible type.\n\n\n  var possibleTypes = info.schema.getPossibleTypes(abstractType);\n  var promisedIsTypeOfResults = [];\n\n  for (var i = 0; i < possibleTypes.length; i++) {\n    var type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      var isTypeOfResult = type.isTypeOf(value, contextValue, info);\n\n      if ((0, _isPromise.default)(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type.name;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then(function (isTypeOfResults) {\n      for (var _i9 = 0; _i9 < isTypeOfResults.length; _i9++) {\n        if (isTypeOfResults[_i9]) {\n          return possibleTypes[_i9].name;\n        }\n      }\n    });\n  }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\n\n\nexports.defaultTypeResolver = defaultTypeResolver;\n\nvar defaultFieldResolver = function defaultFieldResolver(source, args, contextValue, info) {\n  // ensure source is a value for which property access is acceptable.\n  if ((0, _isObjectLike.default)(source) || typeof source === 'function') {\n    var property = source[info.fieldName];\n\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, contextValue, info);\n    }\n\n    return property;\n  }\n};\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\n\n\nexports.defaultFieldResolver = defaultFieldResolver;\n\nfunction getFieldDef(schema, parentType, fieldName) {\n  if (fieldName === _introspection.SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _introspection.SchemaMetaFieldDef;\n  } else if (fieldName === _introspection.TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return _introspection.TypeMetaFieldDef;\n  } else if (fieldName === _introspection.TypeNameMetaFieldDef.name) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n\n  return parentType.getFields()[fieldName];\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.graphql = graphql;\nexports.graphqlSync = graphqlSync;\n\nvar _isPromise = _interopRequireDefault(require(\"./jsutils/isPromise.js\"));\n\nvar _parser = require(\"./language/parser.js\");\n\nvar _validate = require(\"./validation/validate.js\");\n\nvar _validate2 = require(\"./type/validate.js\");\n\nvar _execute = require(\"./execution/execute.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction graphql(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver) {\n  var _arguments = arguments;\n\n  /* eslint-enable no-redeclare */\n  // Always return a Promise for a consistent API.\n  return new Promise(function (resolve) {\n    return resolve( // Extract arguments from object args if provided.\n    _arguments.length === 1 ? graphqlImpl(argsOrSchema) : graphqlImpl({\n      schema: argsOrSchema,\n      source: source,\n      rootValue: rootValue,\n      contextValue: contextValue,\n      variableValues: variableValues,\n      operationName: operationName,\n      fieldResolver: fieldResolver,\n      typeResolver: typeResolver\n    }));\n  });\n}\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\n\nfunction graphqlSync(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver, typeResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  var result = arguments.length === 1 ? graphqlImpl(argsOrSchema) : graphqlImpl({\n    schema: argsOrSchema,\n    source: source,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    typeResolver: typeResolver\n  }); // Assert that the execution was synchronous.\n\n  if ((0, _isPromise.default)(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction graphqlImpl(args) {\n  var schema = args.schema,\n      source = args.source,\n      rootValue = args.rootValue,\n      contextValue = args.contextValue,\n      variableValues = args.variableValues,\n      operationName = args.operationName,\n      fieldResolver = args.fieldResolver,\n      typeResolver = args.typeResolver; // Validate Schema\n\n  var schemaValidationErrors = (0, _validate2.validateSchema)(schema);\n\n  if (schemaValidationErrors.length > 0) {\n    return {\n      errors: schemaValidationErrors\n    };\n  } // Parse\n\n\n  var document;\n\n  try {\n    document = (0, _parser.parse)(source);\n  } catch (syntaxError) {\n    return {\n      errors: [syntaxError]\n    };\n  } // Validate\n\n\n  var validationErrors = (0, _validate.validate)(schema, document);\n\n  if (validationErrors.length > 0) {\n    return {\n      errors: validationErrors\n    };\n  } // Execute\n\n\n  return (0, _execute.execute)({\n    schema: schema,\n    document: document,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    typeResolver: typeResolver\n  });\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _schema.isSchema;\n  }\n});\nObject.defineProperty(exports, \"assertSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _schema.assertSchema;\n  }\n});\nObject.defineProperty(exports, \"GraphQLSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _schema.GraphQLSchema;\n  }\n});\nObject.defineProperty(exports, \"isType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isType;\n  }\n});\nObject.defineProperty(exports, \"isScalarType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isScalarType;\n  }\n});\nObject.defineProperty(exports, \"isObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isObjectType;\n  }\n});\nObject.defineProperty(exports, \"isInterfaceType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isInterfaceType;\n  }\n});\nObject.defineProperty(exports, \"isUnionType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isUnionType;\n  }\n});\nObject.defineProperty(exports, \"isEnumType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isEnumType;\n  }\n});\nObject.defineProperty(exports, \"isInputObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isInputObjectType;\n  }\n});\nObject.defineProperty(exports, \"isListType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isListType;\n  }\n});\nObject.defineProperty(exports, \"isNonNullType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isNonNullType;\n  }\n});\nObject.defineProperty(exports, \"isInputType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isInputType;\n  }\n});\nObject.defineProperty(exports, \"isOutputType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isOutputType;\n  }\n});\nObject.defineProperty(exports, \"isLeafType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isLeafType;\n  }\n});\nObject.defineProperty(exports, \"isCompositeType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isCompositeType;\n  }\n});\nObject.defineProperty(exports, \"isAbstractType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isAbstractType;\n  }\n});\nObject.defineProperty(exports, \"isWrappingType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isWrappingType;\n  }\n});\nObject.defineProperty(exports, \"isNullableType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isNullableType;\n  }\n});\nObject.defineProperty(exports, \"isNamedType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isNamedType;\n  }\n});\nObject.defineProperty(exports, \"isRequiredArgument\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isRequiredArgument;\n  }\n});\nObject.defineProperty(exports, \"isRequiredInputField\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.isRequiredInputField;\n  }\n});\nObject.defineProperty(exports, \"assertType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertType;\n  }\n});\nObject.defineProperty(exports, \"assertScalarType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertScalarType;\n  }\n});\nObject.defineProperty(exports, \"assertObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertObjectType;\n  }\n});\nObject.defineProperty(exports, \"assertInterfaceType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertInterfaceType;\n  }\n});\nObject.defineProperty(exports, \"assertUnionType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertUnionType;\n  }\n});\nObject.defineProperty(exports, \"assertEnumType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertEnumType;\n  }\n});\nObject.defineProperty(exports, \"assertInputObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertInputObjectType;\n  }\n});\nObject.defineProperty(exports, \"assertListType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertListType;\n  }\n});\nObject.defineProperty(exports, \"assertNonNullType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertNonNullType;\n  }\n});\nObject.defineProperty(exports, \"assertInputType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertInputType;\n  }\n});\nObject.defineProperty(exports, \"assertOutputType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertOutputType;\n  }\n});\nObject.defineProperty(exports, \"assertLeafType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertLeafType;\n  }\n});\nObject.defineProperty(exports, \"assertCompositeType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertCompositeType;\n  }\n});\nObject.defineProperty(exports, \"assertAbstractType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertAbstractType;\n  }\n});\nObject.defineProperty(exports, \"assertWrappingType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertWrappingType;\n  }\n});\nObject.defineProperty(exports, \"assertNullableType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertNullableType;\n  }\n});\nObject.defineProperty(exports, \"assertNamedType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.assertNamedType;\n  }\n});\nObject.defineProperty(exports, \"getNullableType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.getNullableType;\n  }\n});\nObject.defineProperty(exports, \"getNamedType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.getNamedType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLScalarType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLScalarType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLObjectType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLInterfaceType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLInterfaceType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLUnionType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLUnionType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLEnumType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLEnumType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLInputObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLInputObjectType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLList\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLList;\n  }\n});\nObject.defineProperty(exports, \"GraphQLNonNull\", {\n  enumerable: true,\n  get: function get() {\n    return _definition.GraphQLNonNull;\n  }\n});\nObject.defineProperty(exports, \"isDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _directives.isDirective;\n  }\n});\nObject.defineProperty(exports, \"assertDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _directives.assertDirective;\n  }\n});\nObject.defineProperty(exports, \"GraphQLDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _directives.GraphQLDirective;\n  }\n});\nObject.defineProperty(exports, \"isSpecifiedDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _directives.isSpecifiedDirective;\n  }\n});\nObject.defineProperty(exports, \"specifiedDirectives\", {\n  enumerable: true,\n  get: function get() {\n    return _directives.specifiedDirectives;\n  }\n});\nObject.defineProperty(exports, \"GraphQLIncludeDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _directives.GraphQLIncludeDirective;\n  }\n});\nObject.defineProperty(exports, \"GraphQLSkipDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _directives.GraphQLSkipDirective;\n  }\n});\nObject.defineProperty(exports, \"GraphQLDeprecatedDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _directives.GraphQLDeprecatedDirective;\n  }\n});\nObject.defineProperty(exports, \"GraphQLSpecifiedByDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _directives.GraphQLSpecifiedByDirective;\n  }\n});\nObject.defineProperty(exports, \"DEFAULT_DEPRECATION_REASON\", {\n  enumerable: true,\n  get: function get() {\n    return _directives.DEFAULT_DEPRECATION_REASON;\n  }\n});\nObject.defineProperty(exports, \"isSpecifiedScalarType\", {\n  enumerable: true,\n  get: function get() {\n    return _scalars.isSpecifiedScalarType;\n  }\n});\nObject.defineProperty(exports, \"specifiedScalarTypes\", {\n  enumerable: true,\n  get: function get() {\n    return _scalars.specifiedScalarTypes;\n  }\n});\nObject.defineProperty(exports, \"GraphQLInt\", {\n  enumerable: true,\n  get: function get() {\n    return _scalars.GraphQLInt;\n  }\n});\nObject.defineProperty(exports, \"GraphQLFloat\", {\n  enumerable: true,\n  get: function get() {\n    return _scalars.GraphQLFloat;\n  }\n});\nObject.defineProperty(exports, \"GraphQLString\", {\n  enumerable: true,\n  get: function get() {\n    return _scalars.GraphQLString;\n  }\n});\nObject.defineProperty(exports, \"GraphQLBoolean\", {\n  enumerable: true,\n  get: function get() {\n    return _scalars.GraphQLBoolean;\n  }\n});\nObject.defineProperty(exports, \"GraphQLID\", {\n  enumerable: true,\n  get: function get() {\n    return _scalars.GraphQLID;\n  }\n});\nObject.defineProperty(exports, \"isIntrospectionType\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.isIntrospectionType;\n  }\n});\nObject.defineProperty(exports, \"introspectionTypes\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.introspectionTypes;\n  }\n});\nObject.defineProperty(exports, \"__Schema\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__Schema;\n  }\n});\nObject.defineProperty(exports, \"__Directive\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__Directive;\n  }\n});\nObject.defineProperty(exports, \"__DirectiveLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__DirectiveLocation;\n  }\n});\nObject.defineProperty(exports, \"__Type\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__Type;\n  }\n});\nObject.defineProperty(exports, \"__Field\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__Field;\n  }\n});\nObject.defineProperty(exports, \"__InputValue\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__InputValue;\n  }\n});\nObject.defineProperty(exports, \"__EnumValue\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__EnumValue;\n  }\n});\nObject.defineProperty(exports, \"__TypeKind\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.__TypeKind;\n  }\n});\nObject.defineProperty(exports, \"TypeKind\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.TypeKind;\n  }\n});\nObject.defineProperty(exports, \"SchemaMetaFieldDef\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.SchemaMetaFieldDef;\n  }\n});\nObject.defineProperty(exports, \"TypeMetaFieldDef\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.TypeMetaFieldDef;\n  }\n});\nObject.defineProperty(exports, \"TypeNameMetaFieldDef\", {\n  enumerable: true,\n  get: function get() {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n});\nObject.defineProperty(exports, \"validateSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _validate.validateSchema;\n  }\n});\nObject.defineProperty(exports, \"assertValidSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _validate.assertValidSchema;\n  }\n});\n\nvar _schema = require(\"./schema.js\");\n\nvar _definition = require(\"./definition.js\");\n\nvar _directives = require(\"./directives.js\");\n\nvar _scalars = require(\"./scalars.js\");\n\nvar _introspection = require(\"./introspection.js\");\n\nvar _validate = require(\"./validate.js\");\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Source\", {\n  enumerable: true,\n  get: function get() {\n    return _source.Source;\n  }\n});\nObject.defineProperty(exports, \"getLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _location.getLocation;\n  }\n});\nObject.defineProperty(exports, \"printLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _printLocation.printLocation;\n  }\n});\nObject.defineProperty(exports, \"printSourceLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _printLocation.printSourceLocation;\n  }\n});\nObject.defineProperty(exports, \"Kind\", {\n  enumerable: true,\n  get: function get() {\n    return _kinds.Kind;\n  }\n});\nObject.defineProperty(exports, \"TokenKind\", {\n  enumerable: true,\n  get: function get() {\n    return _tokenKind.TokenKind;\n  }\n});\nObject.defineProperty(exports, \"Lexer\", {\n  enumerable: true,\n  get: function get() {\n    return _lexer.Lexer;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function get() {\n    return _parser.parse;\n  }\n});\nObject.defineProperty(exports, \"parseValue\", {\n  enumerable: true,\n  get: function get() {\n    return _parser.parseValue;\n  }\n});\nObject.defineProperty(exports, \"parseType\", {\n  enumerable: true,\n  get: function get() {\n    return _parser.parseType;\n  }\n});\nObject.defineProperty(exports, \"print\", {\n  enumerable: true,\n  get: function get() {\n    return _printer.print;\n  }\n});\nObject.defineProperty(exports, \"visit\", {\n  enumerable: true,\n  get: function get() {\n    return _visitor.visit;\n  }\n});\nObject.defineProperty(exports, \"visitInParallel\", {\n  enumerable: true,\n  get: function get() {\n    return _visitor.visitInParallel;\n  }\n});\nObject.defineProperty(exports, \"getVisitFn\", {\n  enumerable: true,\n  get: function get() {\n    return _visitor.getVisitFn;\n  }\n});\nObject.defineProperty(exports, \"BREAK\", {\n  enumerable: true,\n  get: function get() {\n    return _visitor.BREAK;\n  }\n});\nObject.defineProperty(exports, \"Location\", {\n  enumerable: true,\n  get: function get() {\n    return _ast.Location;\n  }\n});\nObject.defineProperty(exports, \"Token\", {\n  enumerable: true,\n  get: function get() {\n    return _ast.Token;\n  }\n});\nObject.defineProperty(exports, \"isDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isExecutableDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isExecutableDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isSelectionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isSelectionNode;\n  }\n});\nObject.defineProperty(exports, \"isValueNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isValueNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isTypeNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeSystemDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isTypeSystemDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isTypeDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeSystemExtensionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isTypeSystemExtensionNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeExtensionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isTypeExtensionNode;\n  }\n});\nObject.defineProperty(exports, \"DirectiveLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _directiveLocation.DirectiveLocation;\n  }\n});\n\nvar _source = require(\"./source.js\");\n\nvar _location = require(\"./location.js\");\n\nvar _printLocation = require(\"./printLocation.js\");\n\nvar _kinds = require(\"./kinds.js\");\n\nvar _tokenKind = require(\"./tokenKind.js\");\n\nvar _lexer = require(\"./lexer.js\");\n\nvar _parser = require(\"./parser.js\");\n\nvar _printer = require(\"./printer.js\");\n\nvar _visitor = require(\"./visitor.js\");\n\nvar _ast = require(\"./ast.js\");\n\nvar _predicates = require(\"./predicates.js\");\n\nvar _directiveLocation = require(\"./directiveLocation.js\");\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"responsePathAsArray\", {\n  enumerable: true,\n  get: function get() {\n    return _Path.pathToArray;\n  }\n});\nObject.defineProperty(exports, \"execute\", {\n  enumerable: true,\n  get: function get() {\n    return _execute.execute;\n  }\n});\nObject.defineProperty(exports, \"executeSync\", {\n  enumerable: true,\n  get: function get() {\n    return _execute.executeSync;\n  }\n});\nObject.defineProperty(exports, \"defaultFieldResolver\", {\n  enumerable: true,\n  get: function get() {\n    return _execute.defaultFieldResolver;\n  }\n});\nObject.defineProperty(exports, \"defaultTypeResolver\", {\n  enumerable: true,\n  get: function get() {\n    return _execute.defaultTypeResolver;\n  }\n});\nObject.defineProperty(exports, \"getDirectiveValues\", {\n  enumerable: true,\n  get: function get() {\n    return _values.getDirectiveValues;\n  }\n});\n\nvar _Path = require(\"../jsutils/Path.js\");\n\nvar _execute = require(\"./execute.js\");\n\nvar _values = require(\"./values.js\");\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAsyncIterable;\n\nvar _symbols = require(\"../polyfills/symbols.js\");\n\n// eslint-disable-next-line no-redeclare\nfunction isAsyncIterable(maybeAsyncIterable) {\n  return typeof (maybeAsyncIterable === null || maybeAsyncIterable === void 0 ? void 0 : maybeAsyncIterable[_symbols.SYMBOL_ASYNC_ITERATOR]) === 'function';\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mapAsyncIterator;\n\nvar _symbols = require(\"../polyfills/symbols.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterable, callback, rejectCallback) {\n  // $FlowFixMe[prop-missing]\n  var iteratorMethod = iterable[_symbols.SYMBOL_ASYNC_ITERATOR];\n  var iterator = iteratorMethod.call(iterable);\n  var $return;\n  var abruptClose;\n\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject;\n\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n  /* TODO: Flow doesn't support symbols as keys:\n     https://github.com/facebook/flow/issues/3258 */\n\n\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({\n        value: undefined,\n        done: true\n      });\n    },\n    throw: function _throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, _symbols.SYMBOL_ASYNC_ITERATOR, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: false\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.subscribe = subscribe;\nexports.createSourceEventStream = createSourceEventStream;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _isAsyncIterable = _interopRequireDefault(require(\"../jsutils/isAsyncIterable.js\"));\n\nvar _Path = require(\"../jsutils/Path.js\");\n\nvar _GraphQLError = require(\"../error/GraphQLError.js\");\n\nvar _locatedError = require(\"../error/locatedError.js\");\n\nvar _values = require(\"../execution/values.js\");\n\nvar _execute = require(\"../execution/execute.js\");\n\nvar _getOperationRootType = require(\"../utilities/getOperationRootType.js\");\n\nvar _mapAsyncIterator = _interopRequireDefault(require(\"./mapAsyncIterator.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction subscribe(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  return arguments.length === 1 ? subscribeImpl(argsOrSchema) : subscribeImpl({\n    schema: argsOrSchema,\n    document: document,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    operationName: operationName,\n    fieldResolver: fieldResolver,\n    subscribeFieldResolver: subscribeFieldResolver\n  });\n}\n/**\n * This function checks if the error is a GraphQLError. If it is, report it as\n * an ExecutionResult, containing only errors and no data. Otherwise treat the\n * error as a system-class error and re-throw it.\n */\n\n\nfunction reportGraphQLError(error) {\n  if (error instanceof _GraphQLError.GraphQLError) {\n    return {\n      errors: [error]\n    };\n  }\n\n  throw error;\n}\n\nfunction subscribeImpl(args) {\n  var schema = args.schema,\n      document = args.document,\n      rootValue = args.rootValue,\n      contextValue = args.contextValue,\n      variableValues = args.variableValues,\n      operationName = args.operationName,\n      fieldResolver = args.fieldResolver,\n      subscribeFieldResolver = args.subscribeFieldResolver;\n  var sourcePromise = createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, subscribeFieldResolver); // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n\n  var mapSourceToResponse = function mapSourceToResponse(payload) {\n    return (0, _execute.execute)({\n      schema: schema,\n      document: document,\n      rootValue: payload,\n      contextValue: contextValue,\n      variableValues: variableValues,\n      operationName: operationName,\n      fieldResolver: fieldResolver\n    });\n  }; // Resolve the Source Stream, then map every source value to a\n  // ExecutionResult value as described above.\n\n\n  return sourcePromise.then(function (resultOrStream) {\n    return (// Note: Flow can't refine isAsyncIterable, so explicit casts are used.\n      (0, _isAsyncIterable.default)(resultOrStream) ? (0, _mapAsyncIterator.default)(resultOrStream, mapSourceToResponse, reportGraphQLError) : resultOrStream\n    );\n  });\n}\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns a Promise which resolves to either an AsyncIterable (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to the AsyncIterable for the\n * event stream returned by the resolver.\n *\n * A Source Event Stream represents a sequence of events, each of which triggers\n * a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\n\n\nfunction createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // If arguments are missing or incorrectly typed, this is an internal\n  // developer mistake which should throw an early error.\n  (0, _execute.assertValidExecutionArguments)(schema, document, variableValues);\n  return new Promise(function (resolve) {\n    // If a valid context cannot be created due to incorrect arguments,\n    // this will throw an error.\n    var exeContext = (0, _execute.buildExecutionContext)(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n    resolve( // Return early errors if execution context failed.\n    Array.isArray(exeContext) ? {\n      errors: exeContext\n    } : executeSubscription(exeContext));\n  }).catch(reportGraphQLError);\n}\n\nfunction executeSubscription(exeContext) {\n  var schema = exeContext.schema,\n      operation = exeContext.operation,\n      variableValues = exeContext.variableValues,\n      rootValue = exeContext.rootValue;\n  var type = (0, _getOperationRootType.getOperationRootType)(schema, operation);\n  var fields = (0, _execute.collectFields)(exeContext, type, operation.selectionSet, Object.create(null), Object.create(null));\n  var responseNames = Object.keys(fields);\n  var responseName = responseNames[0];\n  var fieldNodes = fields[responseName];\n  var fieldNode = fieldNodes[0];\n  var fieldName = fieldNode.name.value;\n  var fieldDef = (0, _execute.getFieldDef)(schema, type, fieldName);\n\n  if (!fieldDef) {\n    throw new _GraphQLError.GraphQLError(\"The subscription field \\\"\".concat(fieldName, \"\\\" is not defined.\"), fieldNodes);\n  }\n\n  var path = (0, _Path.addPath)(undefined, responseName, type.name);\n  var info = (0, _execute.buildResolveInfo)(exeContext, fieldDef, fieldNodes, type, path); // Coerce to Promise for easier error handling and consistent return type.\n\n  return new Promise(function (resolveResult) {\n    var _fieldDef$subscribe;\n\n    // Implements the \"ResolveFieldEventStream\" algorithm from GraphQL specification.\n    // It differs from \"ResolveFieldValue\" due to providing a different `resolveFn`.\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    var args = (0, _values.getArgumentValues)(fieldDef, fieldNodes[0], variableValues); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    var contextValue = exeContext.contextValue; // Call the `subscribe()` resolver or the default resolver to produce an\n    // AsyncIterable yielding raw payloads.\n\n    var resolveFn = (_fieldDef$subscribe = fieldDef.subscribe) !== null && _fieldDef$subscribe !== void 0 ? _fieldDef$subscribe : exeContext.fieldResolver;\n    resolveResult(resolveFn(rootValue, args, contextValue, info));\n  }).then(function (eventStream) {\n    if (eventStream instanceof Error) {\n      throw (0, _locatedError.locatedError)(eventStream, fieldNodes, (0, _Path.pathToArray)(path));\n    } // Assert field returned an event stream, otherwise yield an error.\n\n\n    if (!(0, _isAsyncIterable.default)(eventStream)) {\n      throw new Error('Subscription field must return Async Iterable. ' + \"Received: \".concat((0, _inspect.default)(eventStream), \".\"));\n    }\n\n    return eventStream;\n  }, function (error) {\n    throw (0, _locatedError.locatedError)(error, fieldNodes, (0, _Path.pathToArray)(path));\n  });\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"subscribe\", {\n  enumerable: true,\n  get: function get() {\n    return _subscribe.subscribe;\n  }\n});\nObject.defineProperty(exports, \"createSourceEventStream\", {\n  enumerable: true,\n  get: function get() {\n    return _subscribe.createSourceEventStream;\n  }\n});\n\nvar _subscribe = require(\"./subscribe.js\");\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoDeprecatedCustomRule = NoDeprecatedCustomRule;\n\nvar _invariant = _interopRequireDefault(require(\"../../../jsutils/invariant.js\"));\n\nvar _GraphQLError = require(\"../../../error/GraphQLError.js\");\n\nvar _definition = require(\"../../../type/definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nfunction NoDeprecatedCustomRule(context) {\n  return {\n    Field: function Field(node) {\n      var fieldDef = context.getFieldDef();\n      var deprecationReason = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        var parentType = context.getParentType();\n        parentType != null || (0, _invariant.default)(0);\n        context.reportError(new _GraphQLError.GraphQLError(\"The field \".concat(parentType.name, \".\").concat(fieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n      }\n    },\n    Argument: function Argument(node) {\n      var argDef = context.getArgument();\n      var deprecationReason = argDef === null || argDef === void 0 ? void 0 : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        var directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(new _GraphQLError.GraphQLError(\"Directive \\\"@\".concat(directiveDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        } else {\n          var parentType = context.getParentType();\n          var fieldDef = context.getFieldDef();\n          parentType != null && fieldDef != null || (0, _invariant.default)(0);\n          context.reportError(new _GraphQLError.GraphQLError(\"Field \\\"\".concat(parentType.name, \".\").concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var inputObjectDef = (0, _definition.getNamedType)(context.getParentInputType());\n\n      if ((0, _definition.isInputObjectType)(inputObjectDef)) {\n        var inputFieldDef = inputObjectDef.getFields()[node.name.value]; // flowlint-next-line unnecessary-optional-chain:off\n\n        var deprecationReason = inputFieldDef === null || inputFieldDef === void 0 ? void 0 : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(new _GraphQLError.GraphQLError(\"The input field \".concat(inputObjectDef.name, \".\").concat(inputFieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumValueDef = context.getEnumValue();\n      var deprecationReason = enumValueDef === null || enumValueDef === void 0 ? void 0 : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        var enumTypeDef = (0, _definition.getNamedType)(context.getInputType());\n        enumTypeDef != null || (0, _invariant.default)(0);\n        context.reportError(new _GraphQLError.GraphQLError(\"The enum value \\\"\".concat(enumTypeDef.name, \".\").concat(enumValueDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoSchemaIntrospectionCustomRule = NoSchemaIntrospectionCustomRule;\n\nvar _GraphQLError = require(\"../../../error/GraphQLError.js\");\n\nvar _definition = require(\"../../../type/definition.js\");\n\nvar _introspection = require(\"../../../type/introspection.js\");\n\n/**\n * Prohibit introspection queries\n *\n * A GraphQL document is only valid if all fields selected are not fields that\n * return an introspection type.\n *\n * Note: This rule is optional and is not part of the Validation section of the\n * GraphQL Specification. This rule effectively disables introspection, which\n * does not reflect best practices and should only be done if absolutely necessary.\n */\nfunction NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field: function Field(node) {\n      var type = (0, _definition.getNamedType)(context.getType());\n\n      if (type && (0, _introspection.isIntrospectionType)(type)) {\n        context.reportError(new _GraphQLError.GraphQLError(\"GraphQL introspection has been disabled, but the requested query contained the field \\\"\".concat(node.name.value, \"\\\".\"), node));\n      }\n    }\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function get() {\n    return _validate.validate;\n  }\n});\nObject.defineProperty(exports, \"ValidationContext\", {\n  enumerable: true,\n  get: function get() {\n    return _ValidationContext.ValidationContext;\n  }\n});\nObject.defineProperty(exports, \"specifiedRules\", {\n  enumerable: true,\n  get: function get() {\n    return _specifiedRules.specifiedRules;\n  }\n});\nObject.defineProperty(exports, \"ExecutableDefinitionsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _ExecutableDefinitionsRule.ExecutableDefinitionsRule;\n  }\n});\nObject.defineProperty(exports, \"FieldsOnCorrectTypeRule\", {\n  enumerable: true,\n  get: function get() {\n    return _FieldsOnCorrectTypeRule.FieldsOnCorrectTypeRule;\n  }\n});\nObject.defineProperty(exports, \"FragmentsOnCompositeTypesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _FragmentsOnCompositeTypesRule.FragmentsOnCompositeTypesRule;\n  }\n});\nObject.defineProperty(exports, \"KnownArgumentNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _KnownArgumentNamesRule.KnownArgumentNamesRule;\n  }\n});\nObject.defineProperty(exports, \"KnownDirectivesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _KnownDirectivesRule.KnownDirectivesRule;\n  }\n});\nObject.defineProperty(exports, \"KnownFragmentNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _KnownFragmentNamesRule.KnownFragmentNamesRule;\n  }\n});\nObject.defineProperty(exports, \"KnownTypeNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _KnownTypeNamesRule.KnownTypeNamesRule;\n  }\n});\nObject.defineProperty(exports, \"LoneAnonymousOperationRule\", {\n  enumerable: true,\n  get: function get() {\n    return _LoneAnonymousOperationRule.LoneAnonymousOperationRule;\n  }\n});\nObject.defineProperty(exports, \"NoFragmentCyclesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _NoFragmentCyclesRule.NoFragmentCyclesRule;\n  }\n});\nObject.defineProperty(exports, \"NoUndefinedVariablesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _NoUndefinedVariablesRule.NoUndefinedVariablesRule;\n  }\n});\nObject.defineProperty(exports, \"NoUnusedFragmentsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _NoUnusedFragmentsRule.NoUnusedFragmentsRule;\n  }\n});\nObject.defineProperty(exports, \"NoUnusedVariablesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _NoUnusedVariablesRule.NoUnusedVariablesRule;\n  }\n});\nObject.defineProperty(exports, \"OverlappingFieldsCanBeMergedRule\", {\n  enumerable: true,\n  get: function get() {\n    return _OverlappingFieldsCanBeMergedRule.OverlappingFieldsCanBeMergedRule;\n  }\n});\nObject.defineProperty(exports, \"PossibleFragmentSpreadsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _PossibleFragmentSpreadsRule.PossibleFragmentSpreadsRule;\n  }\n});\nObject.defineProperty(exports, \"ProvidedRequiredArgumentsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsRule;\n  }\n});\nObject.defineProperty(exports, \"ScalarLeafsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _ScalarLeafsRule.ScalarLeafsRule;\n  }\n});\nObject.defineProperty(exports, \"SingleFieldSubscriptionsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _SingleFieldSubscriptionsRule.SingleFieldSubscriptionsRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueArgumentNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _UniqueArgumentNamesRule.UniqueArgumentNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueDirectivesPerLocationRule\", {\n  enumerable: true,\n  get: function get() {\n    return _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueFragmentNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _UniqueFragmentNamesRule.UniqueFragmentNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueInputFieldNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueOperationNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _UniqueOperationNamesRule.UniqueOperationNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueVariableNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _UniqueVariableNamesRule.UniqueVariableNamesRule;\n  }\n});\nObject.defineProperty(exports, \"ValuesOfCorrectTypeRule\", {\n  enumerable: true,\n  get: function get() {\n    return _ValuesOfCorrectTypeRule.ValuesOfCorrectTypeRule;\n  }\n});\nObject.defineProperty(exports, \"VariablesAreInputTypesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _VariablesAreInputTypesRule.VariablesAreInputTypesRule;\n  }\n});\nObject.defineProperty(exports, \"VariablesInAllowedPositionRule\", {\n  enumerable: true,\n  get: function get() {\n    return _VariablesInAllowedPositionRule.VariablesInAllowedPositionRule;\n  }\n});\nObject.defineProperty(exports, \"LoneSchemaDefinitionRule\", {\n  enumerable: true,\n  get: function get() {\n    return _LoneSchemaDefinitionRule.LoneSchemaDefinitionRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueOperationTypesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _UniqueOperationTypesRule.UniqueOperationTypesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueTypeNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _UniqueTypeNamesRule.UniqueTypeNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueEnumValueNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _UniqueEnumValueNamesRule.UniqueEnumValueNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueFieldDefinitionNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _UniqueFieldDefinitionNamesRule.UniqueFieldDefinitionNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueDirectiveNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _UniqueDirectiveNamesRule.UniqueDirectiveNamesRule;\n  }\n});\nObject.defineProperty(exports, \"PossibleTypeExtensionsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _PossibleTypeExtensionsRule.PossibleTypeExtensionsRule;\n  }\n});\nObject.defineProperty(exports, \"NoDeprecatedCustomRule\", {\n  enumerable: true,\n  get: function get() {\n    return _NoDeprecatedCustomRule.NoDeprecatedCustomRule;\n  }\n});\nObject.defineProperty(exports, \"NoSchemaIntrospectionCustomRule\", {\n  enumerable: true,\n  get: function get() {\n    return _NoSchemaIntrospectionCustomRule.NoSchemaIntrospectionCustomRule;\n  }\n});\n\nvar _validate = require(\"./validate.js\");\n\nvar _ValidationContext = require(\"./ValidationContext.js\");\n\nvar _specifiedRules = require(\"./specifiedRules.js\");\n\nvar _ExecutableDefinitionsRule = require(\"./rules/ExecutableDefinitionsRule.js\");\n\nvar _FieldsOnCorrectTypeRule = require(\"./rules/FieldsOnCorrectTypeRule.js\");\n\nvar _FragmentsOnCompositeTypesRule = require(\"./rules/FragmentsOnCompositeTypesRule.js\");\n\nvar _KnownArgumentNamesRule = require(\"./rules/KnownArgumentNamesRule.js\");\n\nvar _KnownDirectivesRule = require(\"./rules/KnownDirectivesRule.js\");\n\nvar _KnownFragmentNamesRule = require(\"./rules/KnownFragmentNamesRule.js\");\n\nvar _KnownTypeNamesRule = require(\"./rules/KnownTypeNamesRule.js\");\n\nvar _LoneAnonymousOperationRule = require(\"./rules/LoneAnonymousOperationRule.js\");\n\nvar _NoFragmentCyclesRule = require(\"./rules/NoFragmentCyclesRule.js\");\n\nvar _NoUndefinedVariablesRule = require(\"./rules/NoUndefinedVariablesRule.js\");\n\nvar _NoUnusedFragmentsRule = require(\"./rules/NoUnusedFragmentsRule.js\");\n\nvar _NoUnusedVariablesRule = require(\"./rules/NoUnusedVariablesRule.js\");\n\nvar _OverlappingFieldsCanBeMergedRule = require(\"./rules/OverlappingFieldsCanBeMergedRule.js\");\n\nvar _PossibleFragmentSpreadsRule = require(\"./rules/PossibleFragmentSpreadsRule.js\");\n\nvar _ProvidedRequiredArgumentsRule = require(\"./rules/ProvidedRequiredArgumentsRule.js\");\n\nvar _ScalarLeafsRule = require(\"./rules/ScalarLeafsRule.js\");\n\nvar _SingleFieldSubscriptionsRule = require(\"./rules/SingleFieldSubscriptionsRule.js\");\n\nvar _UniqueArgumentNamesRule = require(\"./rules/UniqueArgumentNamesRule.js\");\n\nvar _UniqueDirectivesPerLocationRule = require(\"./rules/UniqueDirectivesPerLocationRule.js\");\n\nvar _UniqueFragmentNamesRule = require(\"./rules/UniqueFragmentNamesRule.js\");\n\nvar _UniqueInputFieldNamesRule = require(\"./rules/UniqueInputFieldNamesRule.js\");\n\nvar _UniqueOperationNamesRule = require(\"./rules/UniqueOperationNamesRule.js\");\n\nvar _UniqueVariableNamesRule = require(\"./rules/UniqueVariableNamesRule.js\");\n\nvar _ValuesOfCorrectTypeRule = require(\"./rules/ValuesOfCorrectTypeRule.js\");\n\nvar _VariablesAreInputTypesRule = require(\"./rules/VariablesAreInputTypesRule.js\");\n\nvar _VariablesInAllowedPositionRule = require(\"./rules/VariablesInAllowedPositionRule.js\");\n\nvar _LoneSchemaDefinitionRule = require(\"./rules/LoneSchemaDefinitionRule.js\");\n\nvar _UniqueOperationTypesRule = require(\"./rules/UniqueOperationTypesRule.js\");\n\nvar _UniqueTypeNamesRule = require(\"./rules/UniqueTypeNamesRule.js\");\n\nvar _UniqueEnumValueNamesRule = require(\"./rules/UniqueEnumValueNamesRule.js\");\n\nvar _UniqueFieldDefinitionNamesRule = require(\"./rules/UniqueFieldDefinitionNamesRule.js\");\n\nvar _UniqueDirectiveNamesRule = require(\"./rules/UniqueDirectiveNamesRule.js\");\n\nvar _PossibleTypeExtensionsRule = require(\"./rules/PossibleTypeExtensionsRule.js\");\n\nvar _NoDeprecatedCustomRule = require(\"./rules/custom/NoDeprecatedCustomRule.js\");\n\nvar _NoSchemaIntrospectionCustomRule = require(\"./rules/custom/NoSchemaIntrospectionCustomRule.js\");\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatError = formatError;\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n */\nfunction formatError(error) {\n  var _error$message;\n\n  error || (0, _devAssert.default)(0, 'Received null or undefined error.');\n  var message = (_error$message = error.message) !== null && _error$message !== void 0 ? _error$message : 'An unknown error occurred.';\n  var locations = error.locations;\n  var path = error.path;\n  var extensions = error.extensions;\n  return extensions && Object.keys(extensions).length > 0 ? {\n    message: message,\n    locations: locations,\n    path: path,\n    extensions: extensions\n  } : {\n    message: message,\n    locations: locations,\n    path: path\n  };\n}\n/**\n * @see https://github.com/graphql/graphql-spec/blob/master/spec/Section%207%20--%20Response.md#errors\n */\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"GraphQLError\", {\n  enumerable: true,\n  get: function get() {\n    return _GraphQLError.GraphQLError;\n  }\n});\nObject.defineProperty(exports, \"printError\", {\n  enumerable: true,\n  get: function get() {\n    return _GraphQLError.printError;\n  }\n});\nObject.defineProperty(exports, \"syntaxError\", {\n  enumerable: true,\n  get: function get() {\n    return _syntaxError.syntaxError;\n  }\n});\nObject.defineProperty(exports, \"locatedError\", {\n  enumerable: true,\n  get: function get() {\n    return _locatedError.locatedError;\n  }\n});\nObject.defineProperty(exports, \"formatError\", {\n  enumerable: true,\n  get: function get() {\n    return _formatError.formatError;\n  }\n});\n\nvar _GraphQLError = require(\"./GraphQLError.js\");\n\nvar _syntaxError = require(\"./syntaxError.js\");\n\nvar _locatedError = require(\"./locatedError.js\");\n\nvar _formatError = require(\"./formatError.js\");\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIntrospectionQuery = getIntrospectionQuery;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction getIntrospectionQuery(options) {\n  var optionsWithDefault = _objectSpread({\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false\n  }, options);\n\n  var descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  var specifiedByUrl = optionsWithDefault.specifiedByUrl ? 'specifiedByUrl' : '';\n  var directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable ? 'isRepeatable' : '';\n  var schemaDescription = optionsWithDefault.schemaDescription ? descriptions : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  return \"\\n    query IntrospectionQuery {\\n      __schema {\\n        \".concat(schemaDescription, \"\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          \").concat(descriptions, \"\\n          \").concat(directiveIsRepeatable, \"\\n          locations\\n          args\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      \").concat(descriptions, \"\\n      \").concat(specifiedByUrl, \"\\n      fields(includeDeprecated: true) {\\n        name\\n        \").concat(descriptions, \"\\n        args\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields\").concat(inputDeprecation('(includeDeprecated: true)'), \" {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        \").concat(descriptions, \"\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      \").concat(descriptions, \"\\n      type { ...TypeRef }\\n      defaultValue\\n      \").concat(inputDeprecation('isDeprecated'), \"\\n      \").concat(inputDeprecation('deprecationReason'), \"\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \");\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOperationAST = getOperationAST;\n\nvar _kinds = require(\"../language/kinds.js\");\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nfunction getOperationAST(documentAST, operationName) {\n  var operation = null;\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var definition = _documentAST$definiti2[_i2];\n\n    if (definition.kind === _kinds.Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (((_definition$name = definition.name) === null || _definition$name === void 0 ? void 0 : _definition$name.value) === operationName) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.introspectionFromSchema = introspectionFromSchema;\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _parser = require(\"../language/parser.js\");\n\nvar _execute = require(\"../execution/execute.js\");\n\nvar _getIntrospectionQuery = require(\"./getIntrospectionQuery.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nfunction introspectionFromSchema(schema, options) {\n  var optionsWithDefaults = _objectSpread({\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true\n  }, options);\n\n  var document = (0, _parser.parse)((0, _getIntrospectionQuery.getIntrospectionQuery)(optionsWithDefaults));\n  var result = (0, _execute.executeSync)({\n    schema: schema,\n    document: document\n  });\n  !result.errors && result.data || (0, _invariant.default)(0);\n  return result.data;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildClientSchema = buildClientSchema;\n\nvar _objectValues = _interopRequireDefault(require(\"../polyfills/objectValues.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert.js\"));\n\nvar _keyValMap = _interopRequireDefault(require(\"../jsutils/keyValMap.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"../jsutils/isObjectLike.js\"));\n\nvar _parser = require(\"../language/parser.js\");\n\nvar _schema = require(\"../type/schema.js\");\n\nvar _directives = require(\"../type/directives.js\");\n\nvar _scalars = require(\"../type/scalars.js\");\n\nvar _introspection = require(\"../type/introspection.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nvar _valueFromAST = require(\"./valueFromAST.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\nfunction buildClientSchema(introspection, options) {\n  (0, _isObjectLike.default)(introspection) && (0, _isObjectLike.default)(introspection.__schema) || (0, _devAssert.default)(0, \"Invalid or incomplete introspection result. Ensure that you are passing \\\"data\\\" property of introspection response and no \\\"errors\\\" was returned alongside: \".concat((0, _inspect.default)(introspection), \".\")); // Get the schema from the introspection result.\n\n  var schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  var typeMap = (0, _keyValMap.default)(schemaIntrospection.types, function (typeIntrospection) {\n    return typeIntrospection.name;\n  }, function (typeIntrospection) {\n    return buildType(typeIntrospection);\n  }); // Include standard types only if they are used.\n\n  for (var _i2 = 0, _ref2 = [].concat(_scalars.specifiedScalarTypes, _introspection.introspectionTypes); _i2 < _ref2.length; _i2++) {\n    var stdType = _ref2[_i2];\n\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n\n  var queryType = schemaIntrospection.queryType ? getObjectType(schemaIntrospection.queryType) : null;\n  var mutationType = schemaIntrospection.mutationType ? getObjectType(schemaIntrospection.mutationType) : null;\n  var subscriptionType = schemaIntrospection.subscriptionType ? getObjectType(schemaIntrospection.subscriptionType) : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  var directives = schemaIntrospection.directives ? schemaIntrospection.directives.map(buildDirective) : []; // Then produce and return a Schema with these types.\n\n  return new _schema.GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: (0, _objectValues.default)(typeMap),\n    directives: directives,\n    assumeValid: options === null || options === void 0 ? void 0 : options.assumeValid\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === _introspection.TypeKind.LIST) {\n      var itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return new _definition.GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === _introspection.TypeKind.NON_NULL) {\n      var nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      var nullableType = getType(nullableRef);\n      return new _definition.GraphQLNonNull((0, _definition.assertNullableType)(nullableType));\n    }\n\n    return getNamedType(typeRef);\n  }\n\n  function getNamedType(typeRef) {\n    var typeName = typeRef.name;\n\n    if (!typeName) {\n      throw new Error(\"Unknown type reference: \".concat((0, _inspect.default)(typeRef), \".\"));\n    }\n\n    var type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\"Invalid or incomplete schema, unknown type: \".concat(typeName, \". Ensure that a full introspection query is used in order to build a client schema.\"));\n    }\n\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    return (0, _definition.assertObjectType)(getNamedType(typeRef));\n  }\n\n  function getInterfaceType(typeRef) {\n    return (0, _definition.assertInterfaceType)(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n\n  function buildType(type) {\n    if (type != null && type.name != null && type.kind != null) {\n      switch (type.kind) {\n        case _introspection.TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case _introspection.TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case _introspection.TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case _introspection.TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case _introspection.TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case _introspection.TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    var typeStr = (0, _inspect.default)(type);\n    throw new Error(\"Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: \".concat(typeStr, \".\"));\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new _definition.GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByUrl: scalarIntrospection.specifiedByUrl\n    });\n  }\n\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (implementingIntrospection.interfaces === null && implementingIntrospection.kind === _introspection.TypeKind.INTERFACE) {\n      return [];\n    }\n\n    if (!implementingIntrospection.interfaces) {\n      var implementingIntrospectionStr = (0, _inspect.default)(implementingIntrospection);\n      throw new Error(\"Introspection result missing interfaces: \".concat(implementingIntrospectionStr, \".\"));\n    }\n\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new _definition.GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: function interfaces() {\n        return buildImplementationsList(objectIntrospection);\n      },\n      fields: function fields() {\n        return buildFieldDefMap(objectIntrospection);\n      }\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new _definition.GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: function interfaces() {\n        return buildImplementationsList(interfaceIntrospection);\n      },\n      fields: function fields() {\n        return buildFieldDefMap(interfaceIntrospection);\n      }\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      var unionIntrospectionStr = (0, _inspect.default)(unionIntrospection);\n      throw new Error(\"Introspection result missing possibleTypes: \".concat(unionIntrospectionStr, \".\"));\n    }\n\n    return new _definition.GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: function types() {\n        return unionIntrospection.possibleTypes.map(getObjectType);\n      }\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      var enumIntrospectionStr = (0, _inspect.default)(enumIntrospection);\n      throw new Error(\"Introspection result missing enumValues: \".concat(enumIntrospectionStr, \".\"));\n    }\n\n    return new _definition.GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: (0, _keyValMap.default)(enumIntrospection.enumValues, function (valueIntrospection) {\n        return valueIntrospection.name;\n      }, function (valueIntrospection) {\n        return {\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason\n        };\n      })\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      var inputObjectIntrospectionStr = (0, _inspect.default)(inputObjectIntrospection);\n      throw new Error(\"Introspection result missing inputFields: \".concat(inputObjectIntrospectionStr, \".\"));\n    }\n\n    return new _definition.GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: function fields() {\n        return buildInputValueDefMap(inputObjectIntrospection.inputFields);\n      }\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(\"Introspection result missing fields: \".concat((0, _inspect.default)(typeIntrospection), \".\"));\n    }\n\n    return (0, _keyValMap.default)(typeIntrospection.fields, function (fieldIntrospection) {\n      return fieldIntrospection.name;\n    }, buildField);\n  }\n\n  function buildField(fieldIntrospection) {\n    var type = getType(fieldIntrospection.type);\n\n    if (!(0, _definition.isOutputType)(type)) {\n      var typeStr = (0, _inspect.default)(type);\n      throw new Error(\"Introspection must provide output type for fields, but received: \".concat(typeStr, \".\"));\n    }\n\n    if (!fieldIntrospection.args) {\n      var fieldIntrospectionStr = (0, _inspect.default)(fieldIntrospection);\n      throw new Error(\"Introspection result missing field args: \".concat(fieldIntrospectionStr, \".\"));\n    }\n\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type: type,\n      args: buildInputValueDefMap(fieldIntrospection.args)\n    };\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return (0, _keyValMap.default)(inputValueIntrospections, function (inputValue) {\n      return inputValue.name;\n    }, buildInputValue);\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    var type = getType(inputValueIntrospection.type);\n\n    if (!(0, _definition.isInputType)(type)) {\n      var typeStr = (0, _inspect.default)(type);\n      throw new Error(\"Introspection must provide input type for arguments, but received: \".concat(typeStr, \".\"));\n    }\n\n    var defaultValue = inputValueIntrospection.defaultValue != null ? (0, _valueFromAST.valueFromAST)((0, _parser.parseValue)(inputValueIntrospection.defaultValue), type) : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type: type,\n      defaultValue: defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      var directiveIntrospectionStr = (0, _inspect.default)(directiveIntrospection);\n      throw new Error(\"Introspection result missing directive args: \".concat(directiveIntrospectionStr, \".\"));\n    }\n\n    if (!directiveIntrospection.locations) {\n      var _directiveIntrospectionStr = (0, _inspect.default)(directiveIntrospection);\n\n      throw new Error(\"Introspection result missing directive locations: \".concat(_directiveIntrospectionStr, \".\"));\n    }\n\n    return new _directives.GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args)\n    });\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extendSchema = extendSchema;\nexports.extendSchemaImpl = extendSchemaImpl;\nexports.getDescription = getDescription;\n\nvar _objectValues = _interopRequireDefault(require(\"../polyfills/objectValues.js\"));\n\nvar _keyMap = _interopRequireDefault(require(\"../jsutils/keyMap.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _mapValue = _interopRequireDefault(require(\"../jsutils/mapValue.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert.js\"));\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _tokenKind = require(\"../language/tokenKind.js\");\n\nvar _blockString = require(\"../language/blockString.js\");\n\nvar _predicates = require(\"../language/predicates.js\");\n\nvar _validate = require(\"../validation/validate.js\");\n\nvar _values = require(\"../execution/values.js\");\n\nvar _schema = require(\"../type/schema.js\");\n\nvar _scalars = require(\"../type/scalars.js\");\n\nvar _introspection = require(\"../type/introspection.js\");\n\nvar _directives = require(\"../type/directives.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nvar _valueFromAST = require(\"./valueFromAST.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n *\n * Accepts options as a third argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nfunction extendSchema(schema, documentAST, options) {\n  (0, _schema.assertSchema)(schema);\n  documentAST != null && documentAST.kind === _kinds.Kind.DOCUMENT || (0, _devAssert.default)(0, 'Must provide valid Document AST.');\n\n  if ((options === null || options === void 0 ? void 0 : options.assumeValid) !== true && (options === null || options === void 0 ? void 0 : options.assumeValidSDL) !== true) {\n    (0, _validate.assertValidSDLExtension)(documentAST, schema);\n  }\n\n  var schemaConfig = schema.toConfig();\n  var extendedConfig = extendSchemaImpl(schemaConfig, documentAST, options);\n  return schemaConfig === extendedConfig ? schema : new _schema.GraphQLSchema(extendedConfig);\n}\n/**\n * @internal\n */\n\n\nfunction extendSchemaImpl(schemaConfig, documentAST, options) {\n  var _schemaDef, _schemaDef$descriptio, _schemaDef2, _options$assumeValid;\n\n  // Collect the type definitions and extensions found in the document.\n  var typeDefs = [];\n  var typeExtensionsMap = Object.create(null); // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n\n  var directiveDefs = [];\n  var schemaDef; // Schema extensions are collected which may add additional operation types.\n\n  var schemaExtensions = [];\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var def = _documentAST$definiti2[_i2];\n\n    if (def.kind === _kinds.Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (def.kind === _kinds.Kind.SCHEMA_EXTENSION) {\n      schemaExtensions.push(def);\n    } else if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      typeDefs.push(def);\n    } else if ((0, _predicates.isTypeExtensionNode)(def)) {\n      var extendedTypeName = def.name.value;\n      var existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n      typeExtensionsMap[extendedTypeName] = existingTypeExtensions ? existingTypeExtensions.concat([def]) : [def];\n    } else if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  } // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n\n\n  if (Object.keys(typeExtensionsMap).length === 0 && typeDefs.length === 0 && directiveDefs.length === 0 && schemaExtensions.length === 0 && schemaDef == null) {\n    return schemaConfig;\n  }\n\n  var typeMap = Object.create(null);\n\n  for (var _i4 = 0, _schemaConfig$types2 = schemaConfig.types; _i4 < _schemaConfig$types2.length; _i4++) {\n    var existingType = _schemaConfig$types2[_i4];\n    typeMap[existingType.name] = extendNamedType(existingType);\n  }\n\n  for (var _i6 = 0; _i6 < typeDefs.length; _i6++) {\n    var _stdTypeMap$name;\n\n    var typeNode = typeDefs[_i6];\n    var name = typeNode.name.value;\n    typeMap[name] = (_stdTypeMap$name = stdTypeMap[name]) !== null && _stdTypeMap$name !== void 0 ? _stdTypeMap$name : buildType(typeNode);\n  }\n\n  var operationTypes = _objectSpread(_objectSpread({\n    // Get the extended root operation types.\n    query: schemaConfig.query && replaceNamedType(schemaConfig.query),\n    mutation: schemaConfig.mutation && replaceNamedType(schemaConfig.mutation),\n    subscription: schemaConfig.subscription && replaceNamedType(schemaConfig.subscription)\n  }, schemaDef && getOperationTypes([schemaDef])), getOperationTypes(schemaExtensions)); // Then produce and return a Schema config with these types.\n\n\n  return _objectSpread(_objectSpread({\n    description: (_schemaDef = schemaDef) === null || _schemaDef === void 0 ? void 0 : (_schemaDef$descriptio = _schemaDef.description) === null || _schemaDef$descriptio === void 0 ? void 0 : _schemaDef$descriptio.value\n  }, operationTypes), {}, {\n    types: (0, _objectValues.default)(typeMap),\n    directives: [].concat(schemaConfig.directives.map(replaceDirective), directiveDefs.map(buildDirective)),\n    extensions: undefined,\n    astNode: (_schemaDef2 = schemaDef) !== null && _schemaDef2 !== void 0 ? _schemaDef2 : schemaConfig.astNode,\n    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExtensions),\n    assumeValid: (_options$assumeValid = options === null || options === void 0 ? void 0 : options.assumeValid) !== null && _options$assumeValid !== void 0 ? _options$assumeValid : false\n  }); // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function replaceType(type) {\n    if ((0, _definition.isListType)(type)) {\n      // $FlowFixMe[incompatible-return]\n      return new _definition.GraphQLList(replaceType(type.ofType));\n    }\n\n    if ((0, _definition.isNonNullType)(type)) {\n      // $FlowFixMe[incompatible-return]\n      return new _definition.GraphQLNonNull(replaceType(type.ofType));\n    }\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    // Note: While this could make early assertions to get the correctly\n    // typed values, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    return typeMap[type.name];\n  }\n\n  function replaceDirective(directive) {\n    var config = directive.toConfig();\n    return new _directives.GraphQLDirective(_objectSpread(_objectSpread({}, config), {}, {\n      args: (0, _mapValue.default)(config.args, extendArg)\n    }));\n  }\n\n  function extendNamedType(type) {\n    if ((0, _introspection.isIntrospectionType)(type) || (0, _scalars.isSpecifiedScalarType)(type)) {\n      // Builtin types are not extended.\n      return type;\n    }\n\n    if ((0, _definition.isScalarType)(type)) {\n      return extendScalarType(type);\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      return extendObjectType(type);\n    }\n\n    if ((0, _definition.isInterfaceType)(type)) {\n      return extendInterfaceType(type);\n    }\n\n    if ((0, _definition.isUnionType)(type)) {\n      return extendUnionType(type);\n    }\n\n    if ((0, _definition.isEnumType)(type)) {\n      return extendEnumType(type);\n    } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n    if ((0, _definition.isInputObjectType)(type)) {\n      return extendInputObjectType(type);\n    } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n    false || (0, _invariant.default)(0, 'Unexpected type: ' + (0, _inspect.default)(type));\n  }\n\n  function extendInputObjectType(type) {\n    var _typeExtensionsMap$co;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$co = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co !== void 0 ? _typeExtensionsMap$co : [];\n    return new _definition.GraphQLInputObjectType(_objectSpread(_objectSpread({}, config), {}, {\n      fields: function fields() {\n        return _objectSpread(_objectSpread({}, (0, _mapValue.default)(config.fields, function (field) {\n          return _objectSpread(_objectSpread({}, field), {}, {\n            type: replaceType(field.type)\n          });\n        })), buildInputFieldMap(extensions));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendEnumType(type) {\n    var _typeExtensionsMap$ty;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$ty = typeExtensionsMap[type.name]) !== null && _typeExtensionsMap$ty !== void 0 ? _typeExtensionsMap$ty : [];\n    return new _definition.GraphQLEnumType(_objectSpread(_objectSpread({}, config), {}, {\n      values: _objectSpread(_objectSpread({}, config.values), buildEnumValueMap(extensions)),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendScalarType(type) {\n    var _typeExtensionsMap$co2;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$co2 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co2 !== void 0 ? _typeExtensionsMap$co2 : [];\n    var specifiedByUrl = config.specifiedByUrl;\n\n    for (var _i8 = 0; _i8 < extensions.length; _i8++) {\n      var _getSpecifiedByUrl;\n\n      var extensionNode = extensions[_i8];\n      specifiedByUrl = (_getSpecifiedByUrl = getSpecifiedByUrl(extensionNode)) !== null && _getSpecifiedByUrl !== void 0 ? _getSpecifiedByUrl : specifiedByUrl;\n    }\n\n    return new _definition.GraphQLScalarType(_objectSpread(_objectSpread({}, config), {}, {\n      specifiedByUrl: specifiedByUrl,\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendObjectType(type) {\n    var _typeExtensionsMap$co3;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$co3 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co3 !== void 0 ? _typeExtensionsMap$co3 : [];\n    return new _definition.GraphQLObjectType(_objectSpread(_objectSpread({}, config), {}, {\n      interfaces: function interfaces() {\n        return [].concat(type.getInterfaces().map(replaceNamedType), buildInterfaces(extensions));\n      },\n      fields: function fields() {\n        return _objectSpread(_objectSpread({}, (0, _mapValue.default)(config.fields, extendField)), buildFieldMap(extensions));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendInterfaceType(type) {\n    var _typeExtensionsMap$co4;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$co4 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co4 !== void 0 ? _typeExtensionsMap$co4 : [];\n    return new _definition.GraphQLInterfaceType(_objectSpread(_objectSpread({}, config), {}, {\n      interfaces: function interfaces() {\n        return [].concat(type.getInterfaces().map(replaceNamedType), buildInterfaces(extensions));\n      },\n      fields: function fields() {\n        return _objectSpread(_objectSpread({}, (0, _mapValue.default)(config.fields, extendField)), buildFieldMap(extensions));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendUnionType(type) {\n    var _typeExtensionsMap$co5;\n\n    var config = type.toConfig();\n    var extensions = (_typeExtensionsMap$co5 = typeExtensionsMap[config.name]) !== null && _typeExtensionsMap$co5 !== void 0 ? _typeExtensionsMap$co5 : [];\n    return new _definition.GraphQLUnionType(_objectSpread(_objectSpread({}, config), {}, {\n      types: function types() {\n        return [].concat(type.getTypes().map(replaceNamedType), buildUnionTypes(extensions));\n      },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions)\n    }));\n  }\n\n  function extendField(field) {\n    return _objectSpread(_objectSpread({}, field), {}, {\n      type: replaceType(field.type),\n      // $FlowFixMe[incompatible-call]\n      args: (0, _mapValue.default)(field.args, extendArg)\n    });\n  }\n\n  function extendArg(arg) {\n    return _objectSpread(_objectSpread({}, arg), {}, {\n      type: replaceType(arg.type)\n    });\n  }\n\n  function getOperationTypes(nodes) {\n    var opTypes = {};\n\n    for (var _i10 = 0; _i10 < nodes.length; _i10++) {\n      var _node$operationTypes;\n\n      var node = nodes[_i10];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var operationTypesNodes = (_node$operationTypes = node.operationTypes) !== null && _node$operationTypes !== void 0 ? _node$operationTypes : [];\n\n      for (var _i12 = 0; _i12 < operationTypesNodes.length; _i12++) {\n        var operationType = operationTypesNodes[_i12];\n        opTypes[operationType.operation] = getNamedType(operationType.type);\n      }\n    } // Note: While this could make early assertions to get the correctly\n    // typed values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n\n\n    return opTypes;\n  }\n\n  function getNamedType(node) {\n    var _stdTypeMap$name2;\n\n    var name = node.name.value;\n    var type = (_stdTypeMap$name2 = stdTypeMap[name]) !== null && _stdTypeMap$name2 !== void 0 ? _stdTypeMap$name2 : typeMap[name];\n\n    if (type === undefined) {\n      throw new Error(\"Unknown type: \\\"\".concat(name, \"\\\".\"));\n    }\n\n    return type;\n  }\n\n  function getWrappedType(node) {\n    if (node.kind === _kinds.Kind.LIST_TYPE) {\n      return new _definition.GraphQLList(getWrappedType(node.type));\n    }\n\n    if (node.kind === _kinds.Kind.NON_NULL_TYPE) {\n      return new _definition.GraphQLNonNull(getWrappedType(node.type));\n    }\n\n    return getNamedType(node);\n  }\n\n  function buildDirective(node) {\n    var locations = node.locations.map(function (_ref) {\n      var value = _ref.value;\n      return value;\n    });\n    return new _directives.GraphQLDirective({\n      name: node.name.value,\n      description: getDescription(node, options),\n      locations: locations,\n      isRepeatable: node.repeatable,\n      args: buildArgumentMap(node.arguments),\n      astNode: node\n    });\n  }\n\n  function buildFieldMap(nodes) {\n    var fieldConfigMap = Object.create(null);\n\n    for (var _i14 = 0; _i14 < nodes.length; _i14++) {\n      var _node$fields;\n\n      var node = nodes[_i14];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var nodeFields = (_node$fields = node.fields) !== null && _node$fields !== void 0 ? _node$fields : [];\n\n      for (var _i16 = 0; _i16 < nodeFields.length; _i16++) {\n        var field = nodeFields[_i16];\n        fieldConfigMap[field.name.value] = {\n          // Note: While this could make assertions to get the correctly typed\n          // value, that would throw immediately while type system validation\n          // with validateSchema() will produce more actionable results.\n          type: getWrappedType(field.type),\n          description: getDescription(field, options),\n          args: buildArgumentMap(field.arguments),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field\n        };\n      }\n    }\n\n    return fieldConfigMap;\n  }\n\n  function buildArgumentMap(args) {\n    // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n    var argsNodes = args !== null && args !== void 0 ? args : [];\n    var argConfigMap = Object.create(null);\n\n    for (var _i18 = 0; _i18 < argsNodes.length; _i18++) {\n      var arg = argsNodes[_i18];\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      var type = getWrappedType(arg.type);\n      argConfigMap[arg.name.value] = {\n        type: type,\n        description: getDescription(arg, options),\n        defaultValue: (0, _valueFromAST.valueFromAST)(arg.defaultValue, type),\n        deprecationReason: getDeprecationReason(arg),\n        astNode: arg\n      };\n    }\n\n    return argConfigMap;\n  }\n\n  function buildInputFieldMap(nodes) {\n    var inputFieldMap = Object.create(null);\n\n    for (var _i20 = 0; _i20 < nodes.length; _i20++) {\n      var _node$fields2;\n\n      var node = nodes[_i20];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var fieldsNodes = (_node$fields2 = node.fields) !== null && _node$fields2 !== void 0 ? _node$fields2 : [];\n\n      for (var _i22 = 0; _i22 < fieldsNodes.length; _i22++) {\n        var field = fieldsNodes[_i22];\n        // Note: While this could make assertions to get the correctly typed\n        // value, that would throw immediately while type system validation\n        // with validateSchema() will produce more actionable results.\n        var type = getWrappedType(field.type);\n        inputFieldMap[field.name.value] = {\n          type: type,\n          description: getDescription(field, options),\n          defaultValue: (0, _valueFromAST.valueFromAST)(field.defaultValue, type),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field\n        };\n      }\n    }\n\n    return inputFieldMap;\n  }\n\n  function buildEnumValueMap(nodes) {\n    var enumValueMap = Object.create(null);\n\n    for (var _i24 = 0; _i24 < nodes.length; _i24++) {\n      var _node$values;\n\n      var node = nodes[_i24];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var valuesNodes = (_node$values = node.values) !== null && _node$values !== void 0 ? _node$values : [];\n\n      for (var _i26 = 0; _i26 < valuesNodes.length; _i26++) {\n        var value = valuesNodes[_i26];\n        enumValueMap[value.name.value] = {\n          description: getDescription(value, options),\n          deprecationReason: getDeprecationReason(value),\n          astNode: value\n        };\n      }\n    }\n\n    return enumValueMap;\n  }\n\n  function buildInterfaces(nodes) {\n    var interfaces = [];\n\n    for (var _i28 = 0; _i28 < nodes.length; _i28++) {\n      var _node$interfaces;\n\n      var node = nodes[_i28];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var interfacesNodes = (_node$interfaces = node.interfaces) !== null && _node$interfaces !== void 0 ? _node$interfaces : [];\n\n      for (var _i30 = 0; _i30 < interfacesNodes.length; _i30++) {\n        var type = interfacesNodes[_i30];\n        // Note: While this could make assertions to get the correctly typed\n        // values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable\n        // results.\n        interfaces.push(getNamedType(type));\n      }\n    }\n\n    return interfaces;\n  }\n\n  function buildUnionTypes(nodes) {\n    var types = [];\n\n    for (var _i32 = 0; _i32 < nodes.length; _i32++) {\n      var _node$types;\n\n      var node = nodes[_i32];\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      var typeNodes = (_node$types = node.types) !== null && _node$types !== void 0 ? _node$types : [];\n\n      for (var _i34 = 0; _i34 < typeNodes.length; _i34++) {\n        var type = typeNodes[_i34];\n        // Note: While this could make assertions to get the correctly typed\n        // values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable\n        // results.\n        types.push(getNamedType(type));\n      }\n    }\n\n    return types;\n  }\n\n  function buildType(astNode) {\n    var _typeExtensionsMap$na;\n\n    var name = astNode.name.value;\n    var description = getDescription(astNode, options);\n    var extensionNodes = (_typeExtensionsMap$na = typeExtensionsMap[name]) !== null && _typeExtensionsMap$na !== void 0 ? _typeExtensionsMap$na : [];\n\n    switch (astNode.kind) {\n      case _kinds.Kind.OBJECT_TYPE_DEFINITION:\n        {\n          var extensionASTNodes = extensionNodes;\n          var allNodes = [astNode].concat(extensionASTNodes);\n          return new _definition.GraphQLObjectType({\n            name: name,\n            description: description,\n            interfaces: function interfaces() {\n              return buildInterfaces(allNodes);\n            },\n            fields: function fields() {\n              return buildFieldMap(allNodes);\n            },\n            astNode: astNode,\n            extensionASTNodes: extensionASTNodes\n          });\n        }\n\n      case _kinds.Kind.INTERFACE_TYPE_DEFINITION:\n        {\n          var _extensionASTNodes = extensionNodes;\n\n          var _allNodes = [astNode].concat(_extensionASTNodes);\n\n          return new _definition.GraphQLInterfaceType({\n            name: name,\n            description: description,\n            interfaces: function interfaces() {\n              return buildInterfaces(_allNodes);\n            },\n            fields: function fields() {\n              return buildFieldMap(_allNodes);\n            },\n            astNode: astNode,\n            extensionASTNodes: _extensionASTNodes\n          });\n        }\n\n      case _kinds.Kind.ENUM_TYPE_DEFINITION:\n        {\n          var _extensionASTNodes2 = extensionNodes;\n\n          var _allNodes2 = [astNode].concat(_extensionASTNodes2);\n\n          return new _definition.GraphQLEnumType({\n            name: name,\n            description: description,\n            values: buildEnumValueMap(_allNodes2),\n            astNode: astNode,\n            extensionASTNodes: _extensionASTNodes2\n          });\n        }\n\n      case _kinds.Kind.UNION_TYPE_DEFINITION:\n        {\n          var _extensionASTNodes3 = extensionNodes;\n\n          var _allNodes3 = [astNode].concat(_extensionASTNodes3);\n\n          return new _definition.GraphQLUnionType({\n            name: name,\n            description: description,\n            types: function types() {\n              return buildUnionTypes(_allNodes3);\n            },\n            astNode: astNode,\n            extensionASTNodes: _extensionASTNodes3\n          });\n        }\n\n      case _kinds.Kind.SCALAR_TYPE_DEFINITION:\n        {\n          var _extensionASTNodes4 = extensionNodes;\n          return new _definition.GraphQLScalarType({\n            name: name,\n            description: description,\n            specifiedByUrl: getSpecifiedByUrl(astNode),\n            astNode: astNode,\n            extensionASTNodes: _extensionASTNodes4\n          });\n        }\n\n      case _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        {\n          var _extensionASTNodes5 = extensionNodes;\n\n          var _allNodes4 = [astNode].concat(_extensionASTNodes5);\n\n          return new _definition.GraphQLInputObjectType({\n            name: name,\n            description: description,\n            fields: function fields() {\n              return buildInputFieldMap(_allNodes4);\n            },\n            astNode: astNode,\n            extensionASTNodes: _extensionASTNodes5\n          });\n        }\n    } // istanbul ignore next (Not reachable. All possible type definition nodes have been considered)\n\n\n    false || (0, _invariant.default)(0, 'Unexpected type definition node: ' + (0, _inspect.default)(astNode));\n  }\n}\n\nvar stdTypeMap = (0, _keyMap.default)(_scalars.specifiedScalarTypes.concat(_introspection.introspectionTypes), function (type) {\n  return type.name;\n});\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\n\nfunction getDeprecationReason(node) {\n  var deprecated = (0, _values.getDirectiveValues)(_directives.GraphQLDeprecatedDirective, node);\n  return deprecated === null || deprecated === void 0 ? void 0 : deprecated.reason;\n}\n/**\n * Given a scalar node, returns the string value for the specifiedByUrl.\n */\n\n\nfunction getSpecifiedByUrl(node) {\n  var specifiedBy = (0, _values.getDirectiveValues)(_directives.GraphQLSpecifiedByDirective, node);\n  return specifiedBy === null || specifiedBy === void 0 ? void 0 : specifiedBy.url;\n}\n/**\n * Given an ast node, returns its string description.\n * @deprecated: provided to ease adoption and will be removed in v16.\n *\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\n\n\nfunction getDescription(node, options) {\n  if (node.description) {\n    return node.description.value;\n  }\n\n  if ((options === null || options === void 0 ? void 0 : options.commentDescriptions) === true) {\n    var rawValue = getLeadingCommentBlock(node);\n\n    if (rawValue !== undefined) {\n      return (0, _blockString.dedentBlockStringValue)('\\n' + rawValue);\n    }\n  }\n}\n\nfunction getLeadingCommentBlock(node) {\n  var loc = node.loc;\n\n  if (!loc) {\n    return;\n  }\n\n  var comments = [];\n  var token = loc.startToken.prev;\n\n  while (token != null && token.kind === _tokenKind.TokenKind.COMMENT && token.next && token.prev && token.line + 1 === token.next.line && token.line !== token.prev.line) {\n    var value = String(token.value);\n    comments.push(value);\n    token = token.prev;\n  }\n\n  return comments.length > 0 ? comments.reverse().join('\\n') : undefined;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildASTSchema = buildASTSchema;\nexports.buildSchema = buildSchema;\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert.js\"));\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _parser = require(\"../language/parser.js\");\n\nvar _validate = require(\"../validation/validate.js\");\n\nvar _schema = require(\"../type/schema.js\");\n\nvar _directives = require(\"../type/directives.js\");\n\nvar _extendSchema = require(\"./extendSchema.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query\n * and Mutation.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n *\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nfunction buildASTSchema(documentAST, options) {\n  documentAST != null && documentAST.kind === _kinds.Kind.DOCUMENT || (0, _devAssert.default)(0, 'Must provide valid Document AST.');\n\n  if ((options === null || options === void 0 ? void 0 : options.assumeValid) !== true && (options === null || options === void 0 ? void 0 : options.assumeValidSDL) !== true) {\n    (0, _validate.assertValidSDL)(documentAST);\n  }\n\n  var emptySchemaConfig = {\n    description: undefined,\n    types: [],\n    directives: [],\n    extensions: undefined,\n    extensionASTNodes: [],\n    assumeValid: false\n  };\n  var config = (0, _extendSchema.extendSchemaImpl)(emptySchemaConfig, documentAST, options);\n\n  if (config.astNode == null) {\n    for (var _i2 = 0, _config$types2 = config.types; _i2 < _config$types2.length; _i2++) {\n      var type = _config$types2[_i2];\n\n      switch (type.name) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        case 'Query':\n          config.query = type;\n          break;\n\n        case 'Mutation':\n          config.mutation = type;\n          break;\n\n        case 'Subscription':\n          config.subscription = type;\n          break;\n      }\n    }\n  }\n\n  var directives = config.directives; // If specified directives were not explicitly declared, add them.\n\n  var _loop = function _loop(_i4) {\n    var stdDirective = _directives.specifiedDirectives[_i4];\n\n    if (directives.every(function (directive) {\n      return directive.name !== stdDirective.name;\n    })) {\n      directives.push(stdDirective);\n    }\n  };\n\n  for (var _i4 = 0; _i4 < _directives.specifiedDirectives.length; _i4++) {\n    _loop(_i4);\n  }\n\n  return new _schema.GraphQLSchema(config);\n}\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\n\n\nfunction buildSchema(source, options) {\n  var document = (0, _parser.parse)(source, {\n    noLocation: options === null || options === void 0 ? void 0 : options.noLocation,\n    allowLegacySDLEmptyFields: options === null || options === void 0 ? void 0 : options.allowLegacySDLEmptyFields,\n    allowLegacySDLImplementsInterfaces: options === null || options === void 0 ? void 0 : options.allowLegacySDLImplementsInterfaces,\n    experimentalFragmentVariables: options === null || options === void 0 ? void 0 : options.experimentalFragmentVariables\n  });\n  return buildASTSchema(document, {\n    commentDescriptions: options === null || options === void 0 ? void 0 : options.commentDescriptions,\n    assumeValidSDL: options === null || options === void 0 ? void 0 : options.assumeValidSDL,\n    assumeValid: options === null || options === void 0 ? void 0 : options.assumeValid\n  });\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lexicographicSortSchema = lexicographicSortSchema;\n\nvar _objectValues = _interopRequireDefault(require(\"../polyfills/objectValues.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _keyValMap = _interopRequireDefault(require(\"../jsutils/keyValMap.js\"));\n\nvar _naturalCompare = _interopRequireDefault(require(\"../jsutils/naturalCompare.js\"));\n\nvar _schema = require(\"../type/schema.js\");\n\nvar _directives = require(\"../type/directives.js\");\n\nvar _introspection = require(\"../type/introspection.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Sort GraphQLSchema.\n *\n * This function returns a sorted copy of the given GraphQLSchema.\n */\nfunction lexicographicSortSchema(schema) {\n  var schemaConfig = schema.toConfig();\n  var typeMap = (0, _keyValMap.default)(sortByName(schemaConfig.types), function (type) {\n    return type.name;\n  }, sortNamedType);\n  return new _schema.GraphQLSchema(_objectSpread(_objectSpread({}, schemaConfig), {}, {\n    types: (0, _objectValues.default)(typeMap),\n    directives: sortByName(schemaConfig.directives).map(sortDirective),\n    query: replaceMaybeType(schemaConfig.query),\n    mutation: replaceMaybeType(schemaConfig.mutation),\n    subscription: replaceMaybeType(schemaConfig.subscription)\n  }));\n\n  function replaceType(type) {\n    if ((0, _definition.isListType)(type)) {\n      // $FlowFixMe[incompatible-return]\n      return new _definition.GraphQLList(replaceType(type.ofType));\n    } else if ((0, _definition.isNonNullType)(type)) {\n      // $FlowFixMe[incompatible-return]\n      return new _definition.GraphQLNonNull(replaceType(type.ofType));\n    }\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    return typeMap[type.name];\n  }\n\n  function replaceMaybeType(maybeType) {\n    return maybeType && replaceNamedType(maybeType);\n  }\n\n  function sortDirective(directive) {\n    var config = directive.toConfig();\n    return new _directives.GraphQLDirective(_objectSpread(_objectSpread({}, config), {}, {\n      locations: sortBy(config.locations, function (x) {\n        return x;\n      }),\n      args: sortArgs(config.args)\n    }));\n  }\n\n  function sortArgs(args) {\n    return sortObjMap(args, function (arg) {\n      return _objectSpread(_objectSpread({}, arg), {}, {\n        type: replaceType(arg.type)\n      });\n    });\n  }\n\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, function (field) {\n      return _objectSpread(_objectSpread({}, field), {}, {\n        type: replaceType(field.type),\n        args: sortArgs(field.args)\n      });\n    });\n  }\n\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, function (field) {\n      return _objectSpread(_objectSpread({}, field), {}, {\n        type: replaceType(field.type)\n      });\n    });\n  }\n\n  function sortTypes(arr) {\n    return sortByName(arr).map(replaceNamedType);\n  }\n\n  function sortNamedType(type) {\n    if ((0, _definition.isScalarType)(type) || (0, _introspection.isIntrospectionType)(type)) {\n      return type;\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      var config = type.toConfig();\n      return new _definition.GraphQLObjectType(_objectSpread(_objectSpread({}, config), {}, {\n        interfaces: function interfaces() {\n          return sortTypes(config.interfaces);\n        },\n        fields: function fields() {\n          return sortFields(config.fields);\n        }\n      }));\n    }\n\n    if ((0, _definition.isInterfaceType)(type)) {\n      var _config = type.toConfig();\n\n      return new _definition.GraphQLInterfaceType(_objectSpread(_objectSpread({}, _config), {}, {\n        interfaces: function interfaces() {\n          return sortTypes(_config.interfaces);\n        },\n        fields: function fields() {\n          return sortFields(_config.fields);\n        }\n      }));\n    }\n\n    if ((0, _definition.isUnionType)(type)) {\n      var _config2 = type.toConfig();\n\n      return new _definition.GraphQLUnionType(_objectSpread(_objectSpread({}, _config2), {}, {\n        types: function types() {\n          return sortTypes(_config2.types);\n        }\n      }));\n    }\n\n    if ((0, _definition.isEnumType)(type)) {\n      var _config3 = type.toConfig();\n\n      return new _definition.GraphQLEnumType(_objectSpread(_objectSpread({}, _config3), {}, {\n        values: sortObjMap(_config3.values)\n      }));\n    } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n    if ((0, _definition.isInputObjectType)(type)) {\n      var _config4 = type.toConfig();\n\n      return new _definition.GraphQLInputObjectType(_objectSpread(_objectSpread({}, _config4), {}, {\n        fields: function fields() {\n          return sortInputFields(_config4.fields);\n        }\n      }));\n    } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n    false || (0, _invariant.default)(0, 'Unexpected type: ' + (0, _inspect.default)(type));\n  }\n}\n\nfunction sortObjMap(map, sortValueFn) {\n  var sortedMap = Object.create(null);\n  var sortedKeys = sortBy(Object.keys(map), function (x) {\n    return x;\n  });\n\n  for (var _i2 = 0; _i2 < sortedKeys.length; _i2++) {\n    var key = sortedKeys[_i2];\n    var value = map[key];\n    sortedMap[key] = sortValueFn ? sortValueFn(value) : value;\n  }\n\n  return sortedMap;\n}\n\nfunction sortByName(array) {\n  return sortBy(array, function (obj) {\n    return obj.name;\n  });\n}\n\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort(function (obj1, obj2) {\n    var key1 = mapToKey(obj1);\n    var key2 = mapToKey(obj2);\n    return (0, _naturalCompare.default)(key1, key2);\n  });\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printSchema = printSchema;\nexports.printIntrospectionSchema = printIntrospectionSchema;\nexports.printType = printType;\n\nvar _objectValues = _interopRequireDefault(require(\"../polyfills/objectValues.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _printer = require(\"../language/printer.js\");\n\nvar _blockString = require(\"../language/blockString.js\");\n\nvar _introspection = require(\"../type/introspection.js\");\n\nvar _scalars = require(\"../type/scalars.js\");\n\nvar _directives = require(\"../type/directives.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nvar _astFromValue = require(\"./astFromValue.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nfunction printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !(0, _directives.isSpecifiedDirective)(n);\n  }, isDefinedType, options);\n}\n\nfunction printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, _directives.isSpecifiedDirective, _introspection.isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !(0, _scalars.isSpecifiedScalarType)(type) && !(0, _introspection.isIntrospectionType)(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var types = (0, _objectValues.default)(schema.getTypeMap()).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n  var queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(\"  query: \".concat(queryType.name));\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(\"  mutation: \".concat(mutationType.name));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(\"  subscription: \".concat(subscriptionType.name));\n  }\n\n  return printDescription({}, schema) + \"schema {\\n\".concat(operationTypes.join('\\n'), \"\\n}\");\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\n\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printType(type, options) {\n  if ((0, _definition.isScalarType)(type)) {\n    return printScalar(type, options);\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return printObject(type, options);\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return printInterface(type, options);\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return printUnion(type, options);\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return printEnum(type, options);\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return printInputObject(type, options);\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || (0, _invariant.default)(0, 'Unexpected type: ' + (0, _inspect.default)(type));\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + \"scalar \".concat(type.name) + printSpecifiedByUrl(type);\n}\n\nfunction printImplementedInterfaces(type) {\n  var interfaces = type.getInterfaces();\n  return interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n}\n\nfunction printObject(type, options) {\n  return printDescription(options, type) + \"type \".concat(type.name) + printImplementedInterfaces(type) + printFields(options, type);\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + \"interface \".concat(type.name) + printImplementedInterfaces(type) + printFields(options, type);\n}\n\nfunction printUnion(type, options) {\n  var types = type.getTypes();\n  var possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(options, type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type, options) {\n  var values = type.getValues().map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value.deprecationReason);\n  });\n  return printDescription(options, type) + \"enum \".concat(type.name) + printBlock(values);\n}\n\nfunction printInputObject(type, options) {\n  var fields = (0, _objectValues.default)(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  });\n  return printDescription(options, type) + \"input \".concat(type.name) + printBlock(fields);\n}\n\nfunction printFields(options, type) {\n  var fields = (0, _objectValues.default)(type.getFields()).map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f.deprecationReason);\n  });\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var defaultAST = (0, _astFromValue.astFromValue)(arg.defaultValue, arg.type);\n  var argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += \" = \".concat((0, _printer.print)(defaultAST));\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + (directive.isRepeatable ? ' repeatable' : '') + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  var reasonAST = (0, _astFromValue.astFromValue)(reason, _scalars.GraphQLString);\n\n  if (reasonAST && reason !== _directives.DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated(reason: ' + (0, _printer.print)(reasonAST) + ')';\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByUrl(scalar) {\n  if (scalar.specifiedByUrl == null) {\n    return '';\n  }\n\n  var url = scalar.specifiedByUrl;\n  var urlAST = (0, _astFromValue.astFromValue)(url, _scalars.GraphQLString);\n  urlAST || (0, _invariant.default)(0, 'Unexpected null value returned from `astFromValue` for specifiedByUrl');\n  return ' @specifiedBy(url: ' + (0, _printer.print)(urlAST) + ')';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var description = def.description;\n\n  if (description == null) {\n    return '';\n  }\n\n  if ((options === null || options === void 0 ? void 0 : options.commentDescriptions) === true) {\n    return printDescriptionWithComments(description, indentation, firstInBlock);\n  }\n\n  var preferMultipleLines = description.length > 70;\n  var blockString = (0, _blockString.printBlockString)(description, '', preferMultipleLines);\n  var prefix = indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n\nfunction printDescriptionWithComments(description, indentation, firstInBlock) {\n  var prefix = indentation && !firstInBlock ? '\\n' : '';\n  var comment = description.split('\\n').map(function (line) {\n    return indentation + (line !== '' ? '# ' + line : '#');\n  }).join('\\n');\n  return prefix + comment + '\\n';\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concatAST = concatAST;\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nfunction concatAST(documents) {\n  var definitions = [];\n\n  for (var _i2 = 0; _i2 < documents.length; _i2++) {\n    var doc = documents[_i2];\n    definitions = definitions.concat(doc.definitions);\n  }\n\n  return {\n    kind: 'Document',\n    definitions: definitions\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.separateOperations = separateOperations;\n\nvar _kinds = require(\"../language/kinds.js\");\n\nvar _visitor = require(\"../language/visitor.js\");\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\nfunction separateOperations(documentAST) {\n  var operations = [];\n  var depGraph = Object.create(null); // Populate metadata and build a dependency graph.\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var definitionNode = _documentAST$definiti2[_i2];\n\n    switch (definitionNode.kind) {\n      case _kinds.Kind.OPERATION_DEFINITION:\n        operations.push(definitionNode);\n        break;\n\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        depGraph[definitionNode.name.value] = collectDependencies(definitionNode.selectionSet);\n        break;\n    }\n  } // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n\n\n  var separatedDocumentASTs = Object.create(null);\n\n  var _loop = function _loop(_i4) {\n    var operation = operations[_i4];\n    var dependencies = new Set();\n\n    for (var _i6 = 0, _collectDependencies2 = collectDependencies(operation.selectionSet); _i6 < _collectDependencies2.length; _i6++) {\n      var fragmentName = _collectDependencies2[_i6];\n      collectTransitiveDependencies(dependencies, depGraph, fragmentName);\n    } // Provides the empty string for anonymous operations.\n\n\n    var operationName = operation.name ? operation.name.value : ''; // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n\n    separatedDocumentASTs[operationName] = {\n      kind: _kinds.Kind.DOCUMENT,\n      definitions: documentAST.definitions.filter(function (node) {\n        return node === operation || node.kind === _kinds.Kind.FRAGMENT_DEFINITION && dependencies.has(node.name.value);\n      })\n    };\n  };\n\n  for (var _i4 = 0; _i4 < operations.length; _i4++) {\n    _loop(_i4);\n  }\n\n  return separatedDocumentASTs;\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  if (!collected.has(fromName)) {\n    collected.add(fromName);\n    var immediateDeps = depGraph[fromName];\n\n    if (immediateDeps !== undefined) {\n      for (var _i8 = 0; _i8 < immediateDeps.length; _i8++) {\n        var toName = immediateDeps[_i8];\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    }\n  }\n}\n\nfunction collectDependencies(selectionSet) {\n  var dependencies = [];\n  (0, _visitor.visit)(selectionSet, {\n    FragmentSpread: function FragmentSpread(node) {\n      dependencies.push(node.name.value);\n    }\n  });\n  return dependencies;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stripIgnoredCharacters = stripIgnoredCharacters;\n\nvar _source = require(\"../language/source.js\");\n\nvar _tokenKind = require(\"../language/tokenKind.js\");\n\nvar _lexer = require(\"../language/lexer.js\");\n\nvar _blockString = require(\"../language/blockString.js\");\n\n/**\n * Strips characters that are not significant to the validity or execution\n * of a GraphQL document:\n *   - UnicodeBOM\n *   - WhiteSpace\n *   - LineTerminator\n *   - Comment\n *   - Comma\n *   - BlockString indentation\n *\n * Note: It is required to have a delimiter character between neighboring\n * non-punctuator tokens and this function always uses single space as delimiter.\n *\n * It is guaranteed that both input and output documents if parsed would result\n * in the exact same AST except for nodes location.\n *\n * Warning: It is guaranteed that this function will always produce stable results.\n * However, it's not guaranteed that it will stay the same between different\n * releases due to bugfixes or changes in the GraphQL specification.\n *\n * Query example:\n *\n * query SomeQuery($foo: String!, $bar: String) {\n *   someField(foo: $foo, bar: $bar) {\n *     a\n *     b {\n *       c\n *       d\n *     }\n *   }\n * }\n *\n * Becomes:\n *\n * query SomeQuery($foo:String!$bar:String){someField(foo:$foo bar:$bar){a b{c d}}}\n *\n * SDL example:\n *\n * \"\"\"\n * Type description\n * \"\"\"\n * type Foo {\n *   \"\"\"\n *   Field description\n *   \"\"\"\n *   bar: String\n * }\n *\n * Becomes:\n *\n * \"\"\"Type description\"\"\" type Foo{\"\"\"Field description\"\"\" bar:String}\n */\nfunction stripIgnoredCharacters(source) {\n  var sourceObj = (0, _source.isSource)(source) ? source : new _source.Source(source);\n  var body = sourceObj.body;\n  var lexer = new _lexer.Lexer(sourceObj);\n  var strippedBody = '';\n  var wasLastAddedTokenNonPunctuator = false;\n\n  while (lexer.advance().kind !== _tokenKind.TokenKind.EOF) {\n    var currentToken = lexer.token;\n    var tokenKind = currentToken.kind;\n    /**\n     * Every two non-punctuator tokens should have space between them.\n     * Also prevent case of non-punctuator token following by spread resulting\n     * in invalid token (e.g. `1...` is invalid Float token).\n     */\n\n    var isNonPunctuator = !(0, _lexer.isPunctuatorTokenKind)(currentToken.kind);\n\n    if (wasLastAddedTokenNonPunctuator) {\n      if (isNonPunctuator || currentToken.kind === _tokenKind.TokenKind.SPREAD) {\n        strippedBody += ' ';\n      }\n    }\n\n    var tokenBody = body.slice(currentToken.start, currentToken.end);\n\n    if (tokenKind === _tokenKind.TokenKind.BLOCK_STRING) {\n      strippedBody += dedentBlockString(tokenBody);\n    } else {\n      strippedBody += tokenBody;\n    }\n\n    wasLastAddedTokenNonPunctuator = isNonPunctuator;\n  }\n\n  return strippedBody;\n}\n\nfunction dedentBlockString(blockStr) {\n  // skip leading and trailing triple quotations\n  var rawStr = blockStr.slice(3, -3);\n  var body = (0, _blockString.dedentBlockStringValue)(rawStr);\n\n  if ((0, _blockString.getBlockStringIndentation)(body) > 0) {\n    body = '\\n' + body;\n  }\n\n  var lastChar = body[body.length - 1];\n  var hasTrailingQuote = lastChar === '\"' && body.slice(-4) !== '\\\\\"\"\"';\n\n  if (hasTrailingQuote || lastChar === '\\\\') {\n    body += '\\n';\n  }\n\n  return '\"\"\"' + body + '\"\"\"';\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findBreakingChanges = findBreakingChanges;\nexports.findDangerousChanges = findDangerousChanges;\nexports.DangerousChangeType = exports.BreakingChangeType = void 0;\n\nvar _objectValues = _interopRequireDefault(require(\"../polyfills/objectValues.js\"));\n\nvar _keyMap = _interopRequireDefault(require(\"../jsutils/keyMap.js\"));\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect.js\"));\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant.js\"));\n\nvar _naturalCompare = _interopRequireDefault(require(\"../jsutils/naturalCompare.js\"));\n\nvar _printer = require(\"../language/printer.js\");\n\nvar _visitor = require(\"../language/visitor.js\");\n\nvar _scalars = require(\"../type/scalars.js\");\n\nvar _definition = require(\"../type/definition.js\");\n\nvar _astFromValue = require(\"./astFromValue.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar BreakingChangeType = Object.freeze({\n  TYPE_REMOVED: 'TYPE_REMOVED',\n  TYPE_CHANGED_KIND: 'TYPE_CHANGED_KIND',\n  TYPE_REMOVED_FROM_UNION: 'TYPE_REMOVED_FROM_UNION',\n  VALUE_REMOVED_FROM_ENUM: 'VALUE_REMOVED_FROM_ENUM',\n  REQUIRED_INPUT_FIELD_ADDED: 'REQUIRED_INPUT_FIELD_ADDED',\n  IMPLEMENTED_INTERFACE_REMOVED: 'IMPLEMENTED_INTERFACE_REMOVED',\n  FIELD_REMOVED: 'FIELD_REMOVED',\n  FIELD_CHANGED_KIND: 'FIELD_CHANGED_KIND',\n  REQUIRED_ARG_ADDED: 'REQUIRED_ARG_ADDED',\n  ARG_REMOVED: 'ARG_REMOVED',\n  ARG_CHANGED_KIND: 'ARG_CHANGED_KIND',\n  DIRECTIVE_REMOVED: 'DIRECTIVE_REMOVED',\n  DIRECTIVE_ARG_REMOVED: 'DIRECTIVE_ARG_REMOVED',\n  REQUIRED_DIRECTIVE_ARG_ADDED: 'REQUIRED_DIRECTIVE_ARG_ADDED',\n  DIRECTIVE_REPEATABLE_REMOVED: 'DIRECTIVE_REPEATABLE_REMOVED',\n  DIRECTIVE_LOCATION_REMOVED: 'DIRECTIVE_LOCATION_REMOVED'\n});\nexports.BreakingChangeType = BreakingChangeType;\nvar DangerousChangeType = Object.freeze({\n  VALUE_ADDED_TO_ENUM: 'VALUE_ADDED_TO_ENUM',\n  TYPE_ADDED_TO_UNION: 'TYPE_ADDED_TO_UNION',\n  OPTIONAL_INPUT_FIELD_ADDED: 'OPTIONAL_INPUT_FIELD_ADDED',\n  OPTIONAL_ARG_ADDED: 'OPTIONAL_ARG_ADDED',\n  IMPLEMENTED_INTERFACE_ADDED: 'IMPLEMENTED_INTERFACE_ADDED',\n  ARG_DEFAULT_VALUE_CHANGE: 'ARG_DEFAULT_VALUE_CHANGE'\n});\nexports.DangerousChangeType = DangerousChangeType;\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nfunction findBreakingChanges(oldSchema, newSchema) {\n  var breakingChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in BreakingChangeType;\n  });\n  return breakingChanges;\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\n\nfunction findDangerousChanges(oldSchema, newSchema) {\n  var dangerousChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in DangerousChangeType;\n  });\n  return dangerousChanges;\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [].concat(findTypeChanges(oldSchema, newSchema), findDirectiveChanges(oldSchema, newSchema));\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var directivesDiff = diff(oldSchema.getDirectives(), newSchema.getDirectives());\n\n  for (var _i2 = 0, _directivesDiff$remov2 = directivesDiff.removed; _i2 < _directivesDiff$remov2.length; _i2++) {\n    var oldDirective = _directivesDiff$remov2[_i2];\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: \"\".concat(oldDirective.name, \" was removed.\")\n    });\n  }\n\n  for (var _i4 = 0, _directivesDiff$persi2 = directivesDiff.persisted; _i4 < _directivesDiff$persi2.length; _i4++) {\n    var _ref2 = _directivesDiff$persi2[_i4];\n    var _oldDirective = _ref2[0];\n    var newDirective = _ref2[1];\n    var argsDiff = diff(_oldDirective.args, newDirective.args);\n\n    for (var _i6 = 0, _argsDiff$added2 = argsDiff.added; _i6 < _argsDiff$added2.length; _i6++) {\n      var newArg = _argsDiff$added2[_i6];\n\n      if ((0, _definition.isRequiredArgument)(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: \"A required arg \".concat(newArg.name, \" on directive \").concat(_oldDirective.name, \" was added.\")\n        });\n      }\n    }\n\n    for (var _i8 = 0, _argsDiff$removed2 = argsDiff.removed; _i8 < _argsDiff$removed2.length; _i8++) {\n      var oldArg = _argsDiff$removed2[_i8];\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: \"\".concat(oldArg.name, \" was removed from \").concat(_oldDirective.name, \".\")\n      });\n    }\n\n    if (_oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: \"Repeatable flag was removed from \".concat(_oldDirective.name, \".\")\n      });\n    }\n\n    for (var _i10 = 0, _oldDirective$locatio2 = _oldDirective.locations; _i10 < _oldDirective$locatio2.length; _i10++) {\n      var location = _oldDirective$locatio2[_i10];\n\n      if (newDirective.locations.indexOf(location) === -1) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: \"\".concat(location, \" was removed from \").concat(_oldDirective.name, \".\")\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var typesDiff = diff((0, _objectValues.default)(oldSchema.getTypeMap()), (0, _objectValues.default)(newSchema.getTypeMap()));\n\n  for (var _i12 = 0, _typesDiff$removed2 = typesDiff.removed; _i12 < _typesDiff$removed2.length; _i12++) {\n    var oldType = _typesDiff$removed2[_i12];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: (0, _scalars.isSpecifiedScalarType)(oldType) ? \"Standard scalar \".concat(oldType.name, \" was removed because it is not referenced anymore.\") : \"\".concat(oldType.name, \" was removed.\")\n    });\n  }\n\n  for (var _i14 = 0, _typesDiff$persisted2 = typesDiff.persisted; _i14 < _typesDiff$persisted2.length; _i14++) {\n    var _ref4 = _typesDiff$persisted2[_i14];\n    var _oldType = _ref4[0];\n    var newType = _ref4[1];\n\n    if ((0, _definition.isEnumType)(_oldType) && (0, _definition.isEnumType)(newType)) {\n      schemaChanges.push.apply(schemaChanges, findEnumTypeChanges(_oldType, newType));\n    } else if ((0, _definition.isUnionType)(_oldType) && (0, _definition.isUnionType)(newType)) {\n      schemaChanges.push.apply(schemaChanges, findUnionTypeChanges(_oldType, newType));\n    } else if ((0, _definition.isInputObjectType)(_oldType) && (0, _definition.isInputObjectType)(newType)) {\n      schemaChanges.push.apply(schemaChanges, findInputObjectTypeChanges(_oldType, newType));\n    } else if ((0, _definition.isObjectType)(_oldType) && (0, _definition.isObjectType)(newType)) {\n      schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType).concat(findImplementedInterfacesChanges(_oldType, newType)));\n    } else if ((0, _definition.isInterfaceType)(_oldType) && (0, _definition.isInterfaceType)(newType)) {\n      schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType).concat(findImplementedInterfacesChanges(_oldType, newType)));\n    } else if (_oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description: \"\".concat(_oldType.name, \" changed from \") + \"\".concat(typeKindName(_oldType), \" to \").concat(typeKindName(newType), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff((0, _objectValues.default)(oldType.getFields()), (0, _objectValues.default)(newType.getFields()));\n\n  for (var _i16 = 0, _fieldsDiff$added2 = fieldsDiff.added; _i16 < _fieldsDiff$added2.length; _i16++) {\n    var newField = _fieldsDiff$added2[_i16];\n\n    if ((0, _definition.isRequiredInputField)(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: \"A required field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: \"An optional field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    }\n  }\n\n  for (var _i18 = 0, _fieldsDiff$removed2 = fieldsDiff.removed; _i18 < _fieldsDiff$removed2.length; _i18++) {\n    var oldField = _fieldsDiff$removed2[_i18];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n\n  for (var _i20 = 0, _fieldsDiff$persisted2 = fieldsDiff.persisted; _i20 < _fieldsDiff$persisted2.length; _i20++) {\n    var _ref6 = _fieldsDiff$persisted2[_i20];\n    var _oldField = _ref6[0];\n    var _newField = _ref6[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldField.type, _newField.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField.name, \" changed type from \") + \"\".concat(String(_oldField.type), \" to \").concat(String(_newField.type), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (var _i22 = 0, _possibleTypesDiff$ad2 = possibleTypesDiff.added; _i22 < _possibleTypesDiff$ad2.length; _i22++) {\n    var newPossibleType = _possibleTypesDiff$ad2[_i22];\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: \"\".concat(newPossibleType.name, \" was added to union type \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i24 = 0, _possibleTypesDiff$re2 = possibleTypesDiff.removed; _i24 < _possibleTypesDiff$re2.length; _i24++) {\n    var oldPossibleType = _possibleTypesDiff$re2[_i24];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: \"\".concat(oldPossibleType.name, \" was removed from union type \").concat(oldType.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (var _i26 = 0, _valuesDiff$added2 = valuesDiff.added; _i26 < _valuesDiff$added2.length; _i26++) {\n    var newValue = _valuesDiff$added2[_i26];\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: \"\".concat(newValue.name, \" was added to enum type \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i28 = 0, _valuesDiff$removed2 = valuesDiff.removed; _i28 < _valuesDiff$removed2.length; _i28++) {\n    var oldValue = _valuesDiff$removed2[_i28];\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: \"\".concat(oldValue.name, \" was removed from enum type \").concat(oldType.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  var schemaChanges = [];\n  var interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (var _i30 = 0, _interfacesDiff$added2 = interfacesDiff.added; _i30 < _interfacesDiff$added2.length; _i30++) {\n    var newInterface = _interfacesDiff$added2[_i30];\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: \"\".concat(newInterface.name, \" added to interfaces implemented by \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i32 = 0, _interfacesDiff$remov2 = interfacesDiff.removed; _i32 < _interfacesDiff$remov2.length; _i32++) {\n    var oldInterface = _interfacesDiff$remov2[_i32];\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: \"\".concat(oldType.name, \" no longer implements interface \").concat(oldInterface.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff((0, _objectValues.default)(oldType.getFields()), (0, _objectValues.default)(newType.getFields()));\n\n  for (var _i34 = 0, _fieldsDiff$removed4 = fieldsDiff.removed; _i34 < _fieldsDiff$removed4.length; _i34++) {\n    var oldField = _fieldsDiff$removed4[_i34];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n\n  for (var _i36 = 0, _fieldsDiff$persisted4 = fieldsDiff.persisted; _i36 < _fieldsDiff$persisted4.length; _i36++) {\n    var _ref8 = _fieldsDiff$persisted4[_i36];\n    var _oldField2 = _ref8[0];\n    var newField = _ref8[1];\n    schemaChanges.push.apply(schemaChanges, findArgChanges(oldType, _oldField2, newField));\n    var isSafe = isChangeSafeForObjectOrInterfaceField(_oldField2.type, newField.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField2.name, \" changed type from \") + \"\".concat(String(_oldField2.type), \" to \").concat(String(newField.type), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  var schemaChanges = [];\n  var argsDiff = diff(oldField.args, newField.args);\n\n  for (var _i38 = 0, _argsDiff$removed4 = argsDiff.removed; _i38 < _argsDiff$removed4.length; _i38++) {\n    var oldArg = _argsDiff$removed4[_i38];\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(oldArg.name, \" was removed.\")\n    });\n  }\n\n  for (var _i40 = 0, _argsDiff$persisted2 = argsDiff.persisted; _i40 < _argsDiff$persisted2.length; _i40++) {\n    var _ref10 = _argsDiff$persisted2[_i40];\n    var _oldArg = _ref10[0];\n    var newArg = _ref10[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldArg.type, newArg.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed type from \") + \"\".concat(String(_oldArg.type), \" to \").concat(String(newArg.type), \".\")\n      });\n    } else if (_oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" defaultValue was removed.\")\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        var oldValueStr = stringifyValue(_oldArg.defaultValue, _oldArg.type);\n        var newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed defaultValue from \").concat(oldValueStr, \" to \").concat(newValueStr, \".\")\n          });\n        }\n      }\n    }\n  }\n\n  for (var _i42 = 0, _argsDiff$added4 = argsDiff.added; _i42 < _argsDiff$added4.length; _i42++) {\n    var _newArg = _argsDiff$added4[_i42];\n\n    if ((0, _definition.isRequiredArgument)(_newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: \"A required arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: \"An optional arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if ((0, _definition.isListType)(oldType)) {\n    return (// if they're both lists, make sure the underlying types are compatible\n      (0, _definition.isListType)(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType) || // moving from nullable to non-null of the same underlying type is safe\n      (0, _definition.isNonNullType)(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  }\n\n  if ((0, _definition.isNonNullType)(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return (0, _definition.isNonNullType)(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType);\n  }\n\n  return (// if they're both named types, see if their names are equivalent\n    (0, _definition.isNamedType)(newType) && oldType.name === newType.name || // moving from nullable to non-null of the same underlying type is safe\n    (0, _definition.isNonNullType)(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if ((0, _definition.isListType)(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return (0, _definition.isListType)(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType);\n  }\n\n  if ((0, _definition.isNonNullType)(oldType)) {\n    return (// if they're both non-null, make sure the underlying types are\n      // compatible\n      (0, _definition.isNonNullType)(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType) || // moving from non-null to nullable of the same underlying type is safe\n      !(0, _definition.isNonNullType)(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType)\n    );\n  } // if they're both named types, see if their names are equivalent\n\n\n  return (0, _definition.isNamedType)(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return 'a Scalar type';\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return 'an Object type';\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return 'an Interface type';\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return 'a Union type';\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return 'an Enum type';\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return 'an Input type';\n  } // istanbul ignore next (Not reachable. All possible named types have been considered)\n\n\n  false || (0, _invariant.default)(0, 'Unexpected type: ' + (0, _inspect.default)(type));\n}\n\nfunction stringifyValue(value, type) {\n  var ast = (0, _astFromValue.astFromValue)(value, type);\n  ast != null || (0, _invariant.default)(0);\n  var sortedAST = (0, _visitor.visit)(ast, {\n    ObjectValue: function ObjectValue(objectNode) {\n      // Make a copy since sort mutates array\n      var fields = [].concat(objectNode.fields);\n      fields.sort(function (fieldA, fieldB) {\n        return (0, _naturalCompare.default)(fieldA.name.value, fieldB.name.value);\n      });\n      return _objectSpread(_objectSpread({}, objectNode), {}, {\n        fields: fields\n      });\n    }\n  });\n  return (0, _printer.print)(sortedAST);\n}\n\nfunction diff(oldArray, newArray) {\n  var added = [];\n  var removed = [];\n  var persisted = [];\n  var oldMap = (0, _keyMap.default)(oldArray, function (_ref11) {\n    var name = _ref11.name;\n    return name;\n  });\n  var newMap = (0, _keyMap.default)(newArray, function (_ref12) {\n    var name = _ref12.name;\n    return name;\n  });\n\n  for (var _i44 = 0; _i44 < oldArray.length; _i44++) {\n    var oldItem = oldArray[_i44];\n    var newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (var _i46 = 0; _i46 < newArray.length; _i46++) {\n    var _newItem = newArray[_i46];\n\n    if (oldMap[_newItem.name] === undefined) {\n      added.push(_newItem);\n    }\n  }\n\n  return {\n    added: added,\n    persisted: persisted,\n    removed: removed\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findDeprecatedUsages = findDeprecatedUsages;\n\nvar _validate = require(\"../validation/validate.js\");\n\nvar _NoDeprecatedCustomRule = require(\"../validation/rules/custom/NoDeprecatedCustomRule.js\");\n\n/**\n * A validation rule which reports deprecated usages.\n *\n * Returns a list of GraphQLError instances describing each deprecated use.\n *\n * @deprecated Please use `validate` with `NoDeprecatedCustomRule` instead:\n *\n * ```\n * import { validate, NoDeprecatedCustomRule } from 'graphql'\n *\n * const errors = validate(schema, document, [NoDeprecatedCustomRule])\n * ```\n */\nfunction findDeprecatedUsages(schema, ast) {\n  return (0, _validate.validate)(schema, ast, [_NoDeprecatedCustomRule.NoDeprecatedCustomRule]);\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"getIntrospectionQuery\", {\n  enumerable: true,\n  get: function get() {\n    return _getIntrospectionQuery.getIntrospectionQuery;\n  }\n});\nObject.defineProperty(exports, \"getOperationAST\", {\n  enumerable: true,\n  get: function get() {\n    return _getOperationAST.getOperationAST;\n  }\n});\nObject.defineProperty(exports, \"getOperationRootType\", {\n  enumerable: true,\n  get: function get() {\n    return _getOperationRootType.getOperationRootType;\n  }\n});\nObject.defineProperty(exports, \"introspectionFromSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _introspectionFromSchema.introspectionFromSchema;\n  }\n});\nObject.defineProperty(exports, \"buildClientSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _buildClientSchema.buildClientSchema;\n  }\n});\nObject.defineProperty(exports, \"buildASTSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _buildASTSchema.buildASTSchema;\n  }\n});\nObject.defineProperty(exports, \"buildSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _buildASTSchema.buildSchema;\n  }\n});\nObject.defineProperty(exports, \"extendSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _extendSchema.extendSchema;\n  }\n});\nObject.defineProperty(exports, \"getDescription\", {\n  enumerable: true,\n  get: function get() {\n    return _extendSchema.getDescription;\n  }\n});\nObject.defineProperty(exports, \"lexicographicSortSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _lexicographicSortSchema.lexicographicSortSchema;\n  }\n});\nObject.defineProperty(exports, \"printSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _printSchema.printSchema;\n  }\n});\nObject.defineProperty(exports, \"printType\", {\n  enumerable: true,\n  get: function get() {\n    return _printSchema.printType;\n  }\n});\nObject.defineProperty(exports, \"printIntrospectionSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _printSchema.printIntrospectionSchema;\n  }\n});\nObject.defineProperty(exports, \"typeFromAST\", {\n  enumerable: true,\n  get: function get() {\n    return _typeFromAST.typeFromAST;\n  }\n});\nObject.defineProperty(exports, \"valueFromAST\", {\n  enumerable: true,\n  get: function get() {\n    return _valueFromAST.valueFromAST;\n  }\n});\nObject.defineProperty(exports, \"valueFromASTUntyped\", {\n  enumerable: true,\n  get: function get() {\n    return _valueFromASTUntyped.valueFromASTUntyped;\n  }\n});\nObject.defineProperty(exports, \"astFromValue\", {\n  enumerable: true,\n  get: function get() {\n    return _astFromValue.astFromValue;\n  }\n});\nObject.defineProperty(exports, \"TypeInfo\", {\n  enumerable: true,\n  get: function get() {\n    return _TypeInfo.TypeInfo;\n  }\n});\nObject.defineProperty(exports, \"visitWithTypeInfo\", {\n  enumerable: true,\n  get: function get() {\n    return _TypeInfo.visitWithTypeInfo;\n  }\n});\nObject.defineProperty(exports, \"coerceInputValue\", {\n  enumerable: true,\n  get: function get() {\n    return _coerceInputValue.coerceInputValue;\n  }\n});\nObject.defineProperty(exports, \"concatAST\", {\n  enumerable: true,\n  get: function get() {\n    return _concatAST.concatAST;\n  }\n});\nObject.defineProperty(exports, \"separateOperations\", {\n  enumerable: true,\n  get: function get() {\n    return _separateOperations.separateOperations;\n  }\n});\nObject.defineProperty(exports, \"stripIgnoredCharacters\", {\n  enumerable: true,\n  get: function get() {\n    return _stripIgnoredCharacters.stripIgnoredCharacters;\n  }\n});\nObject.defineProperty(exports, \"isEqualType\", {\n  enumerable: true,\n  get: function get() {\n    return _typeComparators.isEqualType;\n  }\n});\nObject.defineProperty(exports, \"isTypeSubTypeOf\", {\n  enumerable: true,\n  get: function get() {\n    return _typeComparators.isTypeSubTypeOf;\n  }\n});\nObject.defineProperty(exports, \"doTypesOverlap\", {\n  enumerable: true,\n  get: function get() {\n    return _typeComparators.doTypesOverlap;\n  }\n});\nObject.defineProperty(exports, \"assertValidName\", {\n  enumerable: true,\n  get: function get() {\n    return _assertValidName.assertValidName;\n  }\n});\nObject.defineProperty(exports, \"isValidNameError\", {\n  enumerable: true,\n  get: function get() {\n    return _assertValidName.isValidNameError;\n  }\n});\nObject.defineProperty(exports, \"BreakingChangeType\", {\n  enumerable: true,\n  get: function get() {\n    return _findBreakingChanges.BreakingChangeType;\n  }\n});\nObject.defineProperty(exports, \"DangerousChangeType\", {\n  enumerable: true,\n  get: function get() {\n    return _findBreakingChanges.DangerousChangeType;\n  }\n});\nObject.defineProperty(exports, \"findBreakingChanges\", {\n  enumerable: true,\n  get: function get() {\n    return _findBreakingChanges.findBreakingChanges;\n  }\n});\nObject.defineProperty(exports, \"findDangerousChanges\", {\n  enumerable: true,\n  get: function get() {\n    return _findBreakingChanges.findDangerousChanges;\n  }\n});\nObject.defineProperty(exports, \"findDeprecatedUsages\", {\n  enumerable: true,\n  get: function get() {\n    return _findDeprecatedUsages.findDeprecatedUsages;\n  }\n});\n\nvar _getIntrospectionQuery = require(\"./getIntrospectionQuery.js\");\n\nvar _getOperationAST = require(\"./getOperationAST.js\");\n\nvar _getOperationRootType = require(\"./getOperationRootType.js\");\n\nvar _introspectionFromSchema = require(\"./introspectionFromSchema.js\");\n\nvar _buildClientSchema = require(\"./buildClientSchema.js\");\n\nvar _buildASTSchema = require(\"./buildASTSchema.js\");\n\nvar _extendSchema = require(\"./extendSchema.js\");\n\nvar _lexicographicSortSchema = require(\"./lexicographicSortSchema.js\");\n\nvar _printSchema = require(\"./printSchema.js\");\n\nvar _typeFromAST = require(\"./typeFromAST.js\");\n\nvar _valueFromAST = require(\"./valueFromAST.js\");\n\nvar _valueFromASTUntyped = require(\"./valueFromASTUntyped.js\");\n\nvar _astFromValue = require(\"./astFromValue.js\");\n\nvar _TypeInfo = require(\"./TypeInfo.js\");\n\nvar _coerceInputValue = require(\"./coerceInputValue.js\");\n\nvar _concatAST = require(\"./concatAST.js\");\n\nvar _separateOperations = require(\"./separateOperations.js\");\n\nvar _stripIgnoredCharacters = require(\"./stripIgnoredCharacters.js\");\n\nvar _typeComparators = require(\"./typeComparators.js\");\n\nvar _assertValidName = require(\"./assertValidName.js\");\n\nvar _findBreakingChanges = require(\"./findBreakingChanges.js\");\n\nvar _findDeprecatedUsages = require(\"./findDeprecatedUsages.js\");\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function get() {\n    return _version.version;\n  }\n});\nObject.defineProperty(exports, \"versionInfo\", {\n  enumerable: true,\n  get: function get() {\n    return _version.versionInfo;\n  }\n});\nObject.defineProperty(exports, \"graphql\", {\n  enumerable: true,\n  get: function get() {\n    return _graphql.graphql;\n  }\n});\nObject.defineProperty(exports, \"graphqlSync\", {\n  enumerable: true,\n  get: function get() {\n    return _graphql.graphqlSync;\n  }\n});\nObject.defineProperty(exports, \"GraphQLSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLSchema;\n  }\n});\nObject.defineProperty(exports, \"GraphQLDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLDirective;\n  }\n});\nObject.defineProperty(exports, \"GraphQLScalarType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLScalarType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLObjectType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLInterfaceType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLInterfaceType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLUnionType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLUnionType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLEnumType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLEnumType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLInputObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLInputObjectType;\n  }\n});\nObject.defineProperty(exports, \"GraphQLList\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLList;\n  }\n});\nObject.defineProperty(exports, \"GraphQLNonNull\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLNonNull;\n  }\n});\nObject.defineProperty(exports, \"specifiedScalarTypes\", {\n  enumerable: true,\n  get: function get() {\n    return _index.specifiedScalarTypes;\n  }\n});\nObject.defineProperty(exports, \"GraphQLInt\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLInt;\n  }\n});\nObject.defineProperty(exports, \"GraphQLFloat\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLFloat;\n  }\n});\nObject.defineProperty(exports, \"GraphQLString\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLString;\n  }\n});\nObject.defineProperty(exports, \"GraphQLBoolean\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLBoolean;\n  }\n});\nObject.defineProperty(exports, \"GraphQLID\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLID;\n  }\n});\nObject.defineProperty(exports, \"specifiedDirectives\", {\n  enumerable: true,\n  get: function get() {\n    return _index.specifiedDirectives;\n  }\n});\nObject.defineProperty(exports, \"GraphQLIncludeDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLIncludeDirective;\n  }\n});\nObject.defineProperty(exports, \"GraphQLSkipDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLSkipDirective;\n  }\n});\nObject.defineProperty(exports, \"GraphQLDeprecatedDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLDeprecatedDirective;\n  }\n});\nObject.defineProperty(exports, \"GraphQLSpecifiedByDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _index.GraphQLSpecifiedByDirective;\n  }\n});\nObject.defineProperty(exports, \"TypeKind\", {\n  enumerable: true,\n  get: function get() {\n    return _index.TypeKind;\n  }\n});\nObject.defineProperty(exports, \"DEFAULT_DEPRECATION_REASON\", {\n  enumerable: true,\n  get: function get() {\n    return _index.DEFAULT_DEPRECATION_REASON;\n  }\n});\nObject.defineProperty(exports, \"introspectionTypes\", {\n  enumerable: true,\n  get: function get() {\n    return _index.introspectionTypes;\n  }\n});\nObject.defineProperty(exports, \"__Schema\", {\n  enumerable: true,\n  get: function get() {\n    return _index.__Schema;\n  }\n});\nObject.defineProperty(exports, \"__Directive\", {\n  enumerable: true,\n  get: function get() {\n    return _index.__Directive;\n  }\n});\nObject.defineProperty(exports, \"__DirectiveLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _index.__DirectiveLocation;\n  }\n});\nObject.defineProperty(exports, \"__Type\", {\n  enumerable: true,\n  get: function get() {\n    return _index.__Type;\n  }\n});\nObject.defineProperty(exports, \"__Field\", {\n  enumerable: true,\n  get: function get() {\n    return _index.__Field;\n  }\n});\nObject.defineProperty(exports, \"__InputValue\", {\n  enumerable: true,\n  get: function get() {\n    return _index.__InputValue;\n  }\n});\nObject.defineProperty(exports, \"__EnumValue\", {\n  enumerable: true,\n  get: function get() {\n    return _index.__EnumValue;\n  }\n});\nObject.defineProperty(exports, \"__TypeKind\", {\n  enumerable: true,\n  get: function get() {\n    return _index.__TypeKind;\n  }\n});\nObject.defineProperty(exports, \"SchemaMetaFieldDef\", {\n  enumerable: true,\n  get: function get() {\n    return _index.SchemaMetaFieldDef;\n  }\n});\nObject.defineProperty(exports, \"TypeMetaFieldDef\", {\n  enumerable: true,\n  get: function get() {\n    return _index.TypeMetaFieldDef;\n  }\n});\nObject.defineProperty(exports, \"TypeNameMetaFieldDef\", {\n  enumerable: true,\n  get: function get() {\n    return _index.TypeNameMetaFieldDef;\n  }\n});\nObject.defineProperty(exports, \"isSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isSchema;\n  }\n});\nObject.defineProperty(exports, \"isDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isDirective;\n  }\n});\nObject.defineProperty(exports, \"isType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isType;\n  }\n});\nObject.defineProperty(exports, \"isScalarType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isScalarType;\n  }\n});\nObject.defineProperty(exports, \"isObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isObjectType;\n  }\n});\nObject.defineProperty(exports, \"isInterfaceType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isInterfaceType;\n  }\n});\nObject.defineProperty(exports, \"isUnionType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isUnionType;\n  }\n});\nObject.defineProperty(exports, \"isEnumType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isEnumType;\n  }\n});\nObject.defineProperty(exports, \"isInputObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isInputObjectType;\n  }\n});\nObject.defineProperty(exports, \"isListType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isListType;\n  }\n});\nObject.defineProperty(exports, \"isNonNullType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isNonNullType;\n  }\n});\nObject.defineProperty(exports, \"isInputType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isInputType;\n  }\n});\nObject.defineProperty(exports, \"isOutputType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isOutputType;\n  }\n});\nObject.defineProperty(exports, \"isLeafType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isLeafType;\n  }\n});\nObject.defineProperty(exports, \"isCompositeType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isCompositeType;\n  }\n});\nObject.defineProperty(exports, \"isAbstractType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isAbstractType;\n  }\n});\nObject.defineProperty(exports, \"isWrappingType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isWrappingType;\n  }\n});\nObject.defineProperty(exports, \"isNullableType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isNullableType;\n  }\n});\nObject.defineProperty(exports, \"isNamedType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isNamedType;\n  }\n});\nObject.defineProperty(exports, \"isRequiredArgument\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isRequiredArgument;\n  }\n});\nObject.defineProperty(exports, \"isRequiredInputField\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isRequiredInputField;\n  }\n});\nObject.defineProperty(exports, \"isSpecifiedScalarType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isSpecifiedScalarType;\n  }\n});\nObject.defineProperty(exports, \"isIntrospectionType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isIntrospectionType;\n  }\n});\nObject.defineProperty(exports, \"isSpecifiedDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _index.isSpecifiedDirective;\n  }\n});\nObject.defineProperty(exports, \"assertSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertSchema;\n  }\n});\nObject.defineProperty(exports, \"assertDirective\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertDirective;\n  }\n});\nObject.defineProperty(exports, \"assertType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertType;\n  }\n});\nObject.defineProperty(exports, \"assertScalarType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertScalarType;\n  }\n});\nObject.defineProperty(exports, \"assertObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertObjectType;\n  }\n});\nObject.defineProperty(exports, \"assertInterfaceType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertInterfaceType;\n  }\n});\nObject.defineProperty(exports, \"assertUnionType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertUnionType;\n  }\n});\nObject.defineProperty(exports, \"assertEnumType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertEnumType;\n  }\n});\nObject.defineProperty(exports, \"assertInputObjectType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertInputObjectType;\n  }\n});\nObject.defineProperty(exports, \"assertListType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertListType;\n  }\n});\nObject.defineProperty(exports, \"assertNonNullType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertNonNullType;\n  }\n});\nObject.defineProperty(exports, \"assertInputType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertInputType;\n  }\n});\nObject.defineProperty(exports, \"assertOutputType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertOutputType;\n  }\n});\nObject.defineProperty(exports, \"assertLeafType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertLeafType;\n  }\n});\nObject.defineProperty(exports, \"assertCompositeType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertCompositeType;\n  }\n});\nObject.defineProperty(exports, \"assertAbstractType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertAbstractType;\n  }\n});\nObject.defineProperty(exports, \"assertWrappingType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertWrappingType;\n  }\n});\nObject.defineProperty(exports, \"assertNullableType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertNullableType;\n  }\n});\nObject.defineProperty(exports, \"assertNamedType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertNamedType;\n  }\n});\nObject.defineProperty(exports, \"getNullableType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.getNullableType;\n  }\n});\nObject.defineProperty(exports, \"getNamedType\", {\n  enumerable: true,\n  get: function get() {\n    return _index.getNamedType;\n  }\n});\nObject.defineProperty(exports, \"validateSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index.validateSchema;\n  }\n});\nObject.defineProperty(exports, \"assertValidSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index.assertValidSchema;\n  }\n});\nObject.defineProperty(exports, \"Token\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.Token;\n  }\n});\nObject.defineProperty(exports, \"Source\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.Source;\n  }\n});\nObject.defineProperty(exports, \"Location\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.Location;\n  }\n});\nObject.defineProperty(exports, \"getLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.getLocation;\n  }\n});\nObject.defineProperty(exports, \"printLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.printLocation;\n  }\n});\nObject.defineProperty(exports, \"printSourceLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.printSourceLocation;\n  }\n});\nObject.defineProperty(exports, \"Lexer\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.Lexer;\n  }\n});\nObject.defineProperty(exports, \"TokenKind\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.TokenKind;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.parse;\n  }\n});\nObject.defineProperty(exports, \"parseValue\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.parseValue;\n  }\n});\nObject.defineProperty(exports, \"parseType\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.parseType;\n  }\n});\nObject.defineProperty(exports, \"print\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.print;\n  }\n});\nObject.defineProperty(exports, \"visit\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.visit;\n  }\n});\nObject.defineProperty(exports, \"visitInParallel\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.visitInParallel;\n  }\n});\nObject.defineProperty(exports, \"getVisitFn\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.getVisitFn;\n  }\n});\nObject.defineProperty(exports, \"BREAK\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.BREAK;\n  }\n});\nObject.defineProperty(exports, \"Kind\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.Kind;\n  }\n});\nObject.defineProperty(exports, \"DirectiveLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.DirectiveLocation;\n  }\n});\nObject.defineProperty(exports, \"isDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.isDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isExecutableDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.isExecutableDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isSelectionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.isSelectionNode;\n  }\n});\nObject.defineProperty(exports, \"isValueNode\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.isValueNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeNode\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.isTypeNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeSystemDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.isTypeSystemDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.isTypeDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeSystemExtensionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.isTypeSystemExtensionNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeExtensionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _index2.isTypeExtensionNode;\n  }\n});\nObject.defineProperty(exports, \"execute\", {\n  enumerable: true,\n  get: function get() {\n    return _index3.execute;\n  }\n});\nObject.defineProperty(exports, \"executeSync\", {\n  enumerable: true,\n  get: function get() {\n    return _index3.executeSync;\n  }\n});\nObject.defineProperty(exports, \"defaultFieldResolver\", {\n  enumerable: true,\n  get: function get() {\n    return _index3.defaultFieldResolver;\n  }\n});\nObject.defineProperty(exports, \"defaultTypeResolver\", {\n  enumerable: true,\n  get: function get() {\n    return _index3.defaultTypeResolver;\n  }\n});\nObject.defineProperty(exports, \"responsePathAsArray\", {\n  enumerable: true,\n  get: function get() {\n    return _index3.responsePathAsArray;\n  }\n});\nObject.defineProperty(exports, \"getDirectiveValues\", {\n  enumerable: true,\n  get: function get() {\n    return _index3.getDirectiveValues;\n  }\n});\nObject.defineProperty(exports, \"subscribe\", {\n  enumerable: true,\n  get: function get() {\n    return _index4.subscribe;\n  }\n});\nObject.defineProperty(exports, \"createSourceEventStream\", {\n  enumerable: true,\n  get: function get() {\n    return _index4.createSourceEventStream;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.validate;\n  }\n});\nObject.defineProperty(exports, \"ValidationContext\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.ValidationContext;\n  }\n});\nObject.defineProperty(exports, \"specifiedRules\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.specifiedRules;\n  }\n});\nObject.defineProperty(exports, \"ExecutableDefinitionsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.ExecutableDefinitionsRule;\n  }\n});\nObject.defineProperty(exports, \"FieldsOnCorrectTypeRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.FieldsOnCorrectTypeRule;\n  }\n});\nObject.defineProperty(exports, \"FragmentsOnCompositeTypesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.FragmentsOnCompositeTypesRule;\n  }\n});\nObject.defineProperty(exports, \"KnownArgumentNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.KnownArgumentNamesRule;\n  }\n});\nObject.defineProperty(exports, \"KnownDirectivesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.KnownDirectivesRule;\n  }\n});\nObject.defineProperty(exports, \"KnownFragmentNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.KnownFragmentNamesRule;\n  }\n});\nObject.defineProperty(exports, \"KnownTypeNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.KnownTypeNamesRule;\n  }\n});\nObject.defineProperty(exports, \"LoneAnonymousOperationRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.LoneAnonymousOperationRule;\n  }\n});\nObject.defineProperty(exports, \"NoFragmentCyclesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.NoFragmentCyclesRule;\n  }\n});\nObject.defineProperty(exports, \"NoUndefinedVariablesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.NoUndefinedVariablesRule;\n  }\n});\nObject.defineProperty(exports, \"NoUnusedFragmentsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.NoUnusedFragmentsRule;\n  }\n});\nObject.defineProperty(exports, \"NoUnusedVariablesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.NoUnusedVariablesRule;\n  }\n});\nObject.defineProperty(exports, \"OverlappingFieldsCanBeMergedRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.OverlappingFieldsCanBeMergedRule;\n  }\n});\nObject.defineProperty(exports, \"PossibleFragmentSpreadsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.PossibleFragmentSpreadsRule;\n  }\n});\nObject.defineProperty(exports, \"ProvidedRequiredArgumentsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.ProvidedRequiredArgumentsRule;\n  }\n});\nObject.defineProperty(exports, \"ScalarLeafsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.ScalarLeafsRule;\n  }\n});\nObject.defineProperty(exports, \"SingleFieldSubscriptionsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.SingleFieldSubscriptionsRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueArgumentNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.UniqueArgumentNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueDirectivesPerLocationRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.UniqueDirectivesPerLocationRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueFragmentNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.UniqueFragmentNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueInputFieldNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.UniqueInputFieldNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueOperationNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.UniqueOperationNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueVariableNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.UniqueVariableNamesRule;\n  }\n});\nObject.defineProperty(exports, \"ValuesOfCorrectTypeRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.ValuesOfCorrectTypeRule;\n  }\n});\nObject.defineProperty(exports, \"VariablesAreInputTypesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.VariablesAreInputTypesRule;\n  }\n});\nObject.defineProperty(exports, \"VariablesInAllowedPositionRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.VariablesInAllowedPositionRule;\n  }\n});\nObject.defineProperty(exports, \"LoneSchemaDefinitionRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.LoneSchemaDefinitionRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueOperationTypesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.UniqueOperationTypesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueTypeNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.UniqueTypeNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueEnumValueNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.UniqueEnumValueNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueFieldDefinitionNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.UniqueFieldDefinitionNamesRule;\n  }\n});\nObject.defineProperty(exports, \"UniqueDirectiveNamesRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.UniqueDirectiveNamesRule;\n  }\n});\nObject.defineProperty(exports, \"PossibleTypeExtensionsRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.PossibleTypeExtensionsRule;\n  }\n});\nObject.defineProperty(exports, \"NoDeprecatedCustomRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.NoDeprecatedCustomRule;\n  }\n});\nObject.defineProperty(exports, \"NoSchemaIntrospectionCustomRule\", {\n  enumerable: true,\n  get: function get() {\n    return _index5.NoSchemaIntrospectionCustomRule;\n  }\n});\nObject.defineProperty(exports, \"GraphQLError\", {\n  enumerable: true,\n  get: function get() {\n    return _index6.GraphQLError;\n  }\n});\nObject.defineProperty(exports, \"syntaxError\", {\n  enumerable: true,\n  get: function get() {\n    return _index6.syntaxError;\n  }\n});\nObject.defineProperty(exports, \"locatedError\", {\n  enumerable: true,\n  get: function get() {\n    return _index6.locatedError;\n  }\n});\nObject.defineProperty(exports, \"printError\", {\n  enumerable: true,\n  get: function get() {\n    return _index6.printError;\n  }\n});\nObject.defineProperty(exports, \"formatError\", {\n  enumerable: true,\n  get: function get() {\n    return _index6.formatError;\n  }\n});\nObject.defineProperty(exports, \"getIntrospectionQuery\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.getIntrospectionQuery;\n  }\n});\nObject.defineProperty(exports, \"getOperationAST\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.getOperationAST;\n  }\n});\nObject.defineProperty(exports, \"getOperationRootType\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.getOperationRootType;\n  }\n});\nObject.defineProperty(exports, \"introspectionFromSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.introspectionFromSchema;\n  }\n});\nObject.defineProperty(exports, \"buildClientSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.buildClientSchema;\n  }\n});\nObject.defineProperty(exports, \"buildASTSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.buildASTSchema;\n  }\n});\nObject.defineProperty(exports, \"buildSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.buildSchema;\n  }\n});\nObject.defineProperty(exports, \"getDescription\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.getDescription;\n  }\n});\nObject.defineProperty(exports, \"extendSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.extendSchema;\n  }\n});\nObject.defineProperty(exports, \"lexicographicSortSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.lexicographicSortSchema;\n  }\n});\nObject.defineProperty(exports, \"printSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.printSchema;\n  }\n});\nObject.defineProperty(exports, \"printType\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.printType;\n  }\n});\nObject.defineProperty(exports, \"printIntrospectionSchema\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.printIntrospectionSchema;\n  }\n});\nObject.defineProperty(exports, \"typeFromAST\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.typeFromAST;\n  }\n});\nObject.defineProperty(exports, \"valueFromAST\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.valueFromAST;\n  }\n});\nObject.defineProperty(exports, \"valueFromASTUntyped\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.valueFromASTUntyped;\n  }\n});\nObject.defineProperty(exports, \"astFromValue\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.astFromValue;\n  }\n});\nObject.defineProperty(exports, \"TypeInfo\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.TypeInfo;\n  }\n});\nObject.defineProperty(exports, \"visitWithTypeInfo\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.visitWithTypeInfo;\n  }\n});\nObject.defineProperty(exports, \"coerceInputValue\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.coerceInputValue;\n  }\n});\nObject.defineProperty(exports, \"concatAST\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.concatAST;\n  }\n});\nObject.defineProperty(exports, \"separateOperations\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.separateOperations;\n  }\n});\nObject.defineProperty(exports, \"stripIgnoredCharacters\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.stripIgnoredCharacters;\n  }\n});\nObject.defineProperty(exports, \"isEqualType\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.isEqualType;\n  }\n});\nObject.defineProperty(exports, \"isTypeSubTypeOf\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.isTypeSubTypeOf;\n  }\n});\nObject.defineProperty(exports, \"doTypesOverlap\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.doTypesOverlap;\n  }\n});\nObject.defineProperty(exports, \"assertValidName\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.assertValidName;\n  }\n});\nObject.defineProperty(exports, \"isValidNameError\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.isValidNameError;\n  }\n});\nObject.defineProperty(exports, \"BreakingChangeType\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.BreakingChangeType;\n  }\n});\nObject.defineProperty(exports, \"DangerousChangeType\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.DangerousChangeType;\n  }\n});\nObject.defineProperty(exports, \"findBreakingChanges\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.findBreakingChanges;\n  }\n});\nObject.defineProperty(exports, \"findDangerousChanges\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.findDangerousChanges;\n  }\n});\nObject.defineProperty(exports, \"findDeprecatedUsages\", {\n  enumerable: true,\n  get: function get() {\n    return _index7.findDeprecatedUsages;\n  }\n});\n\nvar _version = require(\"./version.js\");\n\nvar _graphql = require(\"./graphql.js\");\n\nvar _index = require(\"./type/index.js\");\n\nvar _index2 = require(\"./language/index.js\");\n\nvar _index3 = require(\"./execution/index.js\");\n\nvar _index4 = require(\"./subscription/index.js\");\n\nvar _index5 = require(\"./validation/index.js\");\n\nvar _index6 = require(\"./error/index.js\");\n\nvar _index7 = require(\"./utilities/index.js\");\n", "import { publish } from './graphql/mutations'\r\nimport { Amplify } from \"aws-amplify\";\r\nimport { env } from '$amplify/env/processImages'\r\nimport { generateClient } from \"aws-amplify/data\";\r\n\r\nAmplify.configure(\r\n    {\r\n      API: {\r\n        GraphQL: {\r\n          endpoint: env.AMPLIFY_DATA_GRAPHQL_ENDPOINT,\r\n          region: env.AWS_REGION,\r\n                defaultAuthMode: 'apiKey',\r\n                apiKey: env.API_KEY\r\n        },\r\n      },\r\n    },\r\n    {\r\n      Auth: {\r\n        credentialsProvider: {\r\n          getCredentialsAndIdentityId: async () => ({\r\n            credentials: {\r\n              accessKeyId: env.AWS_ACCESS_KEY_ID,\r\n              secretAccessKey: env.AWS_SECRET_ACCESS_KEY,\r\n              sessionToken: env.AWS_SESSION_TOKEN,\r\n            },\r\n          }),\r\n          clearCredentialsAndIdentityId: () => {\r\n            /* noop */\r\n          },\r\n        },\r\n      },\r\n    }\r\n);\r\n  \r\nconst client = generateClient({\r\n    authMode: \"apiKey\",\r\n  });\r\n\r\nexport const handler = async (event, context) => {\r\n    try {\r\n        const result = await client.graphql({\r\n            query: publish,\r\n            variables: {\r\n                channelName: \"test\",\r\n                content: \"test\",\r\n            }\r\n        });\r\n        console.log('Publish result:', result);\r\n        return 'Success';\r\n      } catch (error) {\r\n        console.error('Error publishing:', error);\r\n        throw error; }\r\n};", "/* tslint:disable */\r\n/* eslint-disable */\r\n// this is an auto generated file. This will be overwritten\r\n\r\nimport * as APITypes from \"./API\";\r\ntype GeneratedMutation<InputType, OutputType> = string & {\r\n  __generatedMutationInput: InputType;\r\n  __generatedMutationOutput: OutputType;\r\n};\r\n\r\nexport const addUserToGroup = /* GraphQL */ `mutation AddUserToGroup($groupName: String!, $userId: String!) {\r\n  addUserToGroup(groupName: $groupName, userId: $userId)\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.AddUserToGroupMutationVariables,\r\n  APITypes.AddUserToGroupMutation\r\n>;\r\nexport const createAnnotation = /* GraphQL */ `mutation CreateAnnotation(\r\n  $condition: ModelAnnotationConditionInput\r\n  $input: CreateAnnotationInput!\r\n) {\r\n  createAnnotation(condition: $condition, input: $input) {\r\n    categoryId\r\n    createdAt\r\n    id\r\n    imageId\r\n    objectId\r\n    obscured\r\n    projectId\r\n    setId\r\n    source\r\n    updatedAt\r\n    x\r\n    y\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateAnnotationMutationVariables,\r\n  APITypes.CreateAnnotationMutation\r\n>;\r\nexport const createAnnotationSet = /* GraphQL */ `mutation CreateAnnotationSet(\r\n  $condition: ModelAnnotationSetConditionInput\r\n  $input: CreateAnnotationSetInput!\r\n) {\r\n  createAnnotationSet(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateAnnotationSetMutationVariables,\r\n  APITypes.CreateAnnotationSetMutation\r\n>;\r\nexport const createCategory = /* GraphQL */ `mutation CreateCategory(\r\n  $condition: ModelCategoryConditionInput\r\n  $input: CreateCategoryInput!\r\n) {\r\n  createCategory(condition: $condition, input: $input) {\r\n    color\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    shortcutKey\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateCategoryMutationVariables,\r\n  APITypes.CreateCategoryMutation\r\n>;\r\nexport const createGroup = /* GraphQL */ `mutation CreateGroup($groupName: String!) {\r\n  createGroup(groupName: $groupName)\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateGroupMutationVariables,\r\n  APITypes.CreateGroupMutation\r\n>;\r\nexport const createImage = /* GraphQL */ `mutation CreateImage(\r\n  $condition: ModelImageConditionInput\r\n  $input: CreateImageInput!\r\n) {\r\n  createImage(condition: $condition, input: $input) {\r\n    altitude_agl\r\n    altitude_egm96\r\n    altitude_wgs84\r\n    cameraSerial\r\n    createdAt\r\n    exifData\r\n    height\r\n    id\r\n    latitude\r\n    longitude\r\n    pitch\r\n    projectId\r\n    roll\r\n    sets {\r\n      nextToken\r\n      __typename\r\n    }\r\n    timestamp\r\n    updatedAt\r\n    width\r\n    yaw\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateImageMutationVariables,\r\n  APITypes.CreateImageMutation\r\n>;\r\nexport const createImageFile = /* GraphQL */ `mutation CreateImageFile(\r\n  $condition: ModelImageFileConditionInput\r\n  $input: CreateImageFileInput!\r\n) {\r\n  createImageFile(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    imageId\r\n    path\r\n    projectId\r\n    s3key\r\n    type\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateImageFileMutationVariables,\r\n  APITypes.CreateImageFileMutation\r\n>;\r\nexport const createImageSet = /* GraphQL */ `mutation CreateImageSet(\r\n  $condition: ModelImageSetConditionInput\r\n  $input: CreateImageSetInput!\r\n) {\r\n  createImageSet(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    images {\r\n      nextToken\r\n      __typename\r\n    }\r\n    name\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateImageSetMutationVariables,\r\n  APITypes.CreateImageSetMutation\r\n>;\r\nexport const createImageSetMembership = /* GraphQL */ `mutation CreateImageSetMembership(\r\n  $condition: ModelImageSetMembershipConditionInput\r\n  $input: CreateImageSetMembershipInput!\r\n) {\r\n  createImageSetMembership(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    image {\r\n      altitude_agl\r\n      altitude_egm96\r\n      altitude_wgs84\r\n      cameraSerial\r\n      createdAt\r\n      exifData\r\n      height\r\n      id\r\n      latitude\r\n      longitude\r\n      pitch\r\n      projectId\r\n      roll\r\n      timestamp\r\n      updatedAt\r\n      width\r\n      yaw\r\n      __typename\r\n    }\r\n    imageId\r\n    imageSet {\r\n      createdAt\r\n      id\r\n      name\r\n      projectId\r\n      updatedAt\r\n      __typename\r\n    }\r\n    imageSetId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateImageSetMembershipMutationVariables,\r\n  APITypes.CreateImageSetMembershipMutation\r\n>;\r\nexport const createLocation = /* GraphQL */ `mutation CreateLocation(\r\n  $condition: ModelLocationConditionInput\r\n  $input: CreateLocationInput!\r\n) {\r\n  createLocation(condition: $condition, input: $input) {\r\n    confidence\r\n    createdAt\r\n    height\r\n    id\r\n    imageId\r\n    projectId\r\n    setId\r\n    source\r\n    updatedAt\r\n    width\r\n    x\r\n    y\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateLocationMutationVariables,\r\n  APITypes.CreateLocationMutation\r\n>;\r\nexport const createLocationSet = /* GraphQL */ `mutation CreateLocationSet(\r\n  $condition: ModelLocationSetConditionInput\r\n  $input: CreateLocationSetInput!\r\n) {\r\n  createLocationSet(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateLocationSetMutationVariables,\r\n  APITypes.CreateLocationSetMutation\r\n>;\r\nexport const createObject = /* GraphQL */ `mutation CreateObject(\r\n  $condition: ModelObjectConditionInput\r\n  $input: CreateObjectInput!\r\n) {\r\n  createObject(condition: $condition, input: $input) {\r\n    categoryId\r\n    createdAt\r\n    id\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateObjectMutationVariables,\r\n  APITypes.CreateObjectMutation\r\n>;\r\nexport const createObservation = /* GraphQL */ `mutation CreateObservation(\r\n  $condition: ModelObservationConditionInput\r\n  $input: CreateObservationInput!\r\n) {\r\n  createObservation(condition: $condition, input: $input) {\r\n    annotationSetId\r\n    createdAt\r\n    id\r\n    locationId\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateObservationMutationVariables,\r\n  APITypes.CreateObservationMutation\r\n>;\r\nexport const createProject = /* GraphQL */ `mutation CreateProject(\r\n  $condition: ModelProjectConditionInput\r\n  $input: CreateProjectInput!\r\n) {\r\n  createProject(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateProjectMutationVariables,\r\n  APITypes.CreateProjectMutation\r\n>;\r\nexport const createQueue = /* GraphQL */ `mutation CreateQueue(\r\n  $condition: ModelQueueConditionInput\r\n  $input: CreateQueueInput!\r\n) {\r\n  createQueue(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    updatedAt\r\n    url\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateQueueMutationVariables,\r\n  APITypes.CreateQueueMutation\r\n>;\r\nexport const createUserProjectMembership = /* GraphQL */ `mutation CreateUserProjectMembership(\r\n  $condition: ModelUserProjectMembershipConditionInput\r\n  $input: CreateUserProjectMembershipInput!\r\n) {\r\n  createUserProjectMembership(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    isAdmin\r\n    projectId\r\n    queueUrl\r\n    updatedAt\r\n    userId\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.CreateUserProjectMembershipMutationVariables,\r\n  APITypes.CreateUserProjectMembershipMutation\r\n>;\r\nexport const deleteAnnotation = /* GraphQL */ `mutation DeleteAnnotation(\r\n  $condition: ModelAnnotationConditionInput\r\n  $input: DeleteAnnotationInput!\r\n) {\r\n  deleteAnnotation(condition: $condition, input: $input) {\r\n    categoryId\r\n    createdAt\r\n    id\r\n    imageId\r\n    objectId\r\n    obscured\r\n    projectId\r\n    setId\r\n    source\r\n    updatedAt\r\n    x\r\n    y\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteAnnotationMutationVariables,\r\n  APITypes.DeleteAnnotationMutation\r\n>;\r\nexport const deleteAnnotationSet = /* GraphQL */ `mutation DeleteAnnotationSet(\r\n  $condition: ModelAnnotationSetConditionInput\r\n  $input: DeleteAnnotationSetInput!\r\n) {\r\n  deleteAnnotationSet(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteAnnotationSetMutationVariables,\r\n  APITypes.DeleteAnnotationSetMutation\r\n>;\r\nexport const deleteCategory = /* GraphQL */ `mutation DeleteCategory(\r\n  $condition: ModelCategoryConditionInput\r\n  $input: DeleteCategoryInput!\r\n) {\r\n  deleteCategory(condition: $condition, input: $input) {\r\n    color\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    shortcutKey\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteCategoryMutationVariables,\r\n  APITypes.DeleteCategoryMutation\r\n>;\r\nexport const deleteImage = /* GraphQL */ `mutation DeleteImage(\r\n  $condition: ModelImageConditionInput\r\n  $input: DeleteImageInput!\r\n) {\r\n  deleteImage(condition: $condition, input: $input) {\r\n    altitude_agl\r\n    altitude_egm96\r\n    altitude_wgs84\r\n    cameraSerial\r\n    createdAt\r\n    exifData\r\n    height\r\n    id\r\n    latitude\r\n    longitude\r\n    pitch\r\n    projectId\r\n    roll\r\n    sets {\r\n      nextToken\r\n      __typename\r\n    }\r\n    timestamp\r\n    updatedAt\r\n    width\r\n    yaw\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteImageMutationVariables,\r\n  APITypes.DeleteImageMutation\r\n>;\r\nexport const deleteImageFile = /* GraphQL */ `mutation DeleteImageFile(\r\n  $condition: ModelImageFileConditionInput\r\n  $input: DeleteImageFileInput!\r\n) {\r\n  deleteImageFile(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    imageId\r\n    path\r\n    projectId\r\n    s3key\r\n    type\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteImageFileMutationVariables,\r\n  APITypes.DeleteImageFileMutation\r\n>;\r\nexport const deleteImageSet = /* GraphQL */ `mutation DeleteImageSet(\r\n  $condition: ModelImageSetConditionInput\r\n  $input: DeleteImageSetInput!\r\n) {\r\n  deleteImageSet(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    images {\r\n      nextToken\r\n      __typename\r\n    }\r\n    name\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteImageSetMutationVariables,\r\n  APITypes.DeleteImageSetMutation\r\n>;\r\nexport const deleteImageSetMembership = /* GraphQL */ `mutation DeleteImageSetMembership(\r\n  $condition: ModelImageSetMembershipConditionInput\r\n  $input: DeleteImageSetMembershipInput!\r\n) {\r\n  deleteImageSetMembership(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    image {\r\n      altitude_agl\r\n      altitude_egm96\r\n      altitude_wgs84\r\n      cameraSerial\r\n      createdAt\r\n      exifData\r\n      height\r\n      id\r\n      latitude\r\n      longitude\r\n      pitch\r\n      projectId\r\n      roll\r\n      timestamp\r\n      updatedAt\r\n      width\r\n      yaw\r\n      __typename\r\n    }\r\n    imageId\r\n    imageSet {\r\n      createdAt\r\n      id\r\n      name\r\n      projectId\r\n      updatedAt\r\n      __typename\r\n    }\r\n    imageSetId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteImageSetMembershipMutationVariables,\r\n  APITypes.DeleteImageSetMembershipMutation\r\n>;\r\nexport const deleteLocation = /* GraphQL */ `mutation DeleteLocation(\r\n  $condition: ModelLocationConditionInput\r\n  $input: DeleteLocationInput!\r\n) {\r\n  deleteLocation(condition: $condition, input: $input) {\r\n    confidence\r\n    createdAt\r\n    height\r\n    id\r\n    imageId\r\n    projectId\r\n    setId\r\n    source\r\n    updatedAt\r\n    width\r\n    x\r\n    y\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteLocationMutationVariables,\r\n  APITypes.DeleteLocationMutation\r\n>;\r\nexport const deleteLocationSet = /* GraphQL */ `mutation DeleteLocationSet(\r\n  $condition: ModelLocationSetConditionInput\r\n  $input: DeleteLocationSetInput!\r\n) {\r\n  deleteLocationSet(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteLocationSetMutationVariables,\r\n  APITypes.DeleteLocationSetMutation\r\n>;\r\nexport const deleteObject = /* GraphQL */ `mutation DeleteObject(\r\n  $condition: ModelObjectConditionInput\r\n  $input: DeleteObjectInput!\r\n) {\r\n  deleteObject(condition: $condition, input: $input) {\r\n    categoryId\r\n    createdAt\r\n    id\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteObjectMutationVariables,\r\n  APITypes.DeleteObjectMutation\r\n>;\r\nexport const deleteObservation = /* GraphQL */ `mutation DeleteObservation(\r\n  $condition: ModelObservationConditionInput\r\n  $input: DeleteObservationInput!\r\n) {\r\n  deleteObservation(condition: $condition, input: $input) {\r\n    annotationSetId\r\n    createdAt\r\n    id\r\n    locationId\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteObservationMutationVariables,\r\n  APITypes.DeleteObservationMutation\r\n>;\r\nexport const deleteProject = /* GraphQL */ `mutation DeleteProject(\r\n  $condition: ModelProjectConditionInput\r\n  $input: DeleteProjectInput!\r\n) {\r\n  deleteProject(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteProjectMutationVariables,\r\n  APITypes.DeleteProjectMutation\r\n>;\r\nexport const deleteQueue = /* GraphQL */ `mutation DeleteQueue(\r\n  $condition: ModelQueueConditionInput\r\n  $input: DeleteQueueInput!\r\n) {\r\n  deleteQueue(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    updatedAt\r\n    url\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteQueueMutationVariables,\r\n  APITypes.DeleteQueueMutation\r\n>;\r\nexport const deleteUserProjectMembership = /* GraphQL */ `mutation DeleteUserProjectMembership(\r\n  $condition: ModelUserProjectMembershipConditionInput\r\n  $input: DeleteUserProjectMembershipInput!\r\n) {\r\n  deleteUserProjectMembership(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    isAdmin\r\n    projectId\r\n    queueUrl\r\n    updatedAt\r\n    userId\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.DeleteUserProjectMembershipMutationVariables,\r\n  APITypes.DeleteUserProjectMembershipMutation\r\n>;\r\nexport const processImages = /* GraphQL */ `mutation ProcessImages($model: String!, $s3keys: [String]!, $threshold: Float) {\r\n  processImages(model: $model, s3keys: $s3keys, threshold: $threshold)\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.ProcessImagesMutationVariables,\r\n  APITypes.ProcessImagesMutation\r\n>;\r\nexport const publish = /* GraphQL */ `mutation Publish($channelName: String!, $content: String!) {\r\n  publish(channelName: $channelName, content: $content) {\r\n    channelName\r\n    content\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.PublishMutationVariables,\r\n  APITypes.PublishMutation\r\n>;\r\nexport const removeUserFromGroup = /* GraphQL */ `mutation RemoveUserFromGroup($groupName: String!, $userId: String!) {\r\n  removeUserFromGroup(groupName: $groupName, userId: $userId)\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.RemoveUserFromGroupMutationVariables,\r\n  APITypes.RemoveUserFromGroupMutation\r\n>;\r\nexport const updateAnnotation = /* GraphQL */ `mutation UpdateAnnotation(\r\n  $condition: ModelAnnotationConditionInput\r\n  $input: UpdateAnnotationInput!\r\n) {\r\n  updateAnnotation(condition: $condition, input: $input) {\r\n    categoryId\r\n    createdAt\r\n    id\r\n    imageId\r\n    objectId\r\n    obscured\r\n    projectId\r\n    setId\r\n    source\r\n    updatedAt\r\n    x\r\n    y\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateAnnotationMutationVariables,\r\n  APITypes.UpdateAnnotationMutation\r\n>;\r\nexport const updateAnnotationSet = /* GraphQL */ `mutation UpdateAnnotationSet(\r\n  $condition: ModelAnnotationSetConditionInput\r\n  $input: UpdateAnnotationSetInput!\r\n) {\r\n  updateAnnotationSet(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateAnnotationSetMutationVariables,\r\n  APITypes.UpdateAnnotationSetMutation\r\n>;\r\nexport const updateCategory = /* GraphQL */ `mutation UpdateCategory(\r\n  $condition: ModelCategoryConditionInput\r\n  $input: UpdateCategoryInput!\r\n) {\r\n  updateCategory(condition: $condition, input: $input) {\r\n    color\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    shortcutKey\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateCategoryMutationVariables,\r\n  APITypes.UpdateCategoryMutation\r\n>;\r\nexport const updateImage = /* GraphQL */ `mutation UpdateImage(\r\n  $condition: ModelImageConditionInput\r\n  $input: UpdateImageInput!\r\n) {\r\n  updateImage(condition: $condition, input: $input) {\r\n    altitude_agl\r\n    altitude_egm96\r\n    altitude_wgs84\r\n    cameraSerial\r\n    createdAt\r\n    exifData\r\n    height\r\n    id\r\n    latitude\r\n    longitude\r\n    pitch\r\n    projectId\r\n    roll\r\n    sets {\r\n      nextToken\r\n      __typename\r\n    }\r\n    timestamp\r\n    updatedAt\r\n    width\r\n    yaw\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateImageMutationVariables,\r\n  APITypes.UpdateImageMutation\r\n>;\r\nexport const updateImageFile = /* GraphQL */ `mutation UpdateImageFile(\r\n  $condition: ModelImageFileConditionInput\r\n  $input: UpdateImageFileInput!\r\n) {\r\n  updateImageFile(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    imageId\r\n    path\r\n    projectId\r\n    s3key\r\n    type\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateImageFileMutationVariables,\r\n  APITypes.UpdateImageFileMutation\r\n>;\r\nexport const updateImageSet = /* GraphQL */ `mutation UpdateImageSet(\r\n  $condition: ModelImageSetConditionInput\r\n  $input: UpdateImageSetInput!\r\n) {\r\n  updateImageSet(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    images {\r\n      nextToken\r\n      __typename\r\n    }\r\n    name\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateImageSetMutationVariables,\r\n  APITypes.UpdateImageSetMutation\r\n>;\r\nexport const updateImageSetMembership = /* GraphQL */ `mutation UpdateImageSetMembership(\r\n  $condition: ModelImageSetMembershipConditionInput\r\n  $input: UpdateImageSetMembershipInput!\r\n) {\r\n  updateImageSetMembership(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    image {\r\n      altitude_agl\r\n      altitude_egm96\r\n      altitude_wgs84\r\n      cameraSerial\r\n      createdAt\r\n      exifData\r\n      height\r\n      id\r\n      latitude\r\n      longitude\r\n      pitch\r\n      projectId\r\n      roll\r\n      timestamp\r\n      updatedAt\r\n      width\r\n      yaw\r\n      __typename\r\n    }\r\n    imageId\r\n    imageSet {\r\n      createdAt\r\n      id\r\n      name\r\n      projectId\r\n      updatedAt\r\n      __typename\r\n    }\r\n    imageSetId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateImageSetMembershipMutationVariables,\r\n  APITypes.UpdateImageSetMembershipMutation\r\n>;\r\nexport const updateLocation = /* GraphQL */ `mutation UpdateLocation(\r\n  $condition: ModelLocationConditionInput\r\n  $input: UpdateLocationInput!\r\n) {\r\n  updateLocation(condition: $condition, input: $input) {\r\n    confidence\r\n    createdAt\r\n    height\r\n    id\r\n    imageId\r\n    projectId\r\n    setId\r\n    source\r\n    updatedAt\r\n    width\r\n    x\r\n    y\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateLocationMutationVariables,\r\n  APITypes.UpdateLocationMutation\r\n>;\r\nexport const updateLocationSet = /* GraphQL */ `mutation UpdateLocationSet(\r\n  $condition: ModelLocationSetConditionInput\r\n  $input: UpdateLocationSetInput!\r\n) {\r\n  updateLocationSet(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateLocationSetMutationVariables,\r\n  APITypes.UpdateLocationSetMutation\r\n>;\r\nexport const updateObject = /* GraphQL */ `mutation UpdateObject(\r\n  $condition: ModelObjectConditionInput\r\n  $input: UpdateObjectInput!\r\n) {\r\n  updateObject(condition: $condition, input: $input) {\r\n    categoryId\r\n    createdAt\r\n    id\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateObjectMutationVariables,\r\n  APITypes.UpdateObjectMutation\r\n>;\r\nexport const updateObservation = /* GraphQL */ `mutation UpdateObservation(\r\n  $condition: ModelObservationConditionInput\r\n  $input: UpdateObservationInput!\r\n) {\r\n  updateObservation(condition: $condition, input: $input) {\r\n    annotationSetId\r\n    createdAt\r\n    id\r\n    locationId\r\n    projectId\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateObservationMutationVariables,\r\n  APITypes.UpdateObservationMutation\r\n>;\r\nexport const updateProject = /* GraphQL */ `mutation UpdateProject(\r\n  $condition: ModelProjectConditionInput\r\n  $input: UpdateProjectInput!\r\n) {\r\n  updateProject(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    updatedAt\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateProjectMutationVariables,\r\n  APITypes.UpdateProjectMutation\r\n>;\r\nexport const updateQueue = /* GraphQL */ `mutation UpdateQueue(\r\n  $condition: ModelQueueConditionInput\r\n  $input: UpdateQueueInput!\r\n) {\r\n  updateQueue(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    name\r\n    projectId\r\n    updatedAt\r\n    url\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateQueueMutationVariables,\r\n  APITypes.UpdateQueueMutation\r\n>;\r\nexport const updateUserProjectMembership = /* GraphQL */ `mutation UpdateUserProjectMembership(\r\n  $condition: ModelUserProjectMembershipConditionInput\r\n  $input: UpdateUserProjectMembershipInput!\r\n) {\r\n  updateUserProjectMembership(condition: $condition, input: $input) {\r\n    createdAt\r\n    id\r\n    isAdmin\r\n    projectId\r\n    queueUrl\r\n    updatedAt\r\n    userId\r\n    __typename\r\n  }\r\n}\r\n` as GeneratedMutation<\r\n  APITypes.UpdateUserProjectMembershipMutationVariables,\r\n  APITypes.UpdateUserProjectMembershipMutation\r\n>;\r\n", "export { DefaultAmplify as Amplify } from './initSingleton.mjs';\n//# sourceMappingURL=index.mjs.map\n", "export { Hub } from './Hub/index.mjs';\nexport { decodeJWT } from './singleton/Auth/utils/index.mjs';\nexport { Amplify, AmplifyClass as AmplifyClassV6 } from './singleton/Amplify.mjs';\nexport { fetchAuthSession } from './singleton/apis/fetchAuthSession.mjs';\nexport { clearCredentials } from './singleton/apis/clearCredentials.mjs';\nexport { getId } from './awsClients/cognitoIdentity/getId.mjs';\nexport { getCredentialsForIdentity } from './awsClients/cognitoIdentity/getCredentialsForIdentity.mjs';\nexport { defaultStorage, sessionStorage, sharedInMemoryStorage } from './storage/index.mjs';\nexport { Cache } from './Cache/index.mjs';\nexport { I18n } from './I18n/index.mjs';\nexport { ConsoleLogger } from './Logger/ConsoleLogger.mjs';\nexport { ServiceWorkerClass as ServiceWorker } from './ServiceWorker/ServiceWorker.mjs';\nexport { CookieStorage } from './storage/CookieStorage.mjs';\n//# sourceMappingURL=index.mjs.map\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Logging constants\nexport const AWS_CLOUDWATCH_CATEGORY = 'Logging';\nexport const USER_AGENT_HEADER = 'x-amz-user-agent';\n// Error exception code constants\nexport const NO_HUBCALLBACK_PROVIDED_EXCEPTION = 'NoHubcallbackProvidedException';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var LogType;\n(function (LogType) {\n    LogType[\"DEBUG\"] = \"DEBUG\";\n    LogType[\"ERROR\"] = \"ERROR\";\n    LogType[\"INFO\"] = \"INFO\";\n    LogType[\"WARN\"] = \"WARN\";\n    LogType[\"VERBOSE\"] = \"VERBOSE\";\n    LogType[\"NONE\"] = \"NONE\";\n})(LogType || (LogType = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AWS_CLOUDWATCH_CATEGORY } from '../constants';\nimport { LogType } from './types';\nconst LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n    NONE: 6,\n};\n/**\n * Write logs\n * @class Logger\n */\nexport class ConsoleLogger {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    constructor(name, level = LogType.WARN) {\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    _padding(n) {\n        return n < 10 ? '0' + n : '' + n;\n    }\n    _ts() {\n        const dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    }\n    configure(config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    }\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LogType|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    _log(type, ...msg) {\n        let loggerLevelName = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            loggerLevelName = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            loggerLevelName = window.LOG_LEVEL;\n        }\n        const loggerLevel = LOG_LEVELS[loggerLevelName];\n        const typeLevel = LOG_LEVELS[type];\n        if (!(typeLevel >= loggerLevel)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        let log = console.log.bind(console);\n        if (type === LogType.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LogType.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        if (ConsoleLogger.BIND_ALL_LOG_LEVELS) {\n            if (type === LogType.INFO && console.info) {\n                log = console.info.bind(console);\n            }\n            if (type === LogType.DEBUG && console.debug) {\n                log = console.debug.bind(console);\n            }\n        }\n        const prefix = `[${type}] ${this._ts()} ${this.name}`;\n        let message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = `${prefix} - ${msg[0]}`;\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = `${prefix} ${msg[0]}`;\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            let obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = `${prefix} - ${msg[0]} ${obj}`;\n            log(`${prefix} - ${msg[0]}`, obj);\n        }\n        else {\n            message = `${prefix} ${msg}`;\n            log(prefix, msg);\n        }\n        for (const plugin of this._pluggables) {\n            const logEvent = { message, timestamp: Date.now() };\n            plugin.pushLogs([logEvent]);\n        }\n    }\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    log(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    info(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    warn(...msg) {\n        this._log(LogType.WARN, ...msg);\n    }\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    error(...msg) {\n        this._log(LogType.ERROR, ...msg);\n    }\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    debug(...msg) {\n        this._log(LogType.DEBUG, ...msg);\n    }\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    verbose(...msg) {\n        this._log(LogType.VERBOSE, ...msg);\n    }\n    addPluggable(pluggable) {\n        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    }\n    listPluggables() {\n        return this._pluggables;\n    }\n}\nConsoleLogger.LOG_LEVEL = null;\nConsoleLogger.BIND_ALL_LOG_LEVELS = false;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport class AmplifyError extends Error {\n    /**\n     *  Constructs an AmplifyError.\n     *\n     * @param message text that describes the main problem.\n     * @param underlyingError the underlying cause of the error.\n     * @param recoverySuggestion suggestion to recover from the error.\n     *\n     */\n    constructor({ message, name, recoverySuggestion, underlyingError, }) {\n        super(message);\n        this.name = name;\n        this.underlyingError = underlyingError;\n        this.recoverySuggestion = recoverySuggestion;\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AmplifyError;\n        Object.setPrototypeOf(this, AmplifyError.prototype);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AmplifyErrorCode;\n(function (AmplifyErrorCode) {\n    AmplifyErrorCode[\"NoEndpointId\"] = \"NoEndpointId\";\n    AmplifyErrorCode[\"PlatformNotSupported\"] = \"PlatformNotSupported\";\n    AmplifyErrorCode[\"Unknown\"] = \"Unknown\";\n    AmplifyErrorCode[\"NetworkError\"] = \"NetworkError\";\n})(AmplifyErrorCode || (AmplifyErrorCode = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from './AmplifyError';\nexport const createAssertionFunction = (errorMap, AssertionError = AmplifyError) => (assertion, name, additionalContext) => {\n    const { message, recoverySuggestion } = errorMap[name];\n    if (!assertion) {\n        throw new AssertionError({\n            name,\n            message: additionalContext\n                ? `${message} ${additionalContext}`\n                : message,\n            recoverySuggestion,\n        });\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants';\nimport { AmplifyError } from '../errors';\nexport const AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined'\n    ? Symbol('amplify_default')\n    : '@@amplify_default');\nconst logger = new ConsoleLogger('Hub');\nexport class HubClass {\n    constructor(name) {\n        this.listeners = new Map();\n        this.protectedChannels = [\n            'core',\n            'auth',\n            'api',\n            'analytics',\n            'interactions',\n            'pubsub',\n            'storage',\n            'ui',\n            'xr',\n        ];\n        this.name = name;\n    }\n    /**\n     * Used internally to remove a Hub listener.\n     *\n     * @remarks\n     * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n     */\n    _remove(channel, listener) {\n        const holder = this.listeners.get(channel);\n        if (!holder) {\n            logger.warn(`No listeners for ${channel}`);\n            return;\n        }\n        this.listeners.set(channel, [\n            ...holder.filter(({ callback }) => callback !== listener),\n        ]);\n    }\n    dispatch(channel, payload, source, ampSymbol) {\n        if (typeof channel === 'string' &&\n            this.protectedChannels.indexOf(channel) > -1) {\n            const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n            if (!hasAccess) {\n                logger.warn(`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`);\n            }\n        }\n        const capsule = {\n            channel,\n            payload: { ...payload },\n            source,\n            patternInfo: [],\n        };\n        try {\n            this._toListeners(capsule);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    }\n    listen(channel, callback, listenerName = 'noname') {\n        let cb;\n        if (typeof callback !== 'function') {\n            throw new AmplifyError({\n                name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n                message: 'No callback supplied to Hub',\n            });\n        }\n        else {\n            // Needs to be casted as a more generic type\n            cb = callback;\n        }\n        let holder = this.listeners.get(channel);\n        if (!holder) {\n            holder = [];\n            this.listeners.set(channel, holder);\n        }\n        holder.push({\n            name: listenerName,\n            callback: cb,\n        });\n        return () => {\n            this._remove(channel, cb);\n        };\n    }\n    _toListeners(capsule) {\n        const { channel, payload } = capsule;\n        const holder = this.listeners.get(channel);\n        if (holder) {\n            holder.forEach(listener => {\n                logger.debug(`Dispatching to ${channel} with `, payload);\n                try {\n                    listener.callback(capsule);\n                }\n                catch (e) {\n                    logger.error(e);\n                }\n            });\n        }\n    }\n}\n/* We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events. */\nexport const Hub = new HubClass('__default__');\n/**\n * @internal\n *\n * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n *\n */\nexport const HubInternal = new HubClass('internal-hub');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from '../../errors';\nexport const getCrypto = () => {\n    if (typeof window === 'object' && typeof window.crypto === 'object') {\n        return window.crypto;\n    }\n    // Next.js global polyfill\n    if (typeof crypto === 'object') {\n        return crypto;\n    }\n    throw new AmplifyError({\n        name: 'MissingPolyfill',\n        message: 'Cannot resolve the `crypto` function from the environment.',\n    });\n};\nexport const getBtoa = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n        return window.btoa;\n    }\n    // Next.js global polyfill\n    if (typeof btoa === 'function') {\n        return btoa;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `btoa` function from the environment.',\n    });\n};\nexport const getAtob = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob;\n    }\n    // Next.js global polyfill\n    if (typeof atob === 'function') {\n        return atob;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `atob` function from the environment.',\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getAtob } from '../../globalHelpers';\nexport const base64Decoder = {\n    convert(input) {\n        return getAtob()(input);\n    },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../../../errors';\nexport var AuthConfigurationErrorCode;\n(function (AuthConfigurationErrorCode) {\n    AuthConfigurationErrorCode[\"AuthTokenConfigException\"] = \"AuthTokenConfigException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolAndIdentityPoolException\"] = \"AuthUserPoolAndIdentityPoolException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolException\"] = \"AuthUserPoolException\";\n    AuthConfigurationErrorCode[\"InvalidIdentityPoolIdException\"] = \"InvalidIdentityPoolIdException\";\n    AuthConfigurationErrorCode[\"OAuthNotConfigureException\"] = \"OAuthNotConfigureException\";\n})(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\nconst authConfigurationErrorMap = {\n    [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n        message: 'Auth Token Provider not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n        message: 'Auth UserPool or IdentityPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolException]: {\n        message: 'Auth UserPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.',\n    },\n    [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n        message: 'Invalid identity pool id provided.',\n        recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n    },\n    [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n        message: 'oauth param not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.',\n    },\n};\nexport const assert = createAssertionFunction(authConfigurationErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Decoder } from '../../../utils/convert';\nimport { AuthConfigurationErrorCode, assert } from './errorHelpers';\nexport function assertTokenProviderConfig(cognitoConfig) {\n    let assertionValid = true; // assume valid until otherwise proveed\n    if (!cognitoConfig) {\n        assertionValid = false;\n    }\n    else {\n        assertionValid =\n            !!cognitoConfig.userPoolId && !!cognitoConfig.userPoolClientId;\n    }\n    assert(assertionValid, AuthConfigurationErrorCode.AuthUserPoolException);\n}\nexport function assertOAuthConfig(cognitoConfig) {\n    const validOAuthConfig = !!cognitoConfig?.loginWith?.oauth?.domain &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignOut &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignIn &&\n        !!cognitoConfig?.loginWith?.oauth?.responseType;\n    assert(validOAuthConfig, AuthConfigurationErrorCode.OAuthNotConfigureException);\n}\nexport function assertIdentityPoolIdConfig(cognitoConfig) {\n    const validConfig = !!cognitoConfig?.identityPoolId;\n    assert(validConfig, AuthConfigurationErrorCode.InvalidIdentityPoolIdException);\n}\n/**\n * Decodes payload of JWT token\n *\n * @param {String} token A string representing a token to be decoded\n * @throws {@link Error} - Throws error when token is invalid or payload malformed.\n */\nexport function decodeJWT(token) {\n    const tokenParts = token.split('.');\n    if (tokenParts.length !== 3) {\n        throw new Error('Invalid token');\n    }\n    try {\n        const base64WithUrlSafe = tokenParts[1];\n        const base64 = base64WithUrlSafe.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonStr = decodeURIComponent(base64Decoder\n            .convert(base64)\n            .split('')\n            .map(char => `%${`00${char.charCodeAt(0).toString(16)}`.slice(-2)}`)\n            .join(''));\n        const payload = JSON.parse(jsonStr);\n        return {\n            toString: () => token,\n            payload,\n        };\n    }\n    catch (err) {\n        throw new Error('Invalid token payload');\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const isNonRetryableError = (obj) => {\n    const key = 'nonRetryable';\n    return obj && obj[key];\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../../Logger/ConsoleLogger';\nimport { isNonRetryableError } from './isNonRetryableError';\nconst logger = new ConsoleLogger('retryUtil');\n/**\n * @private\n * Internal use of Amplify only\n */\nexport async function retry(functionToRetry, args, delayFn, onTerminate) {\n    if (typeof functionToRetry !== 'function') {\n        throw Error('functionToRetry must be a function');\n    }\n    // TODO(eslint): remove this linter suppression with refactoring.\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise(async (resolve, reject) => {\n        let attempt = 0;\n        let terminated = false;\n        let timeout;\n        let wakeUp = () => {\n            // no-op\n        }; // will be replaced with a resolver()\n        // used after the loop if terminated while waiting for a timer.\n        let lastError;\n        onTerminate &&\n            onTerminate.then(() => {\n                // signal not to try anymore.\n                terminated = true;\n                // stop sleeping if we're sleeping.\n                clearTimeout(timeout);\n                wakeUp();\n            });\n        // TODO(eslint): remove this linter suppression with refactoring.\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (!terminated) {\n            attempt++;\n            logger.debug(`${functionToRetry.name} attempt #${attempt} with this vars: ${JSON.stringify(args)}`);\n            try {\n                resolve(await functionToRetry(...args));\n                return;\n            }\n            catch (err) {\n                lastError = err;\n                logger.debug(`error on ${functionToRetry.name}`, err);\n                if (isNonRetryableError(err)) {\n                    logger.debug(`${functionToRetry.name} non retryable error`, err);\n                    reject(err);\n                    return;\n                }\n                const retryIn = delayFn(attempt, args, err);\n                logger.debug(`${functionToRetry.name} retrying in ${retryIn} ms`);\n                // we check `terminated` again here because it could have flipped\n                // in the time it took `functionToRetry` to return.\n                if (retryIn === false || terminated) {\n                    reject(err);\n                    return;\n                }\n                else {\n                    await new Promise(_resolve => {\n                        wakeUp = _resolve; // export wakeUp for onTerminate handling\n                        timeout = setTimeout(wakeUp, retryIn);\n                    });\n                }\n            }\n        }\n        // reached if terminated while waiting for a timer.\n        reject(lastError);\n    });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const deepFreeze = (object) => {\n    const propNames = Reflect.ownKeys(object);\n    for (const name of propNames) {\n        const value = object[name];\n        if ((value && typeof value === 'object') || typeof value === 'function') {\n            deepFreeze(value);\n        }\n    }\n    return Object.freeze(object);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from './Logger';\nimport { AmplifyError } from './errors';\nconst logger = new ConsoleLogger('parseAWSExports');\nconst authTypeMapping = {\n    API_KEY: 'apiKey',\n    AWS_IAM: 'iam',\n    AMAZON_COGNITO_USER_POOLS: 'userPool',\n    OPENID_CONNECT: 'oidc',\n    NONE: 'none',\n    AWS_LAMBDA: 'lambda',\n    // `LAMBDA` is an incorrect value that was added during the v6 rewrite.\n    // Keeping it as a valid value until v7 to prevent breaking customers who might\n    // be relying on it as a workaround.\n    // ref: https://github.com/aws-amplify/amplify-js/pull/12922\n    // TODO: @v7 remove next line\n    LAMBDA: 'lambda',\n};\n/**\n * Converts the object imported from `aws-exports.js` or `amplifyconfiguration.json` files generated by\n * the Amplify CLI into an object that conforms to the {@link ResourcesConfig}.\n *\n * @param config A configuration object imported  from `aws-exports.js` or `amplifyconfiguration.json`.\n *\n * @returns An object that conforms to the {@link ResourcesConfig} .\n */\nexport const parseAWSExports = (config = {}) => {\n    if (!Object.prototype.hasOwnProperty.call(config, 'aws_project_region')) {\n        throw new AmplifyError({\n            name: 'InvalidParameterException',\n            message: 'Invalid config parameter.',\n            recoverySuggestion: 'Ensure passing the config object imported from  `amplifyconfiguration.json`.',\n        });\n    }\n    const { aws_appsync_apiKey, aws_appsync_authenticationType, aws_appsync_graphqlEndpoint, aws_appsync_region, aws_bots_config, aws_cognito_identity_pool_id, aws_cognito_sign_up_verification_method, aws_cognito_mfa_configuration, aws_cognito_mfa_types, aws_cognito_password_protection_settings, aws_cognito_verification_mechanisms, aws_cognito_signup_attributes, aws_cognito_social_providers, aws_cognito_username_attributes, aws_mandatory_sign_in, aws_mobile_analytics_app_id, aws_mobile_analytics_app_region, aws_user_files_s3_bucket, aws_user_files_s3_bucket_region, aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing, aws_user_pools_id, aws_user_pools_web_client_id, geo, oauth, predictions, aws_cloud_logic_custom, Notifications, modelIntrospection, } = config;\n    const amplifyConfig = {};\n    // Analytics\n    if (aws_mobile_analytics_app_id) {\n        amplifyConfig.Analytics = {\n            Pinpoint: {\n                appId: aws_mobile_analytics_app_id,\n                region: aws_mobile_analytics_app_region,\n            },\n        };\n    }\n    // Notifications\n    const { InAppMessaging, Push } = Notifications ?? {};\n    if (InAppMessaging?.AWSPinpoint || Push?.AWSPinpoint) {\n        if (InAppMessaging?.AWSPinpoint) {\n            const { appId, region } = InAppMessaging.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                InAppMessaging: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n        if (Push?.AWSPinpoint) {\n            const { appId, region } = Push.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                ...amplifyConfig.Notifications,\n                PushNotification: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n    }\n    // Interactions\n    if (Array.isArray(aws_bots_config)) {\n        amplifyConfig.Interactions = {\n            LexV1: Object.fromEntries(aws_bots_config.map(bot => [bot.name, bot])),\n        };\n    }\n    // API\n    if (aws_appsync_graphqlEndpoint) {\n        const defaultAuthMode = authTypeMapping[aws_appsync_authenticationType];\n        if (!defaultAuthMode) {\n            logger.debug(`Invalid authentication type ${aws_appsync_authenticationType}. Falling back to IAM.`);\n        }\n        amplifyConfig.API = {\n            GraphQL: {\n                endpoint: aws_appsync_graphqlEndpoint,\n                apiKey: aws_appsync_apiKey,\n                region: aws_appsync_region,\n                defaultAuthMode: defaultAuthMode ?? 'iam',\n            },\n        };\n        if (modelIntrospection) {\n            amplifyConfig.API.GraphQL.modelIntrospection = modelIntrospection;\n        }\n    }\n    // Auth\n    const mfaConfig = aws_cognito_mfa_configuration\n        ? {\n            status: aws_cognito_mfa_configuration &&\n                aws_cognito_mfa_configuration.toLowerCase(),\n            totpEnabled: aws_cognito_mfa_types?.includes('TOTP') ?? false,\n            smsEnabled: aws_cognito_mfa_types?.includes('SMS') ?? false,\n        }\n        : undefined;\n    const passwordFormatConfig = aws_cognito_password_protection_settings\n        ? {\n            minLength: aws_cognito_password_protection_settings.passwordPolicyMinLength,\n            requireLowercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_LOWERCASE') ?? false,\n            requireUppercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_UPPERCASE') ?? false,\n            requireNumbers: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_NUMBERS') ?? false,\n            requireSpecialCharacters: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_SYMBOLS') ?? false,\n        }\n        : undefined;\n    const mergedUserAttributes = Array.from(new Set([\n        ...(aws_cognito_verification_mechanisms ?? []),\n        ...(aws_cognito_signup_attributes ?? []),\n    ]));\n    const userAttributes = mergedUserAttributes.reduce((attributes, key) => ({\n        ...attributes,\n        // All user attributes generated by the CLI are required\n        [key.toLowerCase()]: { required: true },\n    }), {});\n    const loginWithEmailEnabled = aws_cognito_username_attributes?.includes('EMAIL') ?? false;\n    const loginWithPhoneEnabled = aws_cognito_username_attributes?.includes('PHONE_NUMBER') ?? false;\n    if (aws_cognito_identity_pool_id || aws_user_pools_id) {\n        amplifyConfig.Auth = {\n            Cognito: {\n                identityPoolId: aws_cognito_identity_pool_id,\n                allowGuestAccess: aws_mandatory_sign_in !== 'enable',\n                signUpVerificationMethod: aws_cognito_sign_up_verification_method,\n                userAttributes,\n                userPoolClientId: aws_user_pools_web_client_id,\n                userPoolId: aws_user_pools_id,\n                mfa: mfaConfig,\n                passwordFormat: passwordFormatConfig,\n                loginWith: {\n                    username: !(loginWithEmailEnabled || loginWithPhoneEnabled),\n                    email: loginWithEmailEnabled,\n                    phone: loginWithPhoneEnabled,\n                },\n            },\n        };\n    }\n    const hasOAuthConfig = oauth ? Object.keys(oauth).length > 0 : false;\n    const hasSocialProviderConfig = aws_cognito_social_providers\n        ? aws_cognito_social_providers.length > 0\n        : false;\n    if (amplifyConfig.Auth && hasOAuthConfig) {\n        amplifyConfig.Auth.Cognito.loginWith = {\n            ...amplifyConfig.Auth.Cognito.loginWith,\n            oauth: {\n                ...getOAuthConfig(oauth),\n                ...(hasSocialProviderConfig && {\n                    providers: parseSocialProviders(aws_cognito_social_providers),\n                }),\n            },\n        };\n    }\n    // Storage\n    if (aws_user_files_s3_bucket) {\n        amplifyConfig.Storage = {\n            S3: {\n                bucket: aws_user_files_s3_bucket,\n                region: aws_user_files_s3_bucket_region,\n                dangerouslyConnectToHttpEndpointForTesting: aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing,\n            },\n        };\n    }\n    // Geo\n    if (geo) {\n        const { amazon_location_service } = geo;\n        amplifyConfig.Geo = {\n            LocationService: {\n                maps: amazon_location_service.maps,\n                geofenceCollections: amazon_location_service.geofenceCollections,\n                searchIndices: amazon_location_service.search_indices,\n                region: amazon_location_service.region,\n            },\n        };\n    }\n    // REST API\n    if (aws_cloud_logic_custom) {\n        amplifyConfig.API = {\n            ...amplifyConfig.API,\n            REST: aws_cloud_logic_custom.reduce((acc, api) => {\n                const { name, endpoint, region, service } = api;\n                return {\n                    ...acc,\n                    [name]: {\n                        endpoint,\n                        ...(service ? { service } : undefined),\n                        ...(region ? { region } : undefined),\n                    },\n                };\n            }, {}),\n        };\n    }\n    // Predictions\n    if (predictions) {\n        // map VoiceId from speechGenerator defaults to voiceId\n        const { VoiceId: voiceId } = predictions?.convert?.speechGenerator?.defaults ?? {};\n        amplifyConfig.Predictions = voiceId\n            ? {\n                ...predictions,\n                convert: {\n                    ...predictions.convert,\n                    speechGenerator: {\n                        ...predictions.convert.speechGenerator,\n                        defaults: { voiceId },\n                    },\n                },\n            }\n            : predictions;\n    }\n    return amplifyConfig;\n};\nconst getRedirectUrl = (redirectStr) => redirectStr?.split(',') ?? [];\nconst getOAuthConfig = ({ domain, scope, redirectSignIn, redirectSignOut, responseType, }) => ({\n    domain,\n    scopes: scope,\n    redirectSignIn: getRedirectUrl(redirectSignIn),\n    redirectSignOut: getRedirectUrl(redirectSignOut),\n    responseType,\n});\nconst parseSocialProviders = (aws_cognito_social_providers) => {\n    return aws_cognito_social_providers.map((provider) => {\n        const updatedProvider = provider.toLowerCase();\n        return updatedProvider.charAt(0).toUpperCase() + updatedProvider.slice(1);\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const ADD_OAUTH_LISTENER = Symbol('oauth-listener');\n", "export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';", "import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isAmplifyOutputs(config) {\n    // version format initially will be '1' but is expected to be something like x.y where x is major and y minor version\n    const { version } = config;\n    if (!version) {\n        return false;\n    }\n    return version.startsWith('1');\n}\nfunction parseStorage(amplifyOutputsStorageProperties) {\n    if (!amplifyOutputsStorageProperties) {\n        return undefined;\n    }\n    const { bucket_name, aws_region, buckets } = amplifyOutputsStorageProperties;\n    return {\n        S3: {\n            bucket: bucket_name,\n            region: aws_region,\n            buckets: buckets && createBucketInfoMap(buckets),\n        },\n    };\n}\nfunction parseAuth(amplifyOutputsAuthProperties) {\n    if (!amplifyOutputsAuthProperties) {\n        return undefined;\n    }\n    const { user_pool_id, user_pool_client_id, identity_pool_id, password_policy, mfa_configuration, mfa_methods, unauthenticated_identities_enabled, oauth, username_attributes, standard_required_attributes, } = amplifyOutputsAuthProperties;\n    const authConfig = {\n        Cognito: {\n            userPoolId: user_pool_id,\n            userPoolClientId: user_pool_client_id,\n        },\n    };\n    if (identity_pool_id) {\n        authConfig.Cognito = {\n            ...authConfig.Cognito,\n            identityPoolId: identity_pool_id,\n        };\n    }\n    if (password_policy) {\n        authConfig.Cognito.passwordFormat = {\n            requireLowercase: password_policy.require_lowercase,\n            requireNumbers: password_policy.require_numbers,\n            requireUppercase: password_policy.require_uppercase,\n            requireSpecialCharacters: password_policy.require_symbols,\n            minLength: password_policy.min_length ?? 6,\n        };\n    }\n    if (mfa_configuration) {\n        authConfig.Cognito.mfa = {\n            status: getMfaStatus(mfa_configuration),\n            smsEnabled: mfa_methods?.includes('SMS'),\n            totpEnabled: mfa_methods?.includes('TOTP'),\n        };\n    }\n    if (unauthenticated_identities_enabled) {\n        authConfig.Cognito.allowGuestAccess = unauthenticated_identities_enabled;\n    }\n    if (oauth) {\n        authConfig.Cognito.loginWith = {\n            oauth: {\n                domain: oauth.domain,\n                redirectSignIn: oauth.redirect_sign_in_uri,\n                redirectSignOut: oauth.redirect_sign_out_uri,\n                responseType: oauth.response_type === 'token' ? 'token' : 'code',\n                scopes: oauth.scopes,\n                providers: getOAuthProviders(oauth.identity_providers),\n            },\n        };\n    }\n    if (username_attributes) {\n        authConfig.Cognito.loginWith = {\n            ...authConfig.Cognito.loginWith,\n            email: username_attributes.includes('email'),\n            phone: username_attributes.includes('phone_number'),\n            // Signing in with a username is not currently supported in Gen2, this should always evaluate to false\n            username: username_attributes.includes('username'),\n        };\n    }\n    if (standard_required_attributes) {\n        authConfig.Cognito.userAttributes = standard_required_attributes.reduce((acc, curr) => ({ ...acc, [curr]: { required: true } }), {});\n    }\n    return authConfig;\n}\nexport function parseAnalytics(amplifyOutputsAnalyticsProperties) {\n    if (!amplifyOutputsAnalyticsProperties?.amazon_pinpoint) {\n        return undefined;\n    }\n    const { amazon_pinpoint } = amplifyOutputsAnalyticsProperties;\n    return {\n        Pinpoint: {\n            appId: amazon_pinpoint.app_id,\n            region: amazon_pinpoint.aws_region,\n        },\n    };\n}\nfunction parseGeo(amplifyOutputsAnalyticsProperties) {\n    if (!amplifyOutputsAnalyticsProperties) {\n        return undefined;\n    }\n    const { aws_region, geofence_collections, maps, search_indices } = amplifyOutputsAnalyticsProperties;\n    return {\n        LocationService: {\n            region: aws_region,\n            searchIndices: search_indices,\n            geofenceCollections: geofence_collections,\n            maps,\n        },\n    };\n}\nfunction parseData(amplifyOutputsDataProperties) {\n    if (!amplifyOutputsDataProperties) {\n        return undefined;\n    }\n    const { aws_region, default_authorization_type, url, api_key, model_introspection, } = amplifyOutputsDataProperties;\n    const GraphQL = {\n        endpoint: url,\n        defaultAuthMode: getGraphQLAuthMode(default_authorization_type),\n        region: aws_region,\n        apiKey: api_key,\n        modelIntrospection: model_introspection,\n    };\n    return {\n        GraphQL,\n    };\n}\nfunction parseNotifications(amplifyOutputsNotificationsProperties) {\n    if (!amplifyOutputsNotificationsProperties) {\n        return undefined;\n    }\n    const { aws_region, channels, amazon_pinpoint_app_id } = amplifyOutputsNotificationsProperties;\n    const hasInAppMessaging = channels.includes('IN_APP_MESSAGING');\n    const hasPushNotification = channels.includes('APNS') || channels.includes('FCM');\n    if (!(hasInAppMessaging || hasPushNotification)) {\n        return undefined;\n    }\n    // At this point, we know the Amplify outputs contains at least one supported channel\n    const notificationsConfig = {};\n    if (hasInAppMessaging) {\n        notificationsConfig.InAppMessaging = {\n            Pinpoint: {\n                appId: amazon_pinpoint_app_id,\n                region: aws_region,\n            },\n        };\n    }\n    if (hasPushNotification) {\n        notificationsConfig.PushNotification = {\n            Pinpoint: {\n                appId: amazon_pinpoint_app_id,\n                region: aws_region,\n            },\n        };\n    }\n    return notificationsConfig;\n}\nexport function parseAmplifyOutputs(amplifyOutputs) {\n    const resourcesConfig = {};\n    if (amplifyOutputs.storage) {\n        resourcesConfig.Storage = parseStorage(amplifyOutputs.storage);\n    }\n    if (amplifyOutputs.auth) {\n        resourcesConfig.Auth = parseAuth(amplifyOutputs.auth);\n    }\n    if (amplifyOutputs.analytics) {\n        resourcesConfig.Analytics = parseAnalytics(amplifyOutputs.analytics);\n    }\n    if (amplifyOutputs.geo) {\n        resourcesConfig.Geo = parseGeo(amplifyOutputs.geo);\n    }\n    if (amplifyOutputs.data) {\n        resourcesConfig.API = parseData(amplifyOutputs.data);\n    }\n    if (amplifyOutputs.notifications) {\n        resourcesConfig.Notifications = parseNotifications(amplifyOutputs.notifications);\n    }\n    return resourcesConfig;\n}\nconst authModeNames = {\n    AMAZON_COGNITO_USER_POOLS: 'userPool',\n    API_KEY: 'apiKey',\n    AWS_IAM: 'iam',\n    AWS_LAMBDA: 'lambda',\n    OPENID_CONNECT: 'oidc',\n};\nfunction getGraphQLAuthMode(authType) {\n    return authModeNames[authType];\n}\nconst providerNames = {\n    GOOGLE: 'Google',\n    LOGIN_WITH_AMAZON: 'Amazon',\n    FACEBOOK: 'Facebook',\n    SIGN_IN_WITH_APPLE: 'Apple',\n};\nfunction getOAuthProviders(providers = []) {\n    return providers.reduce((oAuthProviders, provider) => {\n        if (providerNames[provider] !== undefined) {\n            oAuthProviders.push(providerNames[provider]);\n        }\n        return oAuthProviders;\n    }, []);\n}\nfunction getMfaStatus(mfaConfiguration) {\n    if (mfaConfiguration === 'OPTIONAL')\n        return 'optional';\n    if (mfaConfiguration === 'REQUIRED')\n        return 'on';\n    return 'off';\n}\nfunction createBucketInfoMap(buckets) {\n    const mappedBuckets = {};\n    buckets.forEach(({ name, bucket_name: bucketName, aws_region: region }) => {\n        if (name in mappedBuckets) {\n            throw new Error(`Duplicate friendly name found: ${name}. Name must be unique.`);\n        }\n        mappedBuckets[name] = {\n            bucketName,\n            region,\n        };\n    });\n    return mappedBuckets;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseAWSExports } from '../parseAWSExports';\nimport { isAmplifyOutputs, parseAmplifyOutputs } from '../parseAmplifyOutputs';\n/**\n * Parses the variety of configuration shapes that Amplify can accept into a ResourcesConfig.\n *\n * @param amplifyConfig An Amplify configuration object conforming to one of the supported schemas.\n * @return A ResourcesConfig for the provided configuration object.\n */\nexport const parseAmplifyConfig = (amplifyConfig) => {\n    if (Object.keys(amplifyConfig).some(key => key.startsWith('aws_'))) {\n        return parseAWSExports(amplifyConfig);\n    }\n    else if (isAmplifyOutputs(amplifyConfig)) {\n        return parseAmplifyOutputs(amplifyConfig);\n    }\n    else {\n        return amplifyConfig;\n    }\n};\n", "export function isTokenExpired({ expiresAt, clockDrift, }) {\n    const currentTime = Date.now();\n    return currentTime + clockDrift > expiresAt;\n}\nexport class AuthClass {\n    /**\n     * Configure Auth category\n     *\n     * @internal\n     *\n     * @param authResourcesConfig - Resources configurations required by Auth providers.\n     * @param authOptions - Client options used by library\n     *\n     * @returns void\n     */\n    configure(authResourcesConfig, authOptions) {\n        this.authConfig = authResourcesConfig;\n        this.authOptions = authOptions;\n    }\n    /**\n     * Fetch the auth tokens, and the temporary AWS credentials and identity if they are configured. By default it\n     * does not refresh the auth tokens or credentials if they are loaded in storage already. You can force a refresh\n     * with `{ forceRefresh: true }` input.\n     *\n     * @param options - Options configuring the fetch behavior.\n     *\n     * @returns Promise of current auth session {@link AuthSession}.\n     */\n    async fetchAuthSession(options = {}) {\n        let credentialsAndIdentityId;\n        let userSub;\n        // Get tokens will throw if session cannot be refreshed (network or service error) or return null if not available\n        const tokens = await this.getTokens(options);\n        if (tokens) {\n            userSub = tokens.accessToken?.payload?.sub;\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    tokens,\n                    authenticated: true,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        else {\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    authenticated: false,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        return {\n            tokens,\n            credentials: credentialsAndIdentityId?.credentials,\n            identityId: credentialsAndIdentityId?.identityId,\n            userSub,\n        };\n    }\n    async clearCredentials() {\n        await this.authOptions?.credentialsProvider?.clearCredentialsAndIdentityId();\n    }\n    async getTokens(options) {\n        return ((await this.authOptions?.tokenProvider?.getTokens(options)) ?? undefined);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var Framework;\n(function (Framework) {\n    // < 100 - Web frameworks\n    Framework[\"WebUnknown\"] = \"0\";\n    Framework[\"React\"] = \"1\";\n    Framework[\"NextJs\"] = \"2\";\n    Framework[\"Angular\"] = \"3\";\n    Framework[\"VueJs\"] = \"4\";\n    Framework[\"Nuxt\"] = \"5\";\n    Framework[\"Svelte\"] = \"6\";\n    // 100s - Server side frameworks\n    Framework[\"ServerSideUnknown\"] = \"100\";\n    Framework[\"ReactSSR\"] = \"101\";\n    Framework[\"NextJsSSR\"] = \"102\";\n    Framework[\"AngularSSR\"] = \"103\";\n    Framework[\"VueJsSSR\"] = \"104\";\n    Framework[\"NuxtSSR\"] = \"105\";\n    Framework[\"SvelteSSR\"] = \"106\";\n    // 200s - Mobile framework\n    Framework[\"ReactNative\"] = \"201\";\n    Framework[\"Expo\"] = \"202\";\n})(Framework || (Framework = {}));\nexport var Category;\n(function (Category) {\n    Category[\"API\"] = \"api\";\n    Category[\"Auth\"] = \"auth\";\n    Category[\"Analytics\"] = \"analytics\";\n    Category[\"DataStore\"] = \"datastore\";\n    Category[\"Geo\"] = \"geo\";\n    Category[\"InAppMessaging\"] = \"inappmessaging\";\n    Category[\"Interactions\"] = \"interactions\";\n    Category[\"Predictions\"] = \"predictions\";\n    Category[\"PubSub\"] = \"pubsub\";\n    Category[\"PushNotification\"] = \"pushnotification\";\n    Category[\"Storage\"] = \"storage\";\n})(Category || (Category = {}));\nexport var AnalyticsAction;\n(function (AnalyticsAction) {\n    AnalyticsAction[\"Record\"] = \"1\";\n    AnalyticsAction[\"IdentifyUser\"] = \"2\";\n})(AnalyticsAction || (AnalyticsAction = {}));\nexport var ApiAction;\n(function (ApiAction) {\n    ApiAction[\"GraphQl\"] = \"1\";\n    ApiAction[\"Get\"] = \"2\";\n    ApiAction[\"Post\"] = \"3\";\n    ApiAction[\"Put\"] = \"4\";\n    ApiAction[\"Patch\"] = \"5\";\n    ApiAction[\"Del\"] = \"6\";\n    ApiAction[\"Head\"] = \"7\";\n})(ApiAction || (ApiAction = {}));\nexport var AuthAction;\n(function (AuthAction) {\n    AuthAction[\"SignUp\"] = \"1\";\n    AuthAction[\"ConfirmSignUp\"] = \"2\";\n    AuthAction[\"ResendSignUpCode\"] = \"3\";\n    AuthAction[\"SignIn\"] = \"4\";\n    AuthAction[\"FetchMFAPreference\"] = \"6\";\n    AuthAction[\"UpdateMFAPreference\"] = \"7\";\n    AuthAction[\"SetUpTOTP\"] = \"10\";\n    AuthAction[\"VerifyTOTPSetup\"] = \"11\";\n    AuthAction[\"ConfirmSignIn\"] = \"12\";\n    AuthAction[\"DeleteUserAttributes\"] = \"15\";\n    AuthAction[\"DeleteUser\"] = \"16\";\n    AuthAction[\"UpdateUserAttributes\"] = \"17\";\n    AuthAction[\"FetchUserAttributes\"] = \"18\";\n    AuthAction[\"ConfirmUserAttribute\"] = \"22\";\n    AuthAction[\"SignOut\"] = \"26\";\n    AuthAction[\"UpdatePassword\"] = \"27\";\n    AuthAction[\"ResetPassword\"] = \"28\";\n    AuthAction[\"ConfirmResetPassword\"] = \"29\";\n    AuthAction[\"FederatedSignIn\"] = \"30\";\n    AuthAction[\"RememberDevice\"] = \"32\";\n    AuthAction[\"ForgetDevice\"] = \"33\";\n    AuthAction[\"FetchDevices\"] = \"34\";\n    AuthAction[\"SendUserAttributeVerificationCode\"] = \"35\";\n    AuthAction[\"SignInWithRedirect\"] = \"36\";\n})(AuthAction || (AuthAction = {}));\nexport var DataStoreAction;\n(function (DataStoreAction) {\n    DataStoreAction[\"Subscribe\"] = \"1\";\n    DataStoreAction[\"GraphQl\"] = \"2\";\n})(DataStoreAction || (DataStoreAction = {}));\nexport var GeoAction;\n(function (GeoAction) {\n    GeoAction[\"SearchByText\"] = \"0\";\n    GeoAction[\"SearchByCoordinates\"] = \"1\";\n    GeoAction[\"SearchForSuggestions\"] = \"2\";\n    GeoAction[\"SearchByPlaceId\"] = \"3\";\n    GeoAction[\"SaveGeofences\"] = \"4\";\n    GeoAction[\"GetGeofence\"] = \"5\";\n    GeoAction[\"ListGeofences\"] = \"6\";\n    GeoAction[\"DeleteGeofences\"] = \"7\";\n})(GeoAction || (GeoAction = {}));\nexport var InAppMessagingAction;\n(function (InAppMessagingAction) {\n    InAppMessagingAction[\"SyncMessages\"] = \"1\";\n    InAppMessagingAction[\"IdentifyUser\"] = \"2\";\n    InAppMessagingAction[\"NotifyMessageInteraction\"] = \"3\";\n})(InAppMessagingAction || (InAppMessagingAction = {}));\nexport var InteractionsAction;\n(function (InteractionsAction) {\n    InteractionsAction[\"None\"] = \"0\";\n})(InteractionsAction || (InteractionsAction = {}));\nexport var PredictionsAction;\n(function (PredictionsAction) {\n    PredictionsAction[\"Convert\"] = \"1\";\n    PredictionsAction[\"Identify\"] = \"2\";\n    PredictionsAction[\"Interpret\"] = \"3\";\n})(PredictionsAction || (PredictionsAction = {}));\nexport var PubSubAction;\n(function (PubSubAction) {\n    PubSubAction[\"Subscribe\"] = \"1\";\n})(PubSubAction || (PubSubAction = {}));\nexport var PushNotificationAction;\n(function (PushNotificationAction) {\n    PushNotificationAction[\"InitializePushNotifications\"] = \"1\";\n    PushNotificationAction[\"IdentifyUser\"] = \"2\";\n})(PushNotificationAction || (PushNotificationAction = {}));\nexport var StorageAction;\n(function (StorageAction) {\n    StorageAction[\"UploadData\"] = \"1\";\n    StorageAction[\"DownloadData\"] = \"2\";\n    StorageAction[\"List\"] = \"3\";\n    StorageAction[\"Copy\"] = \"4\";\n    StorageAction[\"Remove\"] = \"5\";\n    StorageAction[\"GetProperties\"] = \"6\";\n    StorageAction[\"GetUrl\"] = \"7\";\n})(StorageAction || (StorageAction = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const globalExists = () => {\n    return typeof global !== 'undefined';\n};\nexport const globalThisExists = () => {\n    return typeof globalThis !== 'undefined';\n};\nexport const windowExists = () => {\n    return typeof window !== 'undefined';\n};\nexport const documentExists = () => {\n    return typeof document !== 'undefined';\n};\nexport const processExists = () => {\n    return typeof process !== 'undefined';\n};\nexport const keyPrefixMatch = (object, prefix) => {\n    return !!Object.keys(object).find(key => key.startsWith(prefix));\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { documentExists, processExists } from './helpers';\n// Tested with react 18.2 - built using Vite\nexport function reactWebDetect() {\n    const elementKeyPrefixedWithReact = (key) => {\n        return key.startsWith('_react') || key.startsWith('__react');\n    };\n    const elementIsReactEnabled = (element) => {\n        return Object.keys(element).find(elementKeyPrefixedWithReact);\n    };\n    const allElementsWithId = () => Array.from(document.querySelectorAll('[id]'));\n    return documentExists() && allElementsWithId().some(elementIsReactEnabled);\n}\nexport function reactSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('react')));\n}\n// use the some\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists, keyPrefixMatch, windowExists } from './helpers';\n// Tested with vue 3.3.2\nexport function vueWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__VUE');\n}\nexport function vueSSRDetect() {\n    return globalExists() && keyPrefixMatch(global, '__VUE');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { keyPrefixMatch, processExists, windowExists } from './helpers';\n// Tested with svelte 3.59\nexport function svelteWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__SVELTE');\n}\nexport function svelteSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('svelte')));\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists, keyPrefixMatch, windowExists } from './helpers';\n// Tested with next 13.4 / react 18.2\nexport function nextWebDetect() {\n    return (windowExists() &&\n        window.next &&\n        typeof window.next === 'object');\n}\nexport function nextSSRDetect() {\n    return (globalExists() &&\n        (keyPrefixMatch(global, '__next') || keyPrefixMatch(global, '__NEXT')));\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists, windowExists } from './helpers';\n// Tested with nuxt 2.15 / vue 2.7\nexport function nuxtWebDetect() {\n    return (windowExists() &&\n        (window.__NUXT__ !== undefined ||\n            window.$nuxt !== undefined));\n}\nexport function nuxtSSRDetect() {\n    return (globalExists() && typeof global.__NUXT_PATHS__ !== 'undefined');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { documentExists, processExists, windowExists } from './helpers';\n// Tested with @angular/core 16.0.0\nexport function angularWebDetect() {\n    const angularVersionSetInDocument = Boolean(documentExists() && document.querySelector('[ng-version]'));\n    const angularContentSetInWindow = Boolean(windowExists() && typeof window.ng !== 'undefined');\n    return angularVersionSetInDocument || angularContentSetInWindow;\n}\nexport function angularSSRDetect() {\n    return ((processExists() &&\n        typeof process.env === 'object' &&\n        process.env.npm_lifecycle_script?.startsWith('ng ')) ||\n        false);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react-native 0.17.7\nexport function reactNativeDetect() {\n    return (typeof navigator !== 'undefined' &&\n        typeof navigator.product !== 'undefined' &&\n        navigator.product === 'ReactNative');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists } from './helpers';\n// Tested with expo 48 / react-native 0.71.3\nexport function expoDetect() {\n    return globalExists() && typeof global.expo !== 'undefined';\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { windowExists } from './helpers';\nexport function webDetect() {\n    return windowExists();\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from '../types';\nimport { reactSSRDetect, reactWebDetect } from './React';\nimport { vueSSRDetect, vueWebDetect } from './Vue';\nimport { svelteSSRDetect, svelteWebDetect } from './Svelte';\nimport { nextSSRDetect, nextWebDetect } from './Next';\nimport { nuxtSSRDetect, nuxtWebDetect } from './Nuxt';\nimport { angularSSRDetect, angularWebDetect } from './Angular';\nimport { reactNativeDetect } from './ReactNative';\nimport { expoDetect } from './Expo';\nimport { webDetect } from './Web';\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n    // First, detect mobile\n    { platform: Framework.Expo, detectionMethod: expoDetect },\n    { platform: Framework.ReactNative, detectionMethod: reactNativeDetect },\n    // Next, detect web frameworks\n    { platform: Framework.NextJs, detectionMethod: nextWebDetect },\n    { platform: Framework.Nuxt, detectionMethod: nuxtWebDetect },\n    { platform: Framework.Angular, detectionMethod: angularWebDetect },\n    { platform: Framework.React, detectionMethod: reactWebDetect },\n    { platform: Framework.VueJs, detectionMethod: vueWebDetect },\n    { platform: Framework.Svelte, detectionMethod: svelteWebDetect },\n    { platform: Framework.WebUnknown, detectionMethod: webDetect },\n    // Last, detect ssr frameworks\n    { platform: Framework.NextJsSSR, detectionMethod: nextSSRDetect },\n    { platform: Framework.NuxtSSR, detectionMethod: nuxtSSRDetect },\n    { platform: Framework.ReactSSR, detectionMethod: reactSSRDetect },\n    { platform: Framework.VueJsSSR, detectionMethod: vueSSRDetect },\n    { platform: Framework.AngularSSR, detectionMethod: angularSSRDetect },\n    { platform: Framework.SvelteSSR, detectionMethod: svelteSSRDetect },\n];\nexport function detect() {\n    return (detectionMap.find(detectionEntry => detectionEntry.detectionMethod())\n        ?.platform || Framework.ServerSideUnknown);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const isWebWorker = () => {\n    if (typeof self === 'undefined') {\n        return false;\n    }\n    const selfContext = self;\n    return (typeof selfContext.WorkerGlobalScope !== 'undefined' &&\n        self instanceof selfContext.WorkerGlobalScope);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Observable, from } from 'rxjs';\nimport { isWebWorker } from '../utils';\nexport class Reachability {\n    networkMonitor(_) {\n        const globalObj = isWebWorker()\n            ? self\n            : typeof window !== 'undefined' && window;\n        if (!globalObj) {\n            return from([{ online: true }]);\n        }\n        return new Observable(observer => {\n            observer.next({ online: globalObj.navigator.onLine });\n            const notifyOnline = () => {\n                observer.next({ online: true });\n            };\n            const notifyOffline = () => {\n                observer.next({ online: false });\n            };\n            globalObj.addEventListener('online', notifyOnline);\n            globalObj.addEventListener('offline', notifyOffline);\n            Reachability._observers.push(observer);\n            return () => {\n                globalObj.removeEventListener('online', notifyOnline);\n                globalObj.removeEventListener('offline', notifyOffline);\n                Reachability._observers = Reachability._observers.filter(_observer => _observer !== observer);\n            };\n        });\n    }\n    // expose observers to simulate offline mode for integration testing\n    static _observerOverride(status) {\n        for (const observer of this._observers) {\n            if (observer.closed) {\n                this._observers = this._observers.filter(_observer => _observer !== observer);\n                continue;\n            }\n            observer?.next && observer.next(status);\n        }\n    }\n}\nReachability._observers = [];\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AMPLIFY_SYMBOL, Hub } from '../Hub';\nimport { deepFreeze } from '../utils';\nimport { parseAmplifyConfig } from '../libraryUtils';\nimport { AuthClass } from './Auth';\nimport { ADD_OAUTH_LISTENER } from './constants';\nexport class AmplifyClass {\n    constructor() {\n        this.oAuthListener = undefined;\n        this.resourcesConfig = {};\n        this.libraryOptions = {};\n        this.Auth = new AuthClass();\n    }\n    /**\n     * Configures Amplify for use with your back-end resources.\n     *\n     * @remarks\n     * This API does not perform any merging of either `resourcesConfig` or `libraryOptions`. The most recently\n     * provided values will be used after configuration.\n     *\n     * @remarks\n     * `configure` can be used to specify additional library options where available for supported categories.\n     *\n     * @param resourceConfig - Back-end resource configuration. Typically provided via the `aws-exports.js` file.\n     * @param libraryOptions - Additional options for customizing the behavior of the library.\n     */\n    configure(resourcesConfig, libraryOptions) {\n        const resolvedResourceConfig = parseAmplifyConfig(resourcesConfig);\n        this.resourcesConfig = resolvedResourceConfig;\n        if (libraryOptions) {\n            this.libraryOptions = libraryOptions;\n        }\n        // Make resource config immutable\n        this.resourcesConfig = deepFreeze(this.resourcesConfig);\n        this.Auth.configure(this.resourcesConfig.Auth, this.libraryOptions.Auth);\n        Hub.dispatch('core', {\n            event: 'configure',\n            data: this.resourcesConfig,\n        }, 'Configure', AMPLIFY_SYMBOL);\n        this.notifyOAuthListener();\n    }\n    /**\n     * Provides access to the current back-end resource configuration for the Library.\n     *\n     * @returns Returns the immutable back-end resource configuration.\n     */\n    getConfig() {\n        return this.resourcesConfig;\n    }\n    /** @internal */\n    [ADD_OAUTH_LISTENER](listener) {\n        if (this.resourcesConfig.Auth?.Cognito.loginWith?.oauth) {\n            // when Amplify has been configured with a valid OAuth config while adding the listener, run it directly\n            listener(this.resourcesConfig.Auth?.Cognito);\n        }\n        else {\n            // otherwise register the listener and run it later when Amplify gets configured with a valid oauth config\n            this.oAuthListener = listener;\n        }\n    }\n    notifyOAuthListener() {\n        if (!this.resourcesConfig.Auth?.Cognito.loginWith?.oauth ||\n            !this.oAuthListener) {\n            return;\n        }\n        this.oAuthListener(this.resourcesConfig.Auth?.Cognito);\n        // the listener should only be notified once with a valid oauth config\n        this.oAuthListener = undefined;\n    }\n}\n/**\n * The `Amplify` utility is used to configure the library.\n *\n * @remarks\n * `Amplify` orchestrates cross-category communication within the library.\n */\nexport const Amplify = new AmplifyClass();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const fetchAuthSession = (amplify, options) => {\n    return amplify.Auth.fetchAuthSession(options);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '../Amplify';\nimport { fetchAuthSession as fetchAuthSessionInternal } from './internal/fetchAuthSession';\n/**\n * Fetch the auth session including the tokens and credentials if they are available. By default it\n * does not refresh the auth tokens or credentials if they are loaded in storage already. You can force a refresh\n * with `{ forceRefresh: true }` input.\n *\n * @param options - Options configuring the fetch behavior.\n * @throws {@link AuthError} - Throws error when session information cannot be refreshed.\n * @returns Promise<AuthSession>\n */\nexport const fetchAuthSession = (options) => {\n    return fetchAuthSessionInternal(Amplify, options);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const parseMetadata = (response) => {\n    const { headers, statusCode } = response;\n    return {\n        ...(isMetadataBearer(response) ? response.$metadata : {}),\n        httpStatusCode: statusCode,\n        requestId: headers['x-amzn-requestid'] ??\n            headers['x-amzn-request-id'] ??\n            headers['x-amz-request-id'],\n        extendedRequestId: headers['x-amz-id-2'],\n        cfId: headers['x-amz-cf-id'],\n    };\n};\nconst isMetadataBearer = (response) => typeof response?.$metadata === 'object';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseMetadata } from './responseInfo';\n/**\n * Utility functions for serializing and deserializing of JSON protocol in general(including: REST-JSON, JSON-RPC, etc.)\n */\n/**\n * Error parser for AWS JSON protocol.\n */\nexport const parseJsonError = async (response) => {\n    if (!response || response.statusCode < 300) {\n        return;\n    }\n    const body = await parseJsonBody(response);\n    const sanitizeErrorCode = (rawValue) => {\n        const [cleanValue] = rawValue.toString().split(/[,:]+/);\n        if (cleanValue.includes('#')) {\n            return cleanValue.split('#')[1];\n        }\n        return cleanValue;\n    };\n    const code = sanitizeErrorCode(response.headers['x-amzn-errortype'] ??\n        body.code ??\n        body.__type ??\n        'UnknownError');\n    const message = body.message ?? body.Message ?? 'Unknown error';\n    const error = new Error(message);\n    return Object.assign(error, {\n        name: code,\n        $metadata: parseMetadata(response),\n    });\n};\n/**\n * Parse JSON response body to JavaScript object.\n */\nexport const parseJsonBody = async (response) => {\n    if (!response.body) {\n        throw new Error('Missing response payload');\n    }\n    const output = await response.body.json();\n    return Object.assign(output, {\n        $metadata: parseMetadata(response),\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const composeServiceApi = (transferHandler, serializer, deserializer, defaultConfig) => {\n    return async (config, input) => {\n        const resolvedConfig = {\n            ...defaultConfig,\n            ...config,\n        };\n        // We may want to allow different endpoints from given config(other than region) and input.\n        // Currently S3 supports additional `useAccelerateEndpoint` option to use accelerate endpoint.\n        const endpoint = await resolvedConfig.endpointResolver(resolvedConfig, input);\n        // Unlike AWS SDK clients, a serializer should NOT populate the `host` or `content-length` headers.\n        // Both of these headers are prohibited per Spec(https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name).\n        // They will be populated automatically by browser, or node-fetch polyfill.\n        const request = await serializer(input, endpoint);\n        const response = await transferHandler(request, {\n            ...resolvedConfig,\n        });\n        return deserializer(response);\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default partition for AWS services. This is used when the region is not provided or the region is not recognized.\n *\n * @internal\n */\nexport const defaultPartition = {\n    id: 'aws',\n    outputs: {\n        dnsSuffix: 'amazonaws.com',\n    },\n    regionRegex: '^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$',\n    regions: ['aws-global'],\n};\n/**\n * This data is adapted from the partition file from AWS SDK shared utilities but remove some contents for bundle size\n * concern. Information removed are `dualStackDnsSuffix`, `supportDualStack`, `supportFIPS`, restricted partitions, and\n * list of regions for each partition other than global regions.\n *\n * * Ref: https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints\n * * Ref: https://github.com/aws/aws-sdk-js-v3/blob/0201baef03c2379f1f6f7150b9d401d4b230d488/packages/util-endpoints/src/lib/aws/partitions.json#L1\n *\n * @internal\n */\nexport const partitionsInfo = {\n    partitions: [\n        defaultPartition,\n        {\n            id: 'aws-cn',\n            outputs: {\n                dnsSuffix: 'amazonaws.com.cn',\n            },\n            regionRegex: '^cn\\\\-\\\\w+\\\\-\\\\d+$',\n            regions: ['aws-cn-global'],\n        },\n    ],\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultPartition, partitionsInfo } from './partitions';\n/**\n * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n *\n * @param region\n * @returns The DNS suffix\n *\n * @internal\n */\nexport const getDnsSuffix = (region) => {\n    const { partitions } = partitionsInfo;\n    for (const { regions, outputs, regionRegex } of partitions) {\n        const regex = new RegExp(regionRegex);\n        if (regions.includes(region) || regex.test(region)) {\n            return outputs.dnsSuffix;\n        }\n    }\n    return defaultPartition.outputs.dnsSuffix;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_RETRY_ATTEMPTS = 3;\n/**\n * Retry middleware\n */\nexport const retryMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS, retryDecider, computeDelay, abortSignal, }) => {\n    if (maxAttempts < 1) {\n        throw new Error('maxAttempts must be greater than 0');\n    }\n    return (next, context) => async function retryMiddleware(request) {\n        let error;\n        let attemptsCount = context.attemptsCount ?? 0;\n        let response;\n        // When retry is not needed or max attempts is reached, either error or response will be set. This function handles either cases.\n        const handleTerminalErrorOrResponse = () => {\n            if (response) {\n                addOrIncrementMetadataAttempts(response, attemptsCount);\n                return response;\n            }\n            else {\n                addOrIncrementMetadataAttempts(error, attemptsCount);\n                throw error;\n            }\n        };\n        while (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n            try {\n                response = await next(request);\n                error = undefined;\n            }\n            catch (e) {\n                error = e;\n                response = undefined;\n            }\n            // context.attemptsCount may be updated after calling next handler which may retry the request by itself.\n            attemptsCount =\n                (context.attemptsCount ?? 0) > attemptsCount\n                    ? (context.attemptsCount ?? 0)\n                    : attemptsCount + 1;\n            context.attemptsCount = attemptsCount;\n            if (await retryDecider(response, error)) {\n                if (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n                    // prevent sleep for last attempt or cancelled request;\n                    const delay = computeDelay(attemptsCount);\n                    await cancellableSleep(delay, abortSignal);\n                }\n                continue;\n            }\n            else {\n                return handleTerminalErrorOrResponse();\n            }\n        }\n        if (abortSignal?.aborted) {\n            throw new Error('Request aborted.');\n        }\n        else {\n            return handleTerminalErrorOrResponse();\n        }\n    };\n};\nconst cancellableSleep = (timeoutMs, abortSignal) => {\n    if (abortSignal?.aborted) {\n        return Promise.resolve();\n    }\n    let timeoutId;\n    let sleepPromiseResolveFn;\n    const sleepPromise = new Promise(resolve => {\n        sleepPromiseResolveFn = resolve;\n        timeoutId = setTimeout(resolve, timeoutMs);\n    });\n    abortSignal?.addEventListener('abort', function cancelSleep(_) {\n        clearTimeout(timeoutId);\n        abortSignal?.removeEventListener('abort', cancelSleep);\n        sleepPromiseResolveFn();\n    });\n    return sleepPromise;\n};\nconst addOrIncrementMetadataAttempts = (nextHandlerOutput, attempts) => {\n    if (Object.prototype.toString.call(nextHandlerOutput) !== '[object Object]') {\n        return;\n    }\n    nextHandlerOutput.$metadata = {\n        ...(nextHandlerOutput.$metadata ?? {}),\n        attempts,\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects user agent string to specified header(default to 'x-amz-user-agent'),\n * if the header is not set already.\n *\n * TODO: incorporate new user agent design\n */\nexport const userAgentMiddlewareFactory = ({ userAgentHeader = 'x-amz-user-agent', userAgentValue = '', }) => next => {\n    return async function userAgentMiddleware(request) {\n        if (userAgentValue.trim().length === 0) {\n            const result = await next(request);\n            return result;\n        }\n        else {\n            const headerName = userAgentHeader.toLowerCase();\n            request.headers[headerName] = request.headers[headerName]\n                ? `${request.headers[headerName]} ${userAgentValue}`\n                : userAgentValue;\n            const response = await next(request);\n            return response;\n        }\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nexport const composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n    const context = {};\n    let composedHandler = (composeHandlerRequest) => coreHandler(composeHandlerRequest, options);\n    for (let i = middleware.length - 1; i >= 0; i--) {\n        const m = middleware[i];\n        const resolvedMiddleware = m(options);\n        composedHandler = resolvedMiddleware(composedHandler, context);\n    }\n    return composedHandler(request);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cache the payload of a response body. It allows multiple calls to the body,\n * for example, when reading the body in both retry decider and error deserializer.\n * Caching body is allowed here because we call the body accessor(blob(), json(),\n * etc.) when body is small or streaming implementation is not available(RN).\n *\n * @internal\n */\nexport const withMemoization = (payloadAccessor) => {\n    let cached;\n    return () => {\n        if (!cached) {\n            // Explicitly not awaiting. Intermediate await would add overhead and\n            // introduce a possible race in the event that this wrapper is called\n            // again before the first `payloadAccessor` call resolves.\n            cached = payloadAccessor();\n        }\n        return cached;\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from '../../errors';\nimport { withMemoization } from '../utils/memoization';\nimport { AmplifyErrorCode } from '../../types';\nconst shouldSendBody = (method) => !['HEAD', 'GET', 'DELETE'].includes(method.toUpperCase());\n// TODO[AllanZhengYP]: we need to provide isCanceledError utility\nexport const fetchTransferHandler = async ({ url, method, headers, body }, { abortSignal, cache, withCrossDomainCredentials }) => {\n    let resp;\n    try {\n        resp = await fetch(url, {\n            method,\n            headers,\n            body: shouldSendBody(method) ? body : undefined,\n            signal: abortSignal,\n            cache,\n            credentials: withCrossDomainCredentials ? 'include' : 'same-origin',\n        });\n    }\n    catch (e) {\n        if (e instanceof TypeError) {\n            throw new AmplifyError({\n                name: AmplifyErrorCode.NetworkError,\n                message: 'A network error has occurred.',\n                underlyingError: e,\n            });\n        }\n        throw e;\n    }\n    const responseHeaders = {};\n    resp.headers?.forEach((value, key) => {\n        responseHeaders[key.toLowerCase()] = value;\n    });\n    const httpResponse = {\n        statusCode: resp.status,\n        headers: responseHeaders,\n        body: null,\n    };\n    // resp.body is a ReadableStream according to Fetch API spec, but React Native\n    // does not implement it.\n    const bodyWithMixin = Object.assign(resp.body ?? {}, {\n        text: withMemoization(() => resp.text()),\n        blob: withMemoization(() => resp.blob()),\n        json: withMemoization(() => resp.json()),\n    });\n    return {\n        ...httpResponse,\n        body: bodyWithMixin,\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { retryMiddlewareFactory } from '../middleware/retry';\nimport { userAgentMiddlewareFactory, } from '../middleware/userAgent';\nimport { composeTransferHandler } from '../internal/composeTransferHandler';\nimport { fetchTransferHandler } from './fetch';\nexport const unauthenticatedHandler = composeTransferHandler(fetchTransferHandler, [userAgentMiddlewareFactory, retryMiddlewareFactory]);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { MAX_DELAY_MS } from './constants';\n/**\n * @private\n * Internal use of Amplify only\n */\nexport function jitteredBackoff(maxDelayMs = MAX_DELAY_MS) {\n    const BASE_TIME_MS = 100;\n    const JITTER_FACTOR = 100;\n    return attempt => {\n        const delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n        return delay > maxDelayMs ? false : delay;\n    };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { jitteredBackoff as jitteredBackoffUtil } from '../../../utils';\n// TODO: [v6] The separate retry utility is used by Data packages now and will replaced by retry middleware.\nconst DEFAULT_MAX_DELAY_MS = 5 * 60 * 1000;\nexport const jitteredBackoff = attempt => {\n    const delayFunction = jitteredBackoffUtil(DEFAULT_MAX_DELAY_MS);\n    const delay = delayFunction(attempt);\n    // The delayFunction returns false when the delay is greater than the max delay(5 mins).\n    // In this case, the retry middleware will delay 5 mins instead, as a ceiling of the delay.\n    return delay === false ? DEFAULT_MAX_DELAY_MS : delay;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = [\n    'AuthFailure',\n    'InvalidSignatureException',\n    'RequestExpired',\n    'RequestInTheFuture',\n    'RequestTimeTooSkewed',\n    'SignatureDoesNotMatch',\n    'BadRequestException', // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nexport const isClockSkewError = (errorCode) => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isClockSkewError } from './isClockSkewError';\n/**\n * Get retry decider function\n * @param errorParser Function to load JavaScript error from HTTP response\n */\nexport const getRetryDecider = (errorParser) => async (response, error) => {\n    const parsedError = error ??\n        (await errorParser(response)) ??\n        undefined;\n    const errorCode = parsedError?.code || parsedError?.name;\n    const statusCode = response?.statusCode;\n    return (isConnectionError(error) ||\n        isThrottlingError(statusCode, errorCode) ||\n        isClockSkewError(errorCode) ||\n        isServerSideError(statusCode, errorCode));\n};\n// reference: https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L22-L37\nconst THROTTLING_ERROR_CODES = [\n    'BandwidthLimitExceeded',\n    'EC2ThrottledException',\n    'LimitExceededException',\n    'PriorRequestNotComplete',\n    'ProvisionedThroughputExceededException',\n    'RequestLimitExceeded',\n    'RequestThrottled',\n    'RequestThrottledException',\n    'SlowDown',\n    'ThrottledException',\n    'Throttling',\n    'ThrottlingException',\n    'TooManyRequestsException',\n];\nconst TIMEOUT_ERROR_CODES = [\n    'TimeoutError',\n    'RequestTimeout',\n    'RequestTimeoutException',\n];\nconst isThrottlingError = (statusCode, errorCode) => statusCode === 429 ||\n    (!!errorCode && THROTTLING_ERROR_CODES.includes(errorCode));\nconst isConnectionError = (error) => error?.name === 'Network error';\nconst isServerSideError = (statusCode, errorCode) => (!!statusCode && [500, 502, 503, 504].includes(statusCode)) ||\n    (!!errorCode && TIMEOUT_ERROR_CODES.includes(errorCode));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AmplifyUrl = URL;\nconst AmplifyUrlSearchParams = URLSearchParams;\nexport { AmplifyUrl, AmplifyUrlSearchParams };\n", "// generated by genversion\nexport const version = '6.5.3';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from './types';\nimport { detect } from './detection';\n// We want to cache detection since the framework won't change\nlet frameworkCache;\nexport const frameworkChangeObservers = [];\n// Setup the detection reset tracking / timeout delays\nlet resetTriggered = false;\nconst SSR_RESET_TIMEOUT = 10; // ms\nconst WEB_RESET_TIMEOUT = 10; // ms\nconst PRIME_FRAMEWORK_DELAY = 1000; // ms\nexport const detectFramework = () => {\n    if (!frameworkCache) {\n        frameworkCache = detect();\n        if (resetTriggered) {\n            // The final run of detectFramework:\n            // Starting from this point, the `frameworkCache` becomes \"final\".\n            // So we don't need to notify the observers again so the observer\n            // can be removed after the final notice.\n            while (frameworkChangeObservers.length) {\n                frameworkChangeObservers.pop()?.();\n            }\n        }\n        else {\n            // The first run of detectFramework:\n            // Every time we update the cache, call each observer function\n            frameworkChangeObservers.forEach(fcn => {\n                fcn();\n            });\n        }\n        // Retry once for either Unknown type after a delay (explained below)\n        resetTimeout(Framework.ServerSideUnknown, SSR_RESET_TIMEOUT);\n        resetTimeout(Framework.WebUnknown, WEB_RESET_TIMEOUT);\n    }\n    return frameworkCache;\n};\n/**\n * @internal Setup observer callback that will be called everytime the framework changes\n */\nexport const observeFrameworkChanges = (fcn) => {\n    // When the `frameworkCache` won't be updated again, we ignore all incoming\n    // observers.\n    if (resetTriggered) {\n        return;\n    }\n    frameworkChangeObservers.push(fcn);\n};\nexport function clearCache() {\n    frameworkCache = undefined;\n}\n// For a framework type and a delay amount, setup the event to re-detect\n//   During the runtime boot, it is possible that framework detection will\n//   be triggered before the framework has made modifications to the\n//   global/window/etc needed for detection. When no framework is detected\n//   we will reset and try again to ensure we don't use a cached\n//   non-framework detection result for all requests.\nfunction resetTimeout(framework, delay) {\n    if (frameworkCache === framework && !resetTriggered) {\n        setTimeout(() => {\n            clearCache();\n            resetTriggered = true;\n            setTimeout(detectFramework, PRIME_FRAMEWORK_DELAY);\n        }, delay);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nexport const setCustomUserAgent = (input) => {\n    // Save custom user-agent state & increment reference counter\n    // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n    customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n        ...acc,\n        [api]: {\n            refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n            additionalDetails: input.additionalDetails,\n        },\n    }), customUserAgentState[input.category] ?? {});\n    // Callback that cleans up state for APIs recorded by this call\n    let cleanUpCallbackCalled = false;\n    const cleanUpCallback = () => {\n        // Only allow the cleanup callback to be called once\n        if (cleanUpCallbackCalled) {\n            return;\n        }\n        cleanUpCallbackCalled = true;\n        input.apis.forEach(api => {\n            const apiRefCount = customUserAgentState[input.category][api].refCount;\n            if (apiRefCount > 1) {\n                customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n            }\n            else {\n                delete customUserAgentState[input.category][api];\n                // Clean up category if no more APIs set\n                if (!Object.keys(customUserAgentState[input.category]).length) {\n                    delete customUserAgentState[input.category];\n                }\n            }\n        });\n    };\n    return cleanUpCallback;\n};\nexport const getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from './types';\nimport { version } from './version';\nimport { detectFramework, observeFrameworkChanges } from './detectFramework';\nimport { getCustomUserAgent } from './customUserAgent';\nconst BASE_USER_AGENT = `aws-amplify`;\nclass PlatformBuilder {\n    constructor() {\n        this.userAgent = `${BASE_USER_AGENT}/${version}`;\n    }\n    get framework() {\n        return detectFramework();\n    }\n    get isReactNative() {\n        return (this.framework === Framework.ReactNative ||\n            this.framework === Framework.Expo);\n    }\n    observeFrameworkChanges(fcn) {\n        observeFrameworkChanges(fcn);\n    }\n}\nexport const Platform = new PlatformBuilder();\nexport const getAmplifyUserAgentObject = ({ category, action, } = {}) => {\n    const userAgent = [[BASE_USER_AGENT, version]];\n    if (category) {\n        userAgent.push([category, action]);\n    }\n    userAgent.push(['framework', detectFramework()]);\n    if (category && action) {\n        const customState = getCustomUserAgent(category, action);\n        if (customState) {\n            customState.forEach(state => {\n                userAgent.push(state);\n            });\n        }\n    }\n    return userAgent;\n};\nexport const getAmplifyUserAgent = (customUserAgentDetails) => {\n    const userAgent = getAmplifyUserAgentObject(customUserAgentDetails);\n    const userAgentString = userAgent\n        .map(([agentKey, agentValue]) => agentKey && agentValue ? `${agentKey}/${agentValue}` : agentKey)\n        .join(' ');\n    return userAgentString;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getDnsSuffix, parseJsonError, unauthenticatedHandler, } from '../../clients';\nimport { composeTransferHandler } from '../../clients/internal/composeTransferHandler';\nimport { getRetryDecider, jitteredBackoff, } from '../../clients/middleware/retry';\nimport { getAmplifyUserAgent } from '../../Platform';\nimport { observeFrameworkChanges } from '../../Platform/detectFramework';\nimport { AmplifyUrl } from '../../utils/amplifyUrl';\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-identity';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => ({\n    url: new AmplifyUrl(`https://cognito-identity.${region}.${getDnsSuffix(region)}`),\n});\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => next => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoIdentityTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n/**\n * @internal\n */\nexport const defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\nobserveFrameworkChanges(() => {\n    defaultConfig.userAgentValue = getAmplifyUserAgent();\n});\n/**\n * @internal\n */\nexport const getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityService.${operation}`,\n});\n/**\n * @internal\n */\nexport const buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonBody, parseJsonError, parseMetadata, } from '../../clients';\nimport { composeServiceApi } from '../../clients/internal';\nimport { buildHttpRpcRequest, cognitoIdentityTransferHandler, defaultConfig, getSharedHeaders, } from './base';\nconst getIdSerializer = (input, endpoint) => {\n    const headers = getSharedHeaders('GetId');\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getIdDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const body = await parseJsonBody(response);\n        return {\n            IdentityId: body.IdentityId,\n            $metadata: parseMetadata(response),\n        };\n    }\n};\n/**\n * @internal\n */\nexport const getId = composeServiceApi(cognitoIdentityTransferHandler, getIdSerializer, getIdDeserializer, defaultConfig);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonBody, parseJsonError, parseMetadata, } from '../../clients';\nimport { composeServiceApi } from '../../clients/internal';\nimport { buildHttpRpcRequest, cognitoIdentityTransferHandler, defaultConfig, getSharedHeaders, } from './base';\nconst getCredentialsForIdentitySerializer = (input, endpoint) => {\n    const headers = getSharedHeaders('GetCredentialsForIdentity');\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getCredentialsForIdentityDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const body = await parseJsonBody(response);\n        return {\n            IdentityId: body.IdentityId,\n            Credentials: deserializeCredentials(body.Credentials),\n            $metadata: parseMetadata(response),\n        };\n    }\n};\nconst deserializeCredentials = ({ AccessKeyId, SecretKey, SessionToken, Expiration, } = {}) => {\n    return {\n        AccessKeyId,\n        SecretKey,\n        SessionToken,\n        Expiration: Expiration && new Date(Expiration * 1000),\n    };\n};\n/**\n * @internal\n */\nexport const getCredentialsForIdentity = composeServiceApi(cognitoIdentityTransferHandler, getCredentialsForIdentitySerializer, getCredentialsForIdentityDeserializer, defaultConfig);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyErrorCode } from '../types';\nimport { AmplifyError } from './AmplifyError';\nexport class PlatformNotSupportedError extends AmplifyError {\n    constructor() {\n        super({\n            name: AmplifyErrorCode.PlatformNotSupported,\n            message: 'Function not supported on current platform',\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PlatformNotSupportedError } from '../errors';\n/**\n * @internal\n */\nexport class KeyValueStorage {\n    constructor(storage) {\n        this.storage = storage;\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    async setItem(key, value) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.setItem(key, value);\n    }\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    async getItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        return this.storage.getItem(key);\n    }\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    async removeItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.removeItem(key);\n    }\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    async clear() {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.clear();\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nexport class InMemoryStorage {\n    constructor() {\n        this.storage = new Map();\n    }\n    get length() {\n        return this.storage.size;\n    }\n    key(index) {\n        if (index > this.length - 1) {\n            return null;\n        }\n        return Array.from(this.storage.keys())[index];\n    }\n    setItem(key, value) {\n        this.storage.set(key, value);\n    }\n    getItem(key) {\n        return this.storage.get(key) ?? null;\n    }\n    removeItem(key) {\n        this.storage.delete(key);\n    }\n    clear() {\n        this.storage.clear();\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { InMemoryStorage } from './InMemoryStorage';\n/**\n * @internal\n * @returns Either a reference to window.localStorage or an in-memory storage as fallback\n */\nexport const getLocalStorageWithFallback = () => typeof window !== 'undefined' && window.localStorage\n    ? window.localStorage\n    : new InMemoryStorage();\n/**\n * @internal\n * @returns Either a reference to window.sessionStorage or an in-memory storage as fallback\n */\nexport const getSessionStorageWithFallback = () => typeof window !== 'undefined' && window.sessionStorage\n    ? window.sessionStorage\n    : new InMemoryStorage();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyValueStorage } from './KeyValueStorage';\nimport { getLocalStorageWithFallback } from './utils';\n/**\n * @internal\n */\nexport class DefaultStorage extends KeyValueStorage {\n    constructor() {\n        super(getLocalStorageWithFallback());\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyValueStorage } from './KeyValueStorage';\nimport { getSessionStorageWithFallback } from './utils';\n/**\n * @internal\n */\nexport class SessionStorage extends KeyValueStorage {\n    constructor() {\n        super(getSessionStorageWithFallback());\n    }\n}\n", "/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport JsCookie from 'js-cookie';\nexport class CookieStorage {\n    constructor(data = {}) {\n        const { path, domain, expires, sameSite, secure } = data;\n        this.domain = domain;\n        this.path = path || '/';\n        this.expires = Object.prototype.hasOwnProperty.call(data, 'expires')\n            ? expires\n            : 365;\n        this.secure = Object.prototype.hasOwnProperty.call(data, 'secure')\n            ? secure\n            : true;\n        if (Object.prototype.hasOwnProperty.call(data, 'sameSite')) {\n            if (!sameSite || !['strict', 'lax', 'none'].includes(sameSite)) {\n                throw new Error('The sameSite value of cookieStorage must be \"lax\", \"strict\" or \"none\".');\n            }\n            if (sameSite === 'none' && !this.secure) {\n                throw new Error('sameSite = None requires the Secure attribute in latest browser versions.');\n            }\n            this.sameSite = sameSite;\n        }\n    }\n    async setItem(key, value) {\n        JsCookie.set(key, value, this.getData());\n    }\n    async getItem(key) {\n        const item = JsCookie.get(key);\n        return item ?? null;\n    }\n    async removeItem(key) {\n        JsCookie.remove(key, this.getData());\n    }\n    async clear() {\n        const cookie = JsCookie.get();\n        const promises = Object.keys(cookie).map(key => this.removeItem(key));\n        await Promise.all(promises);\n    }\n    getData() {\n        return {\n            path: this.path,\n            expires: this.expires,\n            domain: this.domain,\n            secure: this.secure,\n            ...(this.sameSite && { sameSite: this.sameSite }),\n        };\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { DefaultStorage } from './DefaultStorage';\nimport { InMemoryStorage } from './InMemoryStorage';\nimport { KeyValueStorage } from './KeyValueStorage';\nimport { SessionStorage } from './SessionStorage';\nexport { CookieStorage } from './CookieStorage';\nexport const defaultStorage = new DefaultStorage();\nexport const sessionStorage = new SessionStorage();\nexport const sharedInMemoryStorage = new KeyValueStorage(new InMemoryStorage());\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default cache config\n */\nexport const defaultConfig = {\n    keyPrefix: 'aws-amplify-cache',\n    capacityInBytes: 1048576,\n    itemMaxSize: 210000,\n    defaultTTL: 259200000,\n    defaultPriority: 5,\n    warningThreshold: 0.8,\n};\nexport const currentSizeKey = 'CurSize';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { currentSizeKey } from '../constants';\n/**\n * return the byte size of the string\n * @param str\n */\nexport function getByteLength(str) {\n    let ret = 0;\n    ret = str.length;\n    for (let i = str.length; i >= 0; i -= 1) {\n        const charCode = str.charCodeAt(i);\n        if (charCode > 0x7f && charCode <= 0x7ff) {\n            ret += 1;\n        }\n        else if (charCode > 0x7ff && charCode <= 0xffff) {\n            ret += 2;\n        }\n        // trail surrogate\n        if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n            i -= 1;\n        }\n    }\n    return ret;\n}\n/**\n * get current time\n */\nexport function getCurrentTime() {\n    const currentTime = new Date();\n    return currentTime.getTime();\n}\n/**\n * check if passed value is an integer\n */\nexport function isInteger(value) {\n    if (Number.isInteger) {\n        return Number.isInteger(value);\n    }\n    return (typeof value === 'number' && isFinite(value) && Math.floor(value) === value);\n}\nexport const getCurrentSizeKey = (keyPrefix) => `${keyPrefix}${currentSizeKey}`;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../../errors';\nexport var CacheErrorCode;\n(function (CacheErrorCode) {\n    CacheErrorCode[\"NoCacheItem\"] = \"NoCacheItem\";\n    CacheErrorCode[\"NullNextNode\"] = \"NullNextNode\";\n    CacheErrorCode[\"NullPreviousNode\"] = \"NullPreviousNode\";\n})(CacheErrorCode || (CacheErrorCode = {}));\nconst cacheErrorMap = {\n    [CacheErrorCode.NoCacheItem]: {\n        message: 'Item not found in the cache storage.',\n    },\n    [CacheErrorCode.NullNextNode]: {\n        message: 'Next node is null.',\n    },\n    [CacheErrorCode.NullPreviousNode]: {\n        message: 'Previous node is null.',\n    },\n};\nexport const assert = createAssertionFunction(cacheErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { currentSizeKey, defaultConfig } from './constants';\nimport { getByteLength, getCurrentSizeKey, getCurrentTime } from './utils';\nimport { CacheErrorCode, assert } from './utils/errorHelpers';\nconst logger = new ConsoleLogger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\nexport class StorageCacheCommon {\n    /**\n     * Initialize the cache\n     *\n     * @param config - Custom configuration for this instance.\n     */\n    constructor({ config, keyValueStorage, }) {\n        this.config = {\n            ...defaultConfig,\n            ...config,\n        };\n        this.keyValueStorage = keyValueStorage;\n        this.sanitizeConfig();\n    }\n    getModuleName() {\n        return 'Cache';\n    }\n    /**\n     * Set custom configuration for the cache instance.\n     *\n     * @param config - customized configuration (without keyPrefix, which can't be changed)\n     *\n     * @return - the current configuration\n     */\n    configure(config) {\n        if (config) {\n            if (config.keyPrefix) {\n                logger.warn('keyPrefix can not be re-configured on an existing Cache instance.');\n            }\n            this.config = {\n                ...this.config,\n                ...config,\n            };\n        }\n        this.sanitizeConfig();\n        return this.config;\n    }\n    /**\n     * return the current size of the cache\n     * @return {Promise}\n     */\n    async getCurrentCacheSize() {\n        let size = await this.getStorage().getItem(getCurrentSizeKey(this.config.keyPrefix));\n        if (!size) {\n            await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), '0');\n            size = '0';\n        }\n        return Number(size);\n    }\n    /**\n     * Set item into cache. You can put number, string, boolean or object.\n     * The cache will first check whether has the same key.\n     * If it has, it will delete the old item and then put the new item in\n     * The cache will pop out items if it is full\n     * You can specify the cache item options. The cache will abort and output a warning:\n     * If the key is invalid\n     * If the size of the item exceeds itemMaxSize.\n     * If the value is undefined\n     * If incorrect cache item configuration\n     * If error happened with browser storage\n     *\n     * @param {String} key - the key of the item\n     * @param {Object} value - the value of the item\n     * @param {Object} [options] - optional, the specified meta-data\n     *\n     * @return {Promise}\n     */\n    async setItem(key, value, options) {\n        logger.debug(`Set item: key is ${key}, value is ${value} with options: ${options}`);\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return;\n        }\n        if (typeof value === 'undefined') {\n            logger.warn(`The value of item should not be undefined!`);\n            return;\n        }\n        const cacheItemOptions = {\n            priority: options?.priority !== undefined\n                ? options.priority\n                : this.config.defaultPriority,\n            expires: options?.expires !== undefined\n                ? options.expires\n                : this.config.defaultTTL + getCurrentTime(),\n        };\n        if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\n            logger.warn(`Invalid parameter: priority due to out or range. It should be within 1 and 5.`);\n            return;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        const item = this.fillCacheItem(prefixedKey, value, cacheItemOptions);\n        // check whether this item is too big;\n        if (item.byteSize > this.config.itemMaxSize) {\n            logger.warn(`Item with key: ${key} you are trying to put into is too big!`);\n            return;\n        }\n        try {\n            // first look into the storage, if it exists, delete it.\n            const val = await this.getStorage().getItem(prefixedKey);\n            if (val) {\n                await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n            // check whether the cache is full\n            if (await this.isCacheFull(item.byteSize)) {\n                const validKeys = await this.clearInvalidAndGetRemainingKeys();\n                if (await this.isCacheFull(item.byteSize)) {\n                    const sizeToPop = await this.sizeToPop(item.byteSize);\n                    await this.popOutItems(validKeys, sizeToPop);\n                }\n            }\n            // put item in the cache\n            return this.setCacheItem(prefixedKey, item);\n        }\n        catch (e) {\n            logger.warn(`setItem failed! ${e}`);\n        }\n    }\n    /**\n     * Get item from cache. It will return null if item doesn’t exist or it has been expired.\n     * If you specified callback function in the options,\n     * then the function will be executed if no such item in the cache\n     * and finally put the return value into cache.\n     * Please make sure the callback function will return the value you want to put into the cache.\n     * The cache will abort output a warning:\n     * If the key is invalid\n     * If error happened with AsyncStorage\n     *\n     * @param {String} key - the key of the item\n     * @param {Object} [options] - the options of callback function\n     *\n     * @return {Promise} - return a promise resolves to be the value of the item\n     */\n    async getItem(key, options) {\n        logger.debug(`Get item: key is ${key} with options ${options}`);\n        let cached;\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return null;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        try {\n            cached = await this.getStorage().getItem(prefixedKey);\n            if (cached != null) {\n                if (await this.isExpired(prefixedKey)) {\n                    // if expired, remove that item and return null\n                    await this.removeCacheItem(prefixedKey, JSON.parse(cached).byteSize);\n                }\n                else {\n                    // if not expired, update its visitedTime and return the value\n                    const item = await this.updateVisitedTime(JSON.parse(cached), prefixedKey);\n                    return item.data;\n                }\n            }\n            if (options?.callback) {\n                const val = options.callback();\n                if (val !== null) {\n                    await this.setItem(key, val, options);\n                }\n                return val;\n            }\n            return null;\n        }\n        catch (e) {\n            logger.warn(`getItem failed! ${e}`);\n            return null;\n        }\n    }\n    /**\n     * remove item from the cache\n     * The cache will abort output a warning:\n     * If error happened with AsyncStorage\n     * @param {String} key - the key of the item\n     * @return {Promise}\n     */\n    async removeItem(key) {\n        logger.debug(`Remove item: key is ${key}`);\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        try {\n            const val = await this.getStorage().getItem(prefixedKey);\n            if (val) {\n                await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n        }\n        catch (e) {\n            logger.warn(`removeItem failed! ${e}`);\n        }\n    }\n    /**\n     * Return all the keys owned by this cache.\n     * Will return an empty array if error occurred.\n     *\n     * @return {Promise}\n     */\n    async getAllKeys() {\n        try {\n            return await this.getAllCacheKeys();\n        }\n        catch (e) {\n            logger.warn(`getAllkeys failed! ${e}`);\n            return [];\n        }\n    }\n    getStorage() {\n        return this.keyValueStorage;\n    }\n    /**\n     * check whether item is expired\n     *\n     * @param key - the key of the item\n     *\n     * @return true if the item is expired.\n     */\n    async isExpired(key) {\n        const text = await this.getStorage().getItem(key);\n        assert(text !== null, CacheErrorCode.NoCacheItem, `Key: ${key}`);\n        const item = JSON.parse(text);\n        if (getCurrentTime() >= item.expires) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * delete item from cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param size - optional, the byte size of the item\n     */\n    async removeCacheItem(prefixedKey, size) {\n        const item = await this.getStorage().getItem(prefixedKey);\n        assert(item !== null, CacheErrorCode.NoCacheItem, `Key: ${prefixedKey}`);\n        const itemSize = size ?? JSON.parse(item).byteSize;\n        // first try to update the current size of the cache\n        await this.decreaseCurrentSizeInBytes(itemSize);\n        // try to remove the item from cache\n        try {\n            await this.getStorage().removeItem(prefixedKey);\n        }\n        catch (removeItemError) {\n            // if some error happened, we need to rollback the current size\n            await this.increaseCurrentSizeInBytes(itemSize);\n            logger.error(`Failed to remove item: ${removeItemError}`);\n        }\n    }\n    /**\n     * produce a JSON object with meta-data and data value\n     * @param value - the value of the item\n     * @param options - optional, the specified meta-data\n     *\n     * @return - the item which has the meta-data and the value\n     */\n    fillCacheItem(key, value, options) {\n        const item = {\n            key,\n            data: value,\n            timestamp: getCurrentTime(),\n            visitedTime: getCurrentTime(),\n            priority: options.priority ?? 0,\n            expires: options.expires ?? 0,\n            type: typeof value,\n            byteSize: 0,\n        };\n        // calculate byte size\n        item.byteSize = getByteLength(JSON.stringify(item));\n        // re-calculate using cache item with updated byteSize property\n        item.byteSize = getByteLength(JSON.stringify(item));\n        return item;\n    }\n    sanitizeConfig() {\n        if (this.config.itemMaxSize > this.config.capacityInBytes) {\n            logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n            logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (Number(this.config.warningThreshold) > 1 ||\n            Number(this.config.warningThreshold) < 0) {\n            logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n            this.config.warningThreshold = defaultConfig.warningThreshold;\n        }\n        // Set 5MB limit\n        const cacheLimit = 5 * 1024 * 1024;\n        if (this.config.capacityInBytes > cacheLimit) {\n            logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n    }\n    /**\n     * increase current size of the cache\n     *\n     * @param amount - the amount of the cache szie which need to be increased\n     */\n    async increaseCurrentSizeInBytes(amount) {\n        const size = await this.getCurrentCacheSize();\n        await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), (size + amount).toString());\n    }\n    /**\n     * decrease current size of the cache\n     *\n     * @param amount - the amount of the cache size which needs to be decreased\n     */\n    async decreaseCurrentSizeInBytes(amount) {\n        const size = await this.getCurrentCacheSize();\n        await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), (size - amount).toString());\n    }\n    /**\n     * update the visited time if item has been visited\n     *\n     * @param item - the item which need to be updated\n     * @param prefixedKey - the key of the item\n     *\n     * @return the updated item\n     */\n    async updateVisitedTime(item, prefixedKey) {\n        item.visitedTime = getCurrentTime();\n        await this.getStorage().setItem(prefixedKey, JSON.stringify(item));\n        return item;\n    }\n    /**\n     * put item into cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param itemData - the value of the item\n     * @param itemSizeInBytes - the byte size of the item\n     */\n    async setCacheItem(prefixedKey, item) {\n        // first try to update the current size of the cache.\n        await this.increaseCurrentSizeInBytes(item.byteSize);\n        // try to add the item into cache\n        try {\n            await this.getStorage().setItem(prefixedKey, JSON.stringify(item));\n        }\n        catch (setItemErr) {\n            // if some error happened, we need to rollback the current size\n            await this.decreaseCurrentSizeInBytes(item.byteSize);\n            logger.error(`Failed to set item ${setItemErr}`);\n        }\n    }\n    /**\n     * total space needed when poping out items\n     *\n     * @param itemSize\n     *\n     * @return total space needed\n     */\n    async sizeToPop(itemSize) {\n        const cur = await this.getCurrentCacheSize();\n        const spaceItemNeed = cur + itemSize - this.config.capacityInBytes;\n        const cacheThresholdSpace = (1 - this.config.warningThreshold) * this.config.capacityInBytes;\n        return spaceItemNeed > cacheThresholdSpace\n            ? spaceItemNeed\n            : cacheThresholdSpace;\n    }\n    /**\n     * see whether cache is full\n     *\n     * @param itemSize\n     *\n     * @return true if cache is full\n     */\n    async isCacheFull(itemSize) {\n        const cur = await this.getCurrentCacheSize();\n        return itemSize + cur > this.config.capacityInBytes;\n    }\n    /**\n     * get all the items we have, sort them by their priority,\n     * if priority is same, sort them by their last visited time\n     * pop out items from the low priority (5 is the lowest)\n     * @private\n     * @param keys - all the keys in this cache\n     * @param sizeToPop - the total size of the items which needed to be poped out\n     */\n    async popOutItems(keys, sizeToPop) {\n        const items = [];\n        let remainedSize = sizeToPop;\n        for (const key of keys) {\n            const val = await this.getStorage().getItem(key);\n            if (val != null) {\n                const item = JSON.parse(val);\n                items.push(item);\n            }\n        }\n        // first compare priority\n        // then compare visited time\n        items.sort((a, b) => {\n            if (a.priority > b.priority) {\n                return -1;\n            }\n            else if (a.priority < b.priority) {\n                return 1;\n            }\n            else {\n                if (a.visitedTime < b.visitedTime) {\n                    return -1;\n                }\n                else\n                    return 1;\n            }\n        });\n        for (const item of items) {\n            // pop out items until we have enough room for new item\n            await this.removeCacheItem(item.key, item.byteSize);\n            remainedSize -= item.byteSize;\n            if (remainedSize <= 0) {\n                return;\n            }\n        }\n    }\n    /**\n     * Scan the storage and combine the following operations for efficiency\n     *   1. Clear out all expired keys owned by this cache, not including the size key.\n     *   2. Return the remaining keys.\n     *\n     * @return The remaining valid keys\n     */\n    async clearInvalidAndGetRemainingKeys() {\n        const remainingKeys = [];\n        const keys = await this.getAllCacheKeys({\n            omitSizeKey: true,\n        });\n        for (const key of keys) {\n            if (await this.isExpired(key)) {\n                await this.removeCacheItem(key);\n            }\n            else {\n                remainingKeys.push(key);\n            }\n        }\n        return remainingKeys;\n    }\n    /**\n     * clear the entire cache\n     * The cache will abort and output a warning if error occurs\n     * @return {Promise}\n     */\n    async clear() {\n        logger.debug(`Clear Cache`);\n        try {\n            const keys = await this.getAllKeys();\n            for (const key of keys) {\n                await this.getStorage().removeItem(key);\n            }\n        }\n        catch (e) {\n            logger.warn(`clear failed! ${e}`);\n        }\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { KeyValueStorage } from '../storage/KeyValueStorage';\nimport { getLocalStorageWithFallback } from '../storage/utils';\nimport { defaultConfig } from './constants';\nimport { StorageCacheCommon } from './StorageCacheCommon';\nimport { getCurrentSizeKey, getCurrentTime } from './utils';\nconst logger = new ConsoleLogger('StorageCache');\n/**\n * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\n */\nexport class StorageCache extends StorageCacheCommon {\n    /**\n     * initialize the cache\n     * @param config - the configuration of the cache\n     */\n    constructor(config) {\n        const storage = getLocalStorageWithFallback();\n        super({ config, keyValueStorage: new KeyValueStorage(storage) });\n        this.storage = storage;\n        this.getItem = this.getItem.bind(this);\n        this.setItem = this.setItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n    }\n    async getAllCacheKeys(options) {\n        const { omitSizeKey } = options ?? {};\n        const keys = [];\n        for (let i = 0; i < this.storage.length; i++) {\n            const key = this.storage.key(i);\n            if (omitSizeKey && key === getCurrentSizeKey(this.config.keyPrefix)) {\n                continue;\n            }\n            if (key?.startsWith(this.config.keyPrefix)) {\n                keys.push(key.substring(this.config.keyPrefix.length));\n            }\n        }\n        return keys;\n    }\n    /**\n     * Return a new instance of cache with customized configuration.\n     * @param {Object} config - the customized configuration\n     * @return {Object} - the new instance of Cache\n     */\n    createInstance(config) {\n        if (!config.keyPrefix || config.keyPrefix === defaultConfig.keyPrefix) {\n            logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\n            config.keyPrefix = getCurrentTime.toString();\n        }\n        return new StorageCache(config);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StorageCache } from './StorageCache';\nexport const Cache = new StorageCache();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nconst logger = new ConsoleLogger('I18n');\n/**\n * Language translation utility.\n */\nexport class I18n {\n    constructor() {\n        /**\n         * @private\n         */\n        this._options = null;\n        /**\n         * @private\n         */\n        this._lang = null;\n        /**\n         * @private\n         */\n        this._dict = {};\n    }\n    /**\n     * Sets the default language from the configuration when required.\n     */\n    setDefaultLanguage() {\n        // Default to window language if not set in instance\n        if (!this._lang &&\n            typeof window !== 'undefined' &&\n            window &&\n            window.navigator) {\n            this._lang = window.navigator.language;\n        }\n        logger.debug(this._lang);\n    }\n    /**\n     * @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    setLanguage(lang) {\n        this._lang = lang;\n    }\n    /**\n     * @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    get(key, defVal = undefined) {\n        this.setDefaultLanguage();\n        if (!this._lang) {\n            return typeof defVal !== 'undefined' ? defVal : key;\n        }\n        const lang = this._lang;\n        let val = this.getByLanguage(key, lang);\n        if (val) {\n            return val;\n        }\n        if (lang.indexOf('-') > 0) {\n            val = this.getByLanguage(key, lang.split('-')[0]);\n        }\n        if (val) {\n            return val;\n        }\n        return typeof defVal !== 'undefined' ? defVal : key;\n    }\n    /**\n     * @method\n     * Get value according to specified language\n     * @param {String} key\n     * @param {String} language - Specified langurage to be used\n     * @param {String} defVal - Default value\n     */\n    getByLanguage(key, language, defVal = null) {\n        if (!language) {\n            return defVal;\n        }\n        const langDict = this._dict[language];\n        if (!langDict) {\n            return defVal;\n        }\n        return langDict[key];\n    }\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {String} language - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    putVocabulariesForLanguage(language, vocabularies) {\n        let langDict = this._dict[language];\n        if (!langDict) {\n            langDict = this._dict[language] = {};\n        }\n        this._dict[language] = { ...langDict, ...vocabularies };\n    }\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    putVocabularies(vocabularies) {\n        Object.keys(vocabularies).forEach(key => {\n            this.putVocabulariesForLanguage(key, vocabularies[key]);\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../errors';\nexport var I18nErrorCode;\n(function (I18nErrorCode) {\n    I18nErrorCode[\"NotConfigured\"] = \"NotConfigured\";\n})(I18nErrorCode || (I18nErrorCode = {}));\nconst i18nErrorMap = {\n    [I18nErrorCode.NotConfigured]: {\n        message: 'i18n is not configured.',\n    },\n};\nexport const assert = createAssertionFunction(i18nErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { I18n as I18nClass } from './I18n';\nimport { I18nErrorCode, assert } from './errorHelpers';\nconst logger = new ConsoleLogger('I18n');\nlet _config = { language: null };\nlet _i18n = null;\n/**\n * Export I18n APIs\n */\nexport class I18n {\n    /**\n     * @static\n     * @method\n     * Configure I18n part\n     * @param {Object} config - Configuration of the I18n\n     */\n    static configure(config) {\n        logger.debug('configure I18n');\n        if (!config) {\n            return _config;\n        }\n        _config = Object.assign({}, _config, config.I18n || config);\n        I18n.createInstance();\n        return _config;\n    }\n    static getModuleName() {\n        return 'I18n';\n    }\n    /**\n     * @static\n     * @method\n     * Create an instance of I18n for the library\n     */\n    static createInstance() {\n        logger.debug('create I18n instance');\n        if (_i18n) {\n            return;\n        }\n        _i18n = new I18nClass();\n    }\n    /**\n     * @static @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    static setLanguage(lang) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.setLanguage(lang);\n    }\n    /**\n     * @static @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    static get(key, defVal) {\n        if (!I18n.checkConfig()) {\n            return typeof defVal === 'undefined' ? key : defVal;\n        }\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        return _i18n.get(key, defVal);\n    }\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {String} language - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    static putVocabulariesForLanguage(language, vocabularies) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.putVocabulariesForLanguage(language, vocabularies);\n    }\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    static putVocabularies(vocabularies) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.putVocabularies(vocabularies);\n    }\n    static checkConfig() {\n        if (!_i18n) {\n            I18n.createInstance();\n        }\n        return true;\n    }\n}\n// Create an instance of I18n in the static class\nI18n.createInstance();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { v4 } from 'uuid';\nconst amplifyUuid = v4;\nexport { amplifyUuid };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns signed headers.\n *\n * @param headers `headers` from the request.\n * @returns List of headers included in canonical headers, separated by semicolons (;). This indicates which headers\n * are part of the signing process. Header names must use lowercase characters and must appear in alphabetical order.\n *\n * @internal\n */\nexport const getSignedHeaders = (headers) => Object.keys(headers)\n    .map(key => key.toLowerCase())\n    .sort()\n    .join(';');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// query params\nexport const ALGORITHM_QUERY_PARAM = 'X-Amz-Algorithm';\nexport const AMZ_DATE_QUERY_PARAM = 'X-Amz-Date';\nexport const CREDENTIAL_QUERY_PARAM = 'X-Amz-Credential';\nexport const EXPIRES_QUERY_PARAM = 'X-Amz-Expires';\nexport const REGION_SET_PARAM = 'X-Amz-Region-Set';\nexport const SIGNATURE_QUERY_PARAM = 'X-Amz-Signature';\nexport const SIGNED_HEADERS_QUERY_PARAM = 'X-Amz-SignedHeaders';\nexport const TOKEN_QUERY_PARAM = 'X-Amz-Security-Token';\n// headers\nexport const AUTH_HEADER = 'authorization';\nexport const HOST_HEADER = 'host';\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\n// identifiers\nexport const KEY_TYPE_IDENTIFIER = 'aws4_request';\nexport const SHA256_ALGORITHM_IDENTIFIER = 'AWS4-HMAC-SHA256';\nexport const SIGNATURE_IDENTIFIER = 'AWS4';\n// preset values\nexport const EMPTY_HASH = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nexport const UNSIGNED_PAYLOAD = 'UNSIGNED-PAYLOAD';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KEY_TYPE_IDENTIFIER } from '../constants';\n/**\n * Returns the credential scope which restricts the resulting signature to the specified region and service.\n *\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns  A string representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n *\n * @internal\n */\nexport const getCredentialScope = (date, region, service) => `${date}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns expected date strings to be used in signing.\n *\n * @param date JavaScript `Date` object.\n * @returns `FormattedDates` object containing the following:\n * - longDate: A date string in 'YYYYMMDDThhmmssZ' format\n * - shortDate: A date string in 'YYYYMMDD' format\n *\n * @internal\n */\nexport const getFormattedDates = (date) => {\n    const longDate = date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCredentialScope } from './getCredentialScope';\nimport { getFormattedDates } from './getFormattedDates';\n/**\n * Extracts common values used for signing both requests and urls.\n *\n * @param options `SignRequestOptions` object containing values used to construct the signature.\n * @returns Common `SigningValues` used for signing.\n *\n * @internal\n */\nexport const getSigningValues = ({ credentials, signingDate = new Date(), signingRegion, signingService, uriEscapePath = true, }) => {\n    // get properties from credentials\n    const { accessKeyId, secretAccessKey, sessionToken } = credentials;\n    // get formatted dates for signing\n    const { longDate, shortDate } = getFormattedDates(signingDate);\n    // copy header and set signing properties\n    const credentialScope = getCredentialScope(shortDate, signingRegion, signingService);\n    return {\n        accessKeyId,\n        credentialScope,\n        longDate,\n        secretAccessKey,\n        sessionToken,\n        shortDate,\n        signingRegion,\n        signingService,\n        uriEscapePath,\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: V6 update to different crypto dependency?\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@smithy/util-hex-encoding';\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nexport const getHashedData = (key, data) => {\n    const sha256 = new Sha256(key ?? undefined);\n    sha256.update(data);\n    // TODO: V6 flip to async digest\n    const hashedData = sha256.digestSync();\n    return hashedData;\n};\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nexport const getHashedDataAsHex = (key, data) => {\n    const hashedData = getHashedData(key, data);\n    return toHex(hashedData);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\nexport const getCanonicalHeaders = (headers) => Object.entries(headers)\n    .map(([key, value]) => ({\n    key: key.toLowerCase(),\n    value: value?.trim().replace(/\\s+/g, ' ') ?? '',\n}))\n    .sort((a, b) => (a.key < b.key ? -1 : 1))\n    .map(entry => `${entry.key}:${entry.value}\\n`)\n    .join('');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical query string.\n *\n * @param searchParams `searchParams` from the request url.\n * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n * is no query string, use an empty string (\"\").\n *\n * @internal\n */\nexport const getCanonicalQueryString = (searchParams) => Array.from(searchParams)\n    .sort(([keyA, valA], [keyB, valB]) => {\n    if (keyA === keyB) {\n        return valA < valB ? -1 : 1;\n    }\n    return keyA < keyB ? -1 : 1;\n})\n    .map(([key, val]) => `${escapeUri(key)}=${escapeUri(val)}`)\n    .join('&');\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical uri.\n *\n * @param pathname `pathname` from request url.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns URI-encoded version of the absolute path component URL (everything between the host and the question mark\n * character (?) that starts the query string parameters). If the absolute path is empty, a forward slash character (/).\n *\n * @internal\n */\nexport const getCanonicalUri = (pathname, uriEscapePath = true) => pathname\n    ? uriEscapePath\n        ? encodeURIComponent(pathname).replace(/%2F/g, '/')\n        : pathname\n    : '/';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { EMPTY_HASH, UNSIGNED_PAYLOAD } from '../constants';\nimport { getHashedDataAsHex } from './dataHashHelpers';\n/**\n * Returns the hashed payload.\n *\n * @param body `body` (payload) from the request.\n * @returns String created using the payload in the body of the HTTP request as input to a hash function. This string\n * uses lowercase hexadecimal characters. If the payload is empty, return precalculated result of an empty hash.\n *\n * @internal\n */\nexport const getHashedPayload = (body) => {\n    // return precalculated empty hash if body is undefined or null\n    if (body == null) {\n        return EMPTY_HASH;\n    }\n    if (isSourceData(body)) {\n        const hashedData = getHashedDataAsHex(null, body);\n        return hashedData;\n    }\n    // Defined body is not signable. Return unsigned payload which may or may not be accepted by the service.\n    return UNSIGNED_PAYLOAD;\n};\nconst isSourceData = (body) => typeof body === 'string' || ArrayBuffer.isView(body) || isArrayBuffer(body);\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === 'function' && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === '[object ArrayBuffer]';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCanonicalHeaders } from './getCanonicalHeaders';\nimport { getCanonicalQueryString } from './getCanonicalQueryString';\nimport { getCanonicalUri } from './getCanonicalUri';\nimport { getHashedPayload } from './getHashedPayload';\nimport { getSignedHeaders } from './getSignedHeaders';\n/**\n * Returns a canonical request.\n *\n * @param request `HttpRequest` from which to create the canonical request from.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns String created by by concatenating the following strings, separated by newline characters:\n * - HTTPMethod\n * - CanonicalUri\n * - CanonicalQueryString\n * - CanonicalHeaders\n * - SignedHeaders\n * - HashedPayload\n *\n * @internal\n */\nexport const getCanonicalRequest = ({ body, headers, method, url }, uriEscapePath = true) => [\n    method,\n    getCanonicalUri(url.pathname, uriEscapePath),\n    getCanonicalQueryString(url.searchParams),\n    getCanonicalHeaders(headers),\n    getSignedHeaders(headers),\n    getHashedPayload(body),\n].join('\\n');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KEY_TYPE_IDENTIFIER, SIGNATURE_IDENTIFIER } from '../constants';\nimport { getHashedData } from './dataHashHelpers';\n/**\n * Returns a signing key to be used for signing requests.\n *\n * @param secretAccessKey AWS secret access key from credentials.\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns `Uint8Array` calculated from its composite parts.\n *\n * @internal\n */\nexport const getSigningKey = (secretAccessKey, date, region, service) => {\n    const key = `${SIGNATURE_IDENTIFIER}${secretAccessKey}`;\n    const dateKey = getHashedData(key, date);\n    const regionKey = getHashedData(dateKey, region);\n    const serviceKey = getHashedData(regionKey, service);\n    const signingKey = getHashedData(serviceKey, KEY_TYPE_IDENTIFIER);\n    return signingKey;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SHA256_ALGORITHM_IDENTIFIER } from '../constants';\n/**\n * Returns a string to be signed.\n *\n * @param date Current date in the format 'YYYYMMDDThhmmssZ'.\n * @param credentialScope String representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n * @param hashedRequest Hashed canonical request.\n *\n * @returns A string created by by concatenating the following strings, separated by newline characters:\n * - Algorithm\n * - RequestDateTime\n * - CredentialScope\n * - HashedCanonicalRequest\n *\n * @internal\n */\nexport const getStringToSign = (date, credentialScope, hashedRequest) => [SHA256_ALGORITHM_IDENTIFIER, date, credentialScope, hashedRequest].join('\\n');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getHashedDataAsHex } from './dataHashHelpers';\nimport { getCanonicalRequest } from './getCanonicalRequest';\nimport { getSigningKey } from './getSigningKey';\nimport { getStringToSign } from './getStringToSign';\n/**\n * Calculates and returns an AWS API Signature.\n * https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns AWS API Signature to sign a request or url with.\n *\n * @internal\n */\nexport const getSignature = (request, { credentialScope, longDate, secretAccessKey, shortDate, signingRegion, signingService, uriEscapePath, }) => {\n    // step 1: create a canonical request\n    const canonicalRequest = getCanonicalRequest(request, uriEscapePath);\n    // step 2: create a hash of the canonical request\n    const hashedRequest = getHashedDataAsHex(null, canonicalRequest);\n    // step 3: create a string to sign\n    const stringToSign = getStringToSign(longDate, credentialScope, hashedRequest);\n    // step 4: calculate the signature\n    const signature = getHashedDataAsHex(getSigningKey(secretAccessKey, shortDate, signingRegion, signingService), stringToSign);\n    return signature;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getSignedHeaders } from './utils/getSignedHeaders';\nimport { getSigningValues } from './utils/getSigningValues';\nimport { AMZ_DATE_HEADER, AUTH_HEADER, HOST_HEADER, SHA256_ALGORITHM_IDENTIFIER, TOKEN_HEADER, } from './constants';\nimport { getSignature } from './utils/getSignature';\n/**\n * Given a `HttpRequest`, returns a Signature Version 4 signed `HttpRequest`.\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns A `HttpRequest` with authentication headers which can grant temporary access to AWS resources.\n */\nexport const signRequest = (request, options) => {\n    const signingValues = getSigningValues(options);\n    const { accessKeyId, credentialScope, longDate, sessionToken } = signingValues;\n    // create the request to sign\n    const headers = { ...request.headers };\n    headers[HOST_HEADER] = request.url.host;\n    headers[AMZ_DATE_HEADER] = longDate;\n    if (sessionToken) {\n        headers[TOKEN_HEADER] = sessionToken;\n    }\n    const requestToSign = { ...request, headers };\n    // calculate and add the signature to the request\n    const signature = getSignature(requestToSign, signingValues);\n    const credentialEntry = `Credential=${accessKeyId}/${credentialScope}`;\n    const signedHeadersEntry = `SignedHeaders=${getSignedHeaders(headers)}`;\n    const signatureEntry = `Signature=${signature}`;\n    headers[AUTH_HEADER] =\n        `${SHA256_ALGORITHM_IDENTIFIER} ${credentialEntry}, ${signedHeadersEntry}, ${signatureEntry}`;\n    return requestToSign;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a `Date` that is corrected for clock skew.\n *\n * @param systemClockOffset The offset of the system clock in milliseconds.\n *\n * @returns `Date` representing the current time adjusted by the system clock offset.\n *\n * @internal\n */\nexport const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getSkewCorrectedDate } from './getSkewCorrectedDate';\n// 5 mins in milliseconds. Ref: https://github.com/aws/aws-sdk-js-v3/blob/6c0f44fab30a1bb2134af47362a31332abc3666b/packages/middleware-signing/src/utils/isClockSkewed.ts#L10\nconst SKEW_WINDOW = 5 * 60 * 1000;\n/**\n * Checks if the provided date is within the skew window of 5 minutes.\n *\n * @param clockTimeInMilliseconds Time to check for skew in milliseconds.\n * @param clockOffsetInMilliseconds Offset to check clock against in milliseconds.\n *\n * @returns True if skewed. False otherwise.\n *\n * @internal\n */\nexport const isClockSkewed = (clockTimeInMilliseconds, clockOffsetInMilliseconds) => Math.abs(getSkewCorrectedDate(clockOffsetInMilliseconds).getTime() -\n    clockTimeInMilliseconds) >= SKEW_WINDOW;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isClockSkewed } from './isClockSkewed';\n/**\n * Returns the difference between clock time and the current system time if clock is skewed.\n *\n * @param clockTimeInMilliseconds Clock time in milliseconds.\n * @param currentSystemClockOffset Current system clock offset in milliseconds.\n *\n * @internal\n */\nexport const getUpdatedSystemClockOffset = (clockTimeInMilliseconds, currentSystemClockOffset) => {\n    if (isClockSkewed(clockTimeInMilliseconds, currentSystemClockOffset)) {\n        return clockTimeInMilliseconds - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { signRequest } from './signer/signatureV4';\nimport { getSkewCorrectedDate } from './utils/getSkewCorrectedDate';\nimport { getUpdatedSystemClockOffset } from './utils/getUpdatedSystemClockOffset';\n/**\n * Middleware that SigV4 signs request with AWS credentials, and correct system clock offset.\n * This middleware is expected to be placed after retry middleware.\n */\nexport const signingMiddlewareFactory = ({ credentials, region, service, uriEscapePath = true, }) => {\n    let currentSystemClockOffset;\n    return (next) => async function signingMiddleware(request) {\n        currentSystemClockOffset = currentSystemClockOffset ?? 0;\n        const signRequestOptions = {\n            credentials: typeof credentials === 'function' ? await credentials() : credentials,\n            signingDate: getSkewCorrectedDate(currentSystemClockOffset),\n            signingRegion: region,\n            signingService: service,\n            uriEscapePath,\n        };\n        const signedRequest = await signRequest(request, signRequestOptions);\n        const response = await next(signedRequest);\n        // Update system clock offset if response contains date header, regardless of the status code.\n        // non-2xx response will still be returned from next handler instead of thrown, because it's\n        // only thrown by the retry middleware.\n        const dateString = getDateHeader(response);\n        if (dateString) {\n            currentSystemClockOffset = getUpdatedSystemClockOffset(Date.parse(dateString), currentSystemClockOffset);\n        }\n        return response;\n    };\n};\nconst getDateHeader = ({ headers } = {}) => headers?.date ?? headers?.Date ?? headers?.['x-amz-date'];\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { retryMiddlewareFactory } from '../middleware/retry';\nimport { signingMiddlewareFactory, } from '../middleware/signing';\nimport { userAgentMiddlewareFactory, } from '../middleware/userAgent';\nimport { composeTransferHandler } from '../internal/composeTransferHandler';\nimport { fetchTransferHandler } from './fetch';\nexport const authenticatedHandler = composeTransferHandler(fetchTransferHandler, [\n    userAgentMiddlewareFactory,\n    retryMiddlewareFactory,\n    signingMiddlewareFactory,\n]);\n", "export { generateRandomString } from './utils/generateRandomString.mjs';\nexport { getClientInfo } from './utils/getClientInfo/getClientInfo.mjs';\nexport { isBrowser } from './utils/isBrowser.mjs';\nexport { isWebWorker } from './utils/isWebWorker.mjs';\nexport { NonRetryableError } from './utils/retry/NonRetryableError.mjs';\nexport { isNonRetryableError } from './utils/retry/isNonRetryableError.mjs';\nexport { jitteredBackoff } from './utils/retry/jitteredBackoff.mjs';\nexport { jitteredExponentialRetry } from './utils/retry/jitteredExponentialRetry.mjs';\nexport { retry } from './utils/retry/retry.mjs';\nexport { urlSafeDecode } from './utils/urlSafeDecode.mjs';\nexport { urlSafeEncode } from './utils/urlSafeEncode.mjs';\nexport { deDupeAsyncFunction } from './utils/deDupeAsyncFunction.mjs';\nexport { parseAWSExports } from './parseAWSExports.mjs';\nexport { isAmplifyOutputs, parseAmplifyOutputs } from './parseAmplifyOutputs.mjs';\nexport { ADD_OAUTH_LISTENER } from './singleton/constants.mjs';\nexport { amplifyUuid } from './utils/amplifyUuid/index.mjs';\nexport { AmplifyUrl, AmplifyUrlSearchParams } from './utils/amplifyUrl/index.mjs';\nexport { parseAmplifyConfig } from './utils/parseAmplifyConfig.mjs';\nexport { getDeviceName } from './utils/deviceName/getDeviceName.mjs';\nexport { assertIdentityPoolIdConfig, assertOAuthConfig, assertTokenProviderConfig, decodeJWT } from './singleton/Auth/utils/index.mjs';\nexport { isTokenExpired } from './singleton/Auth/index.mjs';\nexport { Signer } from './Signer/Signer.mjs';\nexport { haveCredentialsChanged } from './utils/haveCredentialsChanged.mjs';\nexport { Platform, getAmplifyUserAgent, getAmplifyUserAgentObject } from './Platform/index.mjs';\nexport { AnalyticsAction, ApiAction, AuthAction, Category, DataStoreAction, Framework, GeoAction, InAppMessagingAction, InteractionsAction, PredictionsAction, PubSubAction, PushNotificationAction, StorageAction } from './Platform/types.mjs';\nexport { setCustomUserAgent } from './Platform/customUserAgent.mjs';\nexport { AmplifyError } from './errors/AmplifyError.mjs';\nexport { ApiError } from './errors/APIError.mjs';\nexport { createAssertionFunction } from './errors/createAssertionFunction.mjs';\nexport { PlatformNotSupportedError } from './errors/PlatformNotSupportedError.mjs';\nimport './errors/errorHelpers.mjs';\nexport { AmplifyErrorCode } from './types/errors.mjs';\nexport { BackgroundProcessManager } from './BackgroundProcessManager/BackgroundProcessManager.mjs';\nexport { Mutex } from './Mutex/Mutex.mjs';\nexport { Reachability } from './Reachability/Reachability.mjs';\nexport { USER_AGENT_HEADER } from './constants.mjs';\nexport { fetchAuthSession } from './singleton/apis/internal/fetchAuthSession.mjs';\nexport { AMPLIFY_SYMBOL, HubInternal } from './Hub/index.mjs';\nexport { base64Decoder } from './utils/convert/base64/base64Decoder.mjs';\nexport { base64Encoder } from './utils/convert/base64/base64Encoder.mjs';\nexport { getCrypto } from './utils/globalHelpers/index.mjs';\nexport { cryptoSecureRandomInt } from './utils/cryptoSecureRandomInt.mjs';\nexport { WordArray } from './utils/WordArray.mjs';\nexport { sessionListener } from './utils/sessionListener/index.mjs';\nexport { SESSION_START_EVENT, SESSION_STOP_EVENT } from './utils/sessionListener/constants.mjs';\n//# sourceMappingURL=libraryUtils.mjs.map\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport class NonRetryableError extends Error {\n    constructor() {\n        super(...arguments);\n        this.nonRetryable = true;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { MAX_DELAY_MS } from './constants';\nimport { jitteredBackoff } from './jitteredBackoff';\nimport { retry } from './retry';\n/**\n * @private\n * Internal use of Amplify only\n */\nexport const jitteredExponentialRetry = (functionToRetry, args, maxDelayMs = MAX_DELAY_MS, onTerminate) => retry(functionToRetry, args, jitteredBackoff(maxDelayMs), onTerminate);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function urlSafeDecode(hex) {\n    const matchArr = hex.match(/.{2}/g) || [];\n    return matchArr.map(char => String.fromCharCode(parseInt(char, 16))).join('');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * returns in-flight promise if there is one\n *\n * @param asyncFunction - asyncFunction to be deduped.\n * @returns - the return type of the callback\n */\nexport const deDupeAsyncFunction = (asyncFunction) => {\n    let inflightPromise;\n    return async (...args) => {\n        if (inflightPromise)\n            return inflightPromise;\n        inflightPromise = new Promise((resolve, reject) => {\n            asyncFunction(...args)\n                .then(result => {\n                resolve(result);\n            })\n                .catch(error => {\n                reject(error);\n            })\n                .finally(() => {\n                inflightPromise = undefined;\n            });\n        });\n        return inflightPromise;\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from './AmplifyError';\n/**\n * Error class for errors that associated with unsuccessful HTTP responses.\n * It's throw by API category REST API handlers and GraphQL query handlers for now.\n */\nexport class ApiError extends AmplifyError {\n    /**\n     * The unwrapped HTTP response causing the given API error.\n     */\n    get response() {\n        return this._response\n            ? replicateApiErrorResponse(this._response)\n            : undefined;\n    }\n    constructor(params) {\n        super(params);\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = ApiError;\n        Object.setPrototypeOf(this, ApiError.prototype);\n        if (params.response) {\n            this._response = params.response;\n        }\n    }\n}\nconst replicateApiErrorResponse = (response) => ({\n    ...response,\n    headers: { ...response.headers },\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function bytesToString(input) {\n    return Array.from(input, byte => String.fromCodePoint(byte)).join('');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getBtoa } from '../../globalHelpers';\nimport { bytesToString } from './bytesToString';\nexport const base64Encoder = {\n    convert(input, { urlSafe } = { urlSafe: false }) {\n        const inputStr = typeof input === 'string' ? input : bytesToString(input);\n        const encodedStr = getBtoa()(inputStr);\n        // see details about the char replacing at https://datatracker.ietf.org/doc/html/rfc4648#section-5\n        return urlSafe\n            ? encodedStr.replace(/\\+/g, '-').replace(/\\//g, '_')\n            : encodedStr;\n    },\n};\n", "export { signUp } from './apis/signUp.mjs';\nexport { resetPassword } from './apis/resetPassword.mjs';\nexport { confirmResetPassword } from './apis/confirmResetPassword.mjs';\nexport { signIn } from './apis/signIn.mjs';\nexport { resendSignUpCode } from './apis/resendSignUpCode.mjs';\nexport { confirmSignUp } from './apis/confirmSignUp.mjs';\nexport { confirmSignIn } from './apis/confirmSignIn.mjs';\nexport { updateMFAPreference } from './apis/updateMFAPreference.mjs';\nexport { fetchMFAPreference } from './apis/fetchMFAPreference.mjs';\nexport { verifyTOTPSetup } from './apis/verifyTOTPSetup.mjs';\nexport { updatePassword } from './apis/updatePassword.mjs';\nexport { setUpTOTP } from './apis/setUpTOTP.mjs';\nexport { updateUserAttributes } from './apis/updateUserAttributes.mjs';\nexport { updateUserAttribute } from './apis/updateUserAttribute.mjs';\nexport { getCurrentUser } from './apis/getCurrentUser.mjs';\nexport { confirmUserAttribute } from './apis/confirmUserAttribute.mjs';\nexport { signInWithRedirect } from './apis/signInWithRedirect.mjs';\nexport { fetchUserAttributes } from './apis/fetchUserAttributes.mjs';\nexport { signOut } from './apis/signOut.mjs';\nexport { sendUserAttributeVerificationCode } from './apis/sendUserAttributeVerificationCode.mjs';\nexport { deleteUserAttributes } from './apis/deleteUserAttributes.mjs';\nexport { deleteUser } from './apis/deleteUser.mjs';\nexport { rememberDevice } from './apis/rememberDevice.mjs';\nexport { forgetDevice } from './apis/forgetDevice.mjs';\nexport { fetchDevices } from './apis/fetchDevices.mjs';\nexport { autoSignIn } from './apis/autoSignIn.mjs';\nexport { cognitoCredentialsProvider } from './credentialsProvider/index.mjs';\nexport { refreshAuthTokens, refreshAuthTokensWithoutDedupe } from './utils/refreshAuthTokens.mjs';\nexport { DefaultTokenStore } from './tokenProvider/TokenStore.mjs';\nexport { TokenOrchestrator } from './tokenProvider/TokenOrchestrator.mjs';\nexport { cognitoUserPoolsTokenProvider } from './tokenProvider/tokenProvider.mjs';\nexport { CognitoAWSCredentialsAndIdentityIdProvider } from './credentialsProvider/credentialsProvider.mjs';\nexport { DefaultIdentityIdStore } from './credentialsProvider/IdentityIdStore.mjs';\n//# sourceMappingURL=index.mjs.map\n", "export { composeServiceApi } from './composeServiceApi.mjs';\nexport { composeTransferHandler } from './composeTransferHandler.mjs';\n//# sourceMappingURL=index.mjs.map\n", "export { getDnsSuffix } from './endpoints/getDnsSuffix.mjs';\nexport { fetchTransferHandler } from './handlers/fetch.mjs';\nexport { unauthenticatedHandler } from './handlers/unauthenticated.mjs';\nexport { authenticatedHandler } from './handlers/authenticated.mjs';\nexport { signRequest } from './middleware/signing/signer/signatureV4/signRequest.mjs';\nexport { presignUrl } from './middleware/signing/signer/signatureV4/presignUrl.mjs';\nexport { EMPTY_HASH as EMPTY_SHA256_HASH } from './middleware/signing/signer/signatureV4/constants.mjs';\nexport { getHashedPayload } from './middleware/signing/signer/signatureV4/utils/getHashedPayload.mjs';\nexport { extendedEncodeURIComponent } from './middleware/signing/utils/extendedEncodeURIComponent.mjs';\nexport { signingMiddlewareFactory } from './middleware/signing/middleware.mjs';\nexport { retryMiddlewareFactory } from './middleware/retry/middleware.mjs';\nexport { jitteredBackoff } from './middleware/retry/jitteredBackoff.mjs';\nexport { getRetryDecider } from './middleware/retry/defaultRetryDecider.mjs';\nexport { userAgentMiddlewareFactory } from './middleware/userAgent/middleware.mjs';\nexport { parseMetadata } from './serde/responseInfo.mjs';\nexport { parseJsonBody, parseJsonError } from './serde/json.mjs';\nexport { withMemoization } from './utils/memoization.mjs';\n//# sourceMappingURL=index.mjs.map\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, } from '@aws-amplify/core/internals/utils';\nexport class AuthError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyErrorCode, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../AuthError';\nexport function assertServiceError(error) {\n    if (!error ||\n        error.name === 'Error' ||\n        error instanceof TypeError) {\n        throw new AuthError({\n            name: AmplifyErrorCode.Unknown,\n            message: 'An unknown error has occurred.',\n            underlyingError: error,\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { getDnsSuffix, getRetryDecider, jitteredBackoff, parseJsonError, unauthenticatedHandler, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl, getAmplifyUserAgent, } from '@aws-amplify/core/internals/utils';\nimport { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-idp';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const customURL = authConfig?.userPoolEndpoint;\n    const defaultURL = new AmplifyUrl(`https://${SERVICE_NAME}.${region}.${getDnsSuffix(region)}`);\n    return {\n        url: customURL ? new AmplifyUrl(customURL) : defaultURL,\n    };\n};\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => (next, _) => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n/**\n * @internal\n */\nexport const defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\n/**\n * @internal\n */\nexport const getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`,\n});\n/**\n * @internal\n */\nexport const buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseJsonBody, parseJsonError, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../../../errors/AuthError';\nimport { buildHttpRpcRequest, cognitoUserPoolTransferHandler, defaultConfig, getSharedHeaders, } from './base';\nconst buildUserPoolSerializer = (operation) => (input, endpoint) => {\n    const headers = getSharedHeaders(operation);\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst buildUserPoolDeserializer = () => {\n    return async (response) => {\n        if (response.statusCode >= 300) {\n            const error = await parseJsonError(response);\n            assertServiceError(error);\n            throw new AuthError({ name: error.name, message: error.message });\n        }\n        else {\n            const body = await parseJsonBody(response);\n            return body;\n        }\n    };\n};\nconst handleEmptyResponseDeserializer = () => {\n    return async (response) => {\n        if (response.statusCode >= 300) {\n            const error = await parseJsonError(response);\n            assertServiceError(error);\n            throw new AuthError({ name: error.name, message: error.message });\n        }\n        else {\n            return undefined;\n        }\n    };\n};\nexport const initiateAuth = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('InitiateAuth'), buildUserPoolDeserializer(), defaultConfig);\nexport const revokeToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('RevokeToken'), buildUserPoolDeserializer(), defaultConfig);\nexport const signUp = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('SignUp'), buildUserPoolDeserializer(), defaultConfig);\nexport const confirmSignUp = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmSignUp'), buildUserPoolDeserializer(), defaultConfig);\nexport const forgotPassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ForgotPassword'), buildUserPoolDeserializer(), defaultConfig);\nexport const confirmForgotPassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmForgotPassword'), buildUserPoolDeserializer(), defaultConfig);\nexport const respondToAuthChallenge = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('RespondToAuthChallenge'), buildUserPoolDeserializer(), defaultConfig);\nexport const resendConfirmationCode = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ResendConfirmationCode'), buildUserPoolDeserializer(), defaultConfig);\nexport const verifySoftwareToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('VerifySoftwareToken'), buildUserPoolDeserializer(), defaultConfig);\nexport const associateSoftwareToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('AssociateSoftwareToken'), buildUserPoolDeserializer(), defaultConfig);\nexport const setUserMFAPreference = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('SetUserMFAPreference'), buildUserPoolDeserializer(), defaultConfig);\nexport const getUser = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GetUser'), buildUserPoolDeserializer(), defaultConfig);\nexport const changePassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ChangePassword'), buildUserPoolDeserializer(), defaultConfig);\nexport const confirmDevice = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmDevice'), buildUserPoolDeserializer(), defaultConfig);\nexport const forgetDevice = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ForgetDevice'), handleEmptyResponseDeserializer(), defaultConfig);\nexport const deleteUser = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('DeleteUser'), handleEmptyResponseDeserializer(), defaultConfig);\nexport const getUserAttributeVerificationCode = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GetUserAttributeVerificationCode'), buildUserPoolDeserializer(), defaultConfig);\nexport const globalSignOut = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GlobalSignOut'), buildUserPoolDeserializer(), defaultConfig);\nexport const updateUserAttributes = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('UpdateUserAttributes'), buildUserPoolDeserializer(), defaultConfig);\nexport const verifyUserAttribute = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('VerifyUserAttribute'), buildUserPoolDeserializer(), defaultConfig);\nexport const updateDeviceStatus = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('UpdateDeviceStatus'), buildUserPoolDeserializer(), defaultConfig);\nexport const listDevices = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ListDevices'), buildUserPoolDeserializer(), defaultConfig);\nexport const deleteUserAttributes = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('DeleteUserAttributes'), buildUserPoolDeserializer(), defaultConfig);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AuthValidationErrorCode;\n(function (AuthValidationErrorCode) {\n    AuthValidationErrorCode[\"EmptySignInUsername\"] = \"EmptySignInUsername\";\n    AuthValidationErrorCode[\"EmptySignInPassword\"] = \"EmptySignInPassword\";\n    AuthValidationErrorCode[\"CustomAuthSignInPassword\"] = \"CustomAuthSignInPassword\";\n    AuthValidationErrorCode[\"EmptySignUpUsername\"] = \"EmptySignUpUsername\";\n    AuthValidationErrorCode[\"EmptySignUpPassword\"] = \"EmptySignUpPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpUsername\"] = \"EmptyConfirmSignUpUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpCode\"] = \"EmptyConfirmSignUpCode\";\n    AuthValidationErrorCode[\"EmptyResendSignUpCodeUsername\"] = \"EmptyresendSignUpCodeUsername\";\n    AuthValidationErrorCode[\"EmptyChallengeResponse\"] = \"EmptyChallengeResponse\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordUsername\"] = \"EmptyConfirmResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordNewPassword\"] = \"EmptyConfirmResetPasswordNewPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordConfirmationCode\"] = \"EmptyConfirmResetPasswordConfirmationCode\";\n    AuthValidationErrorCode[\"EmptyResetPasswordUsername\"] = \"EmptyResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyVerifyTOTPSetupCode\"] = \"EmptyVerifyTOTPSetupCode\";\n    AuthValidationErrorCode[\"EmptyConfirmUserAttributeCode\"] = \"EmptyConfirmUserAttributeCode\";\n    AuthValidationErrorCode[\"IncorrectMFAMethod\"] = \"IncorrectMFAMethod\";\n    AuthValidationErrorCode[\"EmptyUpdatePassword\"] = \"EmptyUpdatePassword\";\n})(AuthValidationErrorCode || (AuthValidationErrorCode = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthValidationErrorCode } from '../errors/types/validation';\nexport const validationErrorMap = {\n    [AuthValidationErrorCode.EmptyChallengeResponse]: {\n        message: 'challengeResponse is required to confirmSignIn',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordUsername]: {\n        message: 'username is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpCode]: {\n        message: 'code is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode]: {\n        message: 'confirmationCode is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword]: {\n        message: 'newPassword is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyResendSignUpCodeUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyResetPasswordUsername]: {\n        message: 'username is required to resetPassword',\n    },\n    [AuthValidationErrorCode.EmptySignInPassword]: {\n        message: 'password is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignInUsername]: {\n        message: 'username is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignUpPassword]: {\n        message: 'password is required to signUp',\n    },\n    [AuthValidationErrorCode.EmptySignUpUsername]: {\n        message: 'username is required to signUp',\n    },\n    [AuthValidationErrorCode.CustomAuthSignInPassword]: {\n        message: 'A password is not needed when signing in with CUSTOM_WITHOUT_SRP',\n        recoverySuggestion: 'Do not include a password in your signIn call.',\n    },\n    [AuthValidationErrorCode.IncorrectMFAMethod]: {\n        message: 'Incorrect MFA method was chosen. It should be either SMS or TOTP',\n        recoverySuggestion: 'Try to pass TOTP or SMS as the challengeResponse',\n    },\n    [AuthValidationErrorCode.EmptyVerifyTOTPSetupCode]: {\n        message: 'code is required to verifyTotpSetup',\n    },\n    [AuthValidationErrorCode.EmptyUpdatePassword]: {\n        message: 'oldPassword and newPassword are required to changePassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmUserAttributeCode]: {\n        message: 'confirmation code is required to confirmUserAttribute',\n    },\n};\n// TODO: delete this code when the Auth class is removed.\nexport var AuthErrorStrings;\n(function (AuthErrorStrings) {\n    AuthErrorStrings[\"DEFAULT_MSG\"] = \"Authentication Error\";\n    AuthErrorStrings[\"EMPTY_EMAIL\"] = \"Email cannot be empty\";\n    AuthErrorStrings[\"EMPTY_PHONE\"] = \"Phone number cannot be empty\";\n    AuthErrorStrings[\"EMPTY_USERNAME\"] = \"Username cannot be empty\";\n    AuthErrorStrings[\"INVALID_USERNAME\"] = \"The username should either be a string or one of the sign in types\";\n    AuthErrorStrings[\"EMPTY_PASSWORD\"] = \"Password cannot be empty\";\n    AuthErrorStrings[\"EMPTY_CODE\"] = \"Confirmation code cannot be empty\";\n    AuthErrorStrings[\"SIGN_UP_ERROR\"] = \"Error creating account\";\n    AuthErrorStrings[\"NO_MFA\"] = \"No valid MFA method provided\";\n    AuthErrorStrings[\"INVALID_MFA\"] = \"Invalid MFA type\";\n    AuthErrorStrings[\"EMPTY_CHALLENGE\"] = \"Challenge response cannot be empty\";\n    AuthErrorStrings[\"NO_USER_SESSION\"] = \"Failed to get the session because the user is empty\";\n    AuthErrorStrings[\"NETWORK_ERROR\"] = \"Network Error\";\n    AuthErrorStrings[\"DEVICE_CONFIG\"] = \"Device tracking has not been configured in this User Pool\";\n    AuthErrorStrings[\"AUTOSIGNIN_ERROR\"] = \"Please use your credentials to sign in\";\n    AuthErrorStrings[\"OAUTH_ERROR\"] = \"Couldn't finish OAuth flow, check your User Pool HostedUI settings\";\n})(AuthErrorStrings || (AuthErrorStrings = {}));\nexport var AuthErrorCodes;\n(function (AuthErrorCodes) {\n    AuthErrorCodes[\"SignInException\"] = \"SignInException\";\n    AuthErrorCodes[\"OAuthSignInError\"] = \"OAuthSignInException\";\n})(AuthErrorCodes || (AuthErrorCodes = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../../errors/AuthError';\nexport function getRegion(userPoolId) {\n    const region = userPoolId?.split('_')[0];\n    if (!userPoolId ||\n        userPoolId.indexOf('_') < 0 ||\n        !region ||\n        typeof region !== 'string')\n        throw new AuthError({\n            name: 'InvalidUserPoolId',\n            message: 'Invalid user pool id provided.',\n        });\n    return region;\n}\nexport function getRegionFromIdentityPoolId(identityPoolId) {\n    if (!identityPoolId || !identityPoolId.includes(':')) {\n        throw new AuthError({\n            name: 'InvalidIdentityPoolIdException',\n            message: 'Invalid identity pool id provided.',\n            recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n        });\n    }\n    return identityPoolId.split(':')[0];\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from './AuthError';\nexport const USER_UNAUTHENTICATED_EXCEPTION = 'UserUnAuthenticatedException';\nexport const USER_ALREADY_AUTHENTICATED_EXCEPTION = 'UserAlreadyAuthenticatedException';\nexport const DEVICE_METADATA_NOT_FOUND_EXCEPTION = 'DeviceMetadataNotFoundException';\nexport const AUTO_SIGN_IN_EXCEPTION = 'AutoSignInException';\nexport const INVALID_REDIRECT_EXCEPTION = 'InvalidRedirectException';\nexport const invalidRedirectException = new AuthError({\n    name: INVALID_REDIRECT_EXCEPTION,\n    message: 'signInRedirect or signOutRedirect had an invalid format or was not found.',\n    recoverySuggestion: 'Please make sure the signIn/Out redirect in your oauth config is valid.',\n});\nexport const INVALID_ORIGIN_EXCEPTION = 'InvalidOriginException';\nexport const invalidOriginException = new AuthError({\n    name: INVALID_ORIGIN_EXCEPTION,\n    message: 'redirect is coming from a different origin. The oauth flow needs to be initiated from the same origin',\n    recoverySuggestion: 'Please call signInWithRedirect from the same origin.',\n});\nexport const OAUTH_SIGNOUT_EXCEPTION = 'OAuthSignOutException';\nexport const TOKEN_REFRESH_EXCEPTION = 'TokenRefreshException';\nexport const UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION = 'UnexpectedSignInInterruptionException';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../errors/AuthError';\nimport { DEVICE_METADATA_NOT_FOUND_EXCEPTION, TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nexport function isTypeUserPoolConfig(authConfig) {\n    if (authConfig &&\n        authConfig.Cognito.userPoolId &&\n        authConfig.Cognito.userPoolClientId) {\n        return true;\n    }\n    return false;\n}\nexport function assertAuthTokens(tokens) {\n    if (!tokens || !tokens.accessToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport function assertIdTokenInAuthTokens(tokens) {\n    if (!tokens || !tokens.idToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport const oAuthTokenRefreshException = new AuthError({\n    name: TOKEN_REFRESH_EXCEPTION,\n    message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n    recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`,\n});\nexport const tokenRefreshException = new AuthError({\n    name: USER_UNAUTHENTICATED_EXCEPTION,\n    message: 'User needs to be authenticated to call this API.',\n    recoverySuggestion: 'Sign in before calling this API again.',\n});\nexport function assertAuthTokensWithRefreshToken(tokens) {\n    if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n        throw oAuthTokenRefreshException;\n    }\n    if (!isAuthenticatedWithRefreshToken(tokens)) {\n        throw tokenRefreshException;\n    }\n}\nexport function assertDeviceMetadata(deviceMetadata) {\n    if (!deviceMetadata ||\n        !deviceMetadata.deviceKey ||\n        !deviceMetadata.deviceGroupKey ||\n        !deviceMetadata.randomPassword) {\n        throw new AuthError({\n            name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n            message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n            recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.',\n        });\n    }\n}\nexport const OAuthStorageKeys = {\n    inflightOAuth: 'inflightOAuth',\n    oauthSignIn: 'oauthSignIn',\n    oauthPKCE: 'oauthPKCE',\n    oauthState: 'oauthState',\n};\nfunction isAuthenticated(tokens) {\n    return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n    return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n    return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../utils/types';\nexport const getCurrentUser = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const tokens = await amplify.Auth.getTokens({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const { 'cognito:username': username, sub } = tokens.idToken?.payload ?? {};\n    const authUser = {\n        username: username,\n        userId: sub,\n    };\n    const signInDetails = getSignInDetailsFromTokens(tokens);\n    if (signInDetails) {\n        authUser.signInDetails = signInDetails;\n    }\n    return authUser;\n};\nfunction getSignInDetailsFromTokens(tokens) {\n    return tokens?.signInDetails;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { getCurrentUser as getCurrentUserInternal } from './internal/getCurrentUser';\n/**\n * Gets the current user from the idToken.\n *\n * @param input -  The GetCurrentUserInput object.\n * @returns GetCurrentUserOutput\n * @throws - {@link InitiateAuthException} - Thrown when the service fails to refresh the tokens.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport const getCurrentUser = async () => {\n    return getCurrentUserInternal(Amplify);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Category, getAmplifyUserAgent, } from '@aws-amplify/core/internals/utils';\nexport const getAuthUserAgentValue = (action, customUserAgentDetails) => getAmplifyUserAgent({\n    category: Category.Auth,\n    action,\n    ...customUserAgentDetails,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function getUserContextData({ username, userPoolId, userPoolClientId, }) {\n    if (typeof window === 'undefined') {\n        return undefined;\n    }\n    const amazonCognitoAdvancedSecurityData = window\n        .AmazonCognitoAdvancedSecurityData;\n    if (typeof amazonCognitoAdvancedSecurityData === 'undefined') {\n        return undefined;\n    }\n    const advancedSecurityData = amazonCognitoAdvancedSecurityData.getData(username, userPoolId, userPoolClientId);\n    if (advancedSecurityData) {\n        const userContextData = {\n            EncodedData: advancedSecurityData,\n        };\n        return userContextData;\n    }\n    return {};\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig, deDupeAsyncFunction, decodeJWT, } from '@aws-amplify/core/internals/utils';\nimport { initiateAuth } from '../utils/clients/CognitoIdentityProvider';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils';\nimport { assertAuthTokensWithRefreshToken } from '../utils/types';\nimport { AuthError } from '../../../errors/AuthError';\nimport { getUserContextData } from './userContextData';\nconst refreshAuthTokensFunction = async ({ tokens, authConfig, username, }) => {\n    assertTokenProviderConfig(authConfig?.Cognito);\n    const region = getRegion(authConfig.Cognito.userPoolId);\n    assertAuthTokensWithRefreshToken(tokens);\n    const refreshTokenString = tokens.refreshToken;\n    const AuthParameters = {\n        REFRESH_TOKEN: refreshTokenString,\n    };\n    if (tokens.deviceMetadata?.deviceKey) {\n        AuthParameters.DEVICE_KEY = tokens.deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId: authConfig.Cognito.userPoolId,\n        userPoolClientId: authConfig.Cognito.userPoolClientId,\n    });\n    const { AuthenticationResult } = await initiateAuth({ region }, {\n        ClientId: authConfig?.Cognito?.userPoolClientId,\n        AuthFlow: 'REFRESH_TOKEN_AUTH',\n        AuthParameters,\n        UserContextData,\n    });\n    const accessToken = decodeJWT(AuthenticationResult?.AccessToken ?? '');\n    const idToken = AuthenticationResult?.IdToken\n        ? decodeJWT(AuthenticationResult.IdToken)\n        : undefined;\n    const { iat } = accessToken.payload;\n    // This should never happen. If it does, it's a bug from the service.\n    if (!iat) {\n        throw new AuthError({\n            name: 'iatNotFoundException',\n            message: 'iat not found in access token',\n        });\n    }\n    const clockDrift = iat * 1000 - new Date().getTime();\n    return {\n        accessToken,\n        idToken,\n        clockDrift,\n        refreshToken: refreshTokenString,\n        username,\n    };\n};\nexport const refreshAuthTokens = deDupeAsyncFunction(refreshAuthTokensFunction);\nexport const refreshAuthTokensWithoutDedupe = refreshAuthTokensFunction;\n", "export const AuthTokenStorageKeys = {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    oidcProvider: 'oidcProvider',\n    clockDrift: 'clockDrift',\n    refreshToken: 'refreshToken',\n    deviceKey: 'deviceKey',\n    randomPasswordKey: 'randomPasswordKey',\n    deviceGroupKey: 'deviceGroupKey',\n    signInDetails: 'signInDetails',\n    oauthMetadata: 'oauthMetadata',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction, } from '@aws-amplify/core/internals/utils';\nexport var TokenProviderErrorCode;\n(function (TokenProviderErrorCode) {\n    TokenProviderErrorCode[\"InvalidAuthTokens\"] = \"InvalidAuthTokens\";\n})(TokenProviderErrorCode || (TokenProviderErrorCode = {}));\nconst tokenValidationErrorMap = {\n    [TokenProviderErrorCode.InvalidAuthTokens]: {\n        message: 'Invalid tokens.',\n        recoverySuggestion: 'Make sure the tokens are valid.',\n    },\n};\nexport const assert = createAssertionFunction(tokenValidationErrorMap);\n", "import { assertTokenProviderConfig, decodeJWT, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { AuthTokenStorageKeys, } from './types';\nimport { TokenProviderErrorCode, assert } from './errorHelpers';\nexport class DefaultTokenStore {\n    constructor() {\n        this.name = 'CognitoIdentityServiceProvider'; // To be backwards compatible with V5, no migration needed\n    }\n    getKeyValueStorage() {\n        if (!this.keyValueStorage) {\n            throw new AuthError({\n                name: 'KeyValueStorageNotFoundException',\n                message: 'KeyValueStorage was not found in TokenStore',\n            });\n        }\n        return this.keyValueStorage;\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    setAuthConfig(authConfig) {\n        this.authConfig = authConfig;\n    }\n    async loadTokens() {\n        // TODO(v6): migration logic should be here\n        // Reading V5 tokens old format\n        try {\n            const authKeys = await this.getAuthKeys();\n            const accessTokenString = await this.getKeyValueStorage().getItem(authKeys.accessToken);\n            if (!accessTokenString) {\n                throw new AuthError({\n                    name: 'NoSessionFoundException',\n                    message: 'Auth session was not found. Make sure to call signIn.',\n                });\n            }\n            const accessToken = decodeJWT(accessTokenString);\n            const itString = await this.getKeyValueStorage().getItem(authKeys.idToken);\n            const idToken = itString ? decodeJWT(itString) : undefined;\n            const refreshToken = (await this.getKeyValueStorage().getItem(authKeys.refreshToken)) ??\n                undefined;\n            const clockDriftString = (await this.getKeyValueStorage().getItem(authKeys.clockDrift)) ?? '0';\n            const clockDrift = Number.parseInt(clockDriftString);\n            const signInDetails = await this.getKeyValueStorage().getItem(authKeys.signInDetails);\n            const tokens = {\n                accessToken,\n                idToken,\n                refreshToken,\n                deviceMetadata: (await this.getDeviceMetadata()) ?? undefined,\n                clockDrift,\n                username: await this.getLastAuthUser(),\n            };\n            if (signInDetails) {\n                tokens.signInDetails = JSON.parse(signInDetails);\n            }\n            return tokens;\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    async storeTokens(tokens) {\n        assert(tokens !== undefined, TokenProviderErrorCode.InvalidAuthTokens);\n        await this.clearTokens();\n        const lastAuthUser = tokens.username;\n        await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(), lastAuthUser);\n        const authKeys = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(authKeys.accessToken, tokens.accessToken.toString());\n        if (tokens.idToken) {\n            await this.getKeyValueStorage().setItem(authKeys.idToken, tokens.idToken.toString());\n        }\n        if (tokens.refreshToken) {\n            await this.getKeyValueStorage().setItem(authKeys.refreshToken, tokens.refreshToken);\n        }\n        if (tokens.deviceMetadata) {\n            if (tokens.deviceMetadata.deviceKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceKey, tokens.deviceMetadata.deviceKey);\n            }\n            if (tokens.deviceMetadata.deviceGroupKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceGroupKey, tokens.deviceMetadata.deviceGroupKey);\n            }\n            await this.getKeyValueStorage().setItem(authKeys.randomPasswordKey, tokens.deviceMetadata.randomPassword);\n        }\n        if (tokens.signInDetails) {\n            await this.getKeyValueStorage().setItem(authKeys.signInDetails, JSON.stringify(tokens.signInDetails));\n        }\n        await this.getKeyValueStorage().setItem(authKeys.clockDrift, `${tokens.clockDrift}`);\n    }\n    async clearTokens() {\n        const authKeys = await this.getAuthKeys();\n        // Not calling clear because it can remove data that is not managed by AuthTokenStore\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.accessToken),\n            this.getKeyValueStorage().removeItem(authKeys.idToken),\n            this.getKeyValueStorage().removeItem(authKeys.clockDrift),\n            this.getKeyValueStorage().removeItem(authKeys.refreshToken),\n            this.getKeyValueStorage().removeItem(authKeys.signInDetails),\n            this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),\n            this.getKeyValueStorage().removeItem(authKeys.oauthMetadata),\n        ]);\n    }\n    async getDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        const deviceKey = await this.getKeyValueStorage().getItem(authKeys.deviceKey);\n        const deviceGroupKey = await this.getKeyValueStorage().getItem(authKeys.deviceGroupKey);\n        const randomPassword = await this.getKeyValueStorage().getItem(authKeys.randomPasswordKey);\n        return randomPassword && deviceGroupKey && deviceKey\n            ? {\n                deviceKey,\n                deviceGroupKey,\n                randomPassword,\n            }\n            : null;\n    }\n    async clearDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.deviceKey),\n            this.getKeyValueStorage().removeItem(authKeys.deviceGroupKey),\n            this.getKeyValueStorage().removeItem(authKeys.randomPasswordKey),\n        ]);\n    }\n    async getAuthKeys(username) {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const lastAuthUser = username ?? (await this.getLastAuthUser());\n        return createKeysForAuthStorage(this.name, `${this.authConfig.Cognito.userPoolClientId}.${lastAuthUser}`);\n    }\n    getLastAuthUserKey() {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const identifier = this.authConfig.Cognito.userPoolClientId;\n        return `${this.name}.${identifier}.LastAuthUser`;\n    }\n    async getLastAuthUser() {\n        const lastAuthUser = (await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())) ??\n            'username';\n        return lastAuthUser;\n    }\n    async setOAuthMetadata(metadata) {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(oauthMetadataKey, JSON.stringify(metadata));\n    }\n    async getOAuthMetadata() {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        const oauthMetadata = await this.getKeyValueStorage().getItem(oauthMetadataKey);\n        return oauthMetadata && JSON.parse(oauthMetadata);\n    }\n}\nexport const createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(AuthTokenStorageKeys)(`${provider}`, identifier);\n};\nexport function getAuthStorageKeys(authKeys) {\n    const keys = Object.values({ ...authKeys });\n    return (prefix, identifier) => keys.reduce((acc, authKey) => ({\n        ...acc,\n        [authKey]: `${prefix}.${identifier}.${authKey}`,\n    }), {});\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore';\nimport { OAuthStorageKeys } from './types';\nconst V5_HOSTED_UI_KEY = 'amplify-signin-with-hostedUI';\nconst name = 'CognitoIdentityServiceProvider';\nexport class DefaultOAuthStore {\n    constructor(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    async clearOAuthInflightData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await Promise.all([\n            this.keyValueStorage.removeItem(authKeys.inflightOAuth),\n            this.keyValueStorage.removeItem(authKeys.oauthPKCE),\n            this.keyValueStorage.removeItem(authKeys.oauthState),\n        ]);\n    }\n    async clearOAuthData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.clearOAuthInflightData();\n        await this.keyValueStorage.removeItem(V5_HOSTED_UI_KEY); // remove in case a customer migrated an App from v5 to v6\n        return this.keyValueStorage.removeItem(authKeys.oauthSignIn);\n    }\n    loadOAuthState() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthState);\n    }\n    storeOAuthState(state) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthState, state);\n    }\n    loadPKCE() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthPKCE);\n    }\n    storePKCE(pkce) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthPKCE, pkce);\n    }\n    setAuthConfig(authConfigParam) {\n        this.cognitoConfig = authConfigParam;\n    }\n    async loadOAuthInFlight() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return ((await this.keyValueStorage.getItem(authKeys.inflightOAuth)) === 'true');\n    }\n    async storeOAuthInFlight(inflight) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.inflightOAuth, `${inflight}`);\n    }\n    async loadOAuthSignIn() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        const isLegacyHostedUISignIn = await this.keyValueStorage.getItem(V5_HOSTED_UI_KEY);\n        const [isOAuthSignIn, preferPrivateSession] = (await this.keyValueStorage.getItem(authKeys.oauthSignIn))?.split(',') ??\n            [];\n        return {\n            isOAuthSignIn: isOAuthSignIn === 'true' || isLegacyHostedUISignIn === 'true',\n            preferPrivateSession: preferPrivateSession === 'true',\n        };\n    }\n    async storeOAuthSignIn(oauthSignIn, preferPrivateSession = false) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.oauthSignIn, `${oauthSignIn},${preferPrivateSession}`);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(OAuthStorageKeys)(provider, identifier);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage } from '@aws-amplify/core';\nimport { DefaultOAuthStore } from '../signInWithRedirectStore';\nexport const oAuthStore = new DefaultOAuthStore(defaultStorage);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst inflightPromises = [];\nexport const addInflightPromise = (resolver) => {\n    inflightPromises.push(resolver);\n};\nexport const resolveAndClearInflightPromises = () => {\n    while (inflightPromises.length) {\n        inflightPromises.pop()?.();\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub, } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL, assertTokenProviderConfig, isBrowser, isTokenExpired, } from '@aws-amplify/core/internals/utils';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../errors/AuthError';\nimport { oAuthStore } from '../utils/oauth/oAuthStore';\nimport { addInflightPromise } from '../utils/oauth/inflightPromise';\nexport class TokenOrchestrator {\n    constructor() {\n        this.waitForInflightOAuth = isBrowser()\n            ? async () => {\n                if (!(await oAuthStore.loadOAuthInFlight())) {\n                    return;\n                }\n                if (this.inflightPromise) {\n                    return this.inflightPromise;\n                }\n                // when there is valid oauth config and there is an inflight oauth flow, try\n                // to block async calls that require fetching tokens before the oauth flow completes\n                // e.g. getCurrentUser, fetchAuthSession etc.\n                this.inflightPromise = new Promise((resolve, _reject) => {\n                    addInflightPromise(resolve);\n                });\n                return this.inflightPromise;\n            }\n            : async () => {\n                // no-op for non-browser environments\n            };\n    }\n    setAuthConfig(authConfig) {\n        oAuthStore.setAuthConfig(authConfig.Cognito);\n        this.authConfig = authConfig;\n    }\n    setTokenRefresher(tokenRefresher) {\n        this.tokenRefresher = tokenRefresher;\n    }\n    setAuthTokenStore(tokenStore) {\n        this.tokenStore = tokenStore;\n    }\n    getTokenStore() {\n        if (!this.tokenStore) {\n            throw new AuthError({\n                name: 'EmptyTokenStoreException',\n                message: 'TokenStore not set',\n            });\n        }\n        return this.tokenStore;\n    }\n    getTokenRefresher() {\n        if (!this.tokenRefresher) {\n            throw new AuthError({\n                name: 'EmptyTokenRefresherException',\n                message: 'TokenRefresher not set',\n            });\n        }\n        return this.tokenRefresher;\n    }\n    async getTokens(options) {\n        let tokens;\n        try {\n            assertTokenProviderConfig(this.authConfig?.Cognito);\n        }\n        catch (_err) {\n            // Token provider not configured\n            return null;\n        }\n        await this.waitForInflightOAuth();\n        this.inflightPromise = undefined;\n        tokens = await this.getTokenStore().loadTokens();\n        const username = await this.getTokenStore().getLastAuthUser();\n        if (tokens === null) {\n            return null;\n        }\n        const idTokenExpired = !!tokens?.idToken &&\n            isTokenExpired({\n                expiresAt: (tokens.idToken?.payload?.exp ?? 0) * 1000,\n                clockDrift: tokens.clockDrift ?? 0,\n            });\n        const accessTokenExpired = isTokenExpired({\n            expiresAt: (tokens.accessToken?.payload?.exp ?? 0) * 1000,\n            clockDrift: tokens.clockDrift ?? 0,\n        });\n        if (options?.forceRefresh || idTokenExpired || accessTokenExpired) {\n            tokens = await this.refreshTokens({\n                tokens,\n                username,\n            });\n            if (tokens === null) {\n                return null;\n            }\n        }\n        return {\n            accessToken: tokens?.accessToken,\n            idToken: tokens?.idToken,\n            signInDetails: tokens?.signInDetails,\n        };\n    }\n    async refreshTokens({ tokens, username, }) {\n        try {\n            const { signInDetails } = tokens;\n            const newTokens = await this.getTokenRefresher()({\n                tokens,\n                authConfig: this.authConfig,\n                username,\n            });\n            newTokens.signInDetails = signInDetails;\n            await this.setTokens({ tokens: newTokens });\n            Hub.dispatch('auth', { event: 'tokenRefresh' }, 'Auth', AMPLIFY_SYMBOL);\n            return newTokens;\n        }\n        catch (err) {\n            return this.handleErrors(err);\n        }\n    }\n    handleErrors(err) {\n        assertServiceError(err);\n        if (err.message !== 'Network error') {\n            // TODO(v6): Check errors on client\n            this.clearTokens();\n        }\n        Hub.dispatch('auth', {\n            event: 'tokenRefresh_failure',\n            data: { error: err },\n        }, 'Auth', AMPLIFY_SYMBOL);\n        if (err.name.startsWith('NotAuthorizedException')) {\n            return null;\n        }\n        throw err;\n    }\n    async setTokens({ tokens }) {\n        return this.getTokenStore().storeTokens(tokens);\n    }\n    async clearTokens() {\n        return this.getTokenStore().clearTokens();\n    }\n    getDeviceMetadata(username) {\n        return this.getTokenStore().getDeviceMetadata(username);\n    }\n    clearDeviceMetadata(username) {\n        return this.getTokenStore().clearDeviceMetadata(username);\n    }\n    setOAuthMetadata(metadata) {\n        return this.getTokenStore().setOAuthMetadata(metadata);\n    }\n    getOAuthMetadata() {\n        return this.getTokenStore().getOAuthMetadata();\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage, } from '@aws-amplify/core';\nimport { refreshAuthTokens } from '../utils/refreshAuthTokens';\nimport { DefaultTokenStore } from './TokenStore';\nimport { TokenOrchestrator } from './TokenOrchestrator';\nexport class CognitoUserPoolsTokenProvider {\n    constructor() {\n        this.authTokenStore = new DefaultTokenStore();\n        this.authTokenStore.setKeyValueStorage(defaultStorage);\n        this.tokenOrchestrator = new TokenOrchestrator();\n        this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n        this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n    }\n    getTokens({ forceRefresh } = { forceRefresh: false }) {\n        return this.tokenOrchestrator.getTokens({ forceRefresh });\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.authTokenStore.setKeyValueStorage(keyValueStorage);\n    }\n    setAuthConfig(authConfig) {\n        this.authTokenStore.setAuthConfig(authConfig);\n        this.tokenOrchestrator.setAuthConfig(authConfig);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider';\n/**\n * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n * in-memory storage if not.\n */\nexport const cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\nexport const { tokenOrchestrator } = cognitoUserPoolsTokenProvider;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { tokenOrchestrator } from './tokenProvider';\nexport async function cacheCognitoTokens(AuthenticationResult) {\n    if (AuthenticationResult.AccessToken) {\n        const accessToken = decodeJWT(AuthenticationResult.AccessToken);\n        const accessTokenIssuedAtInMillis = (accessToken.payload.iat || 0) * 1000;\n        const currentTime = new Date().getTime();\n        const clockDrift = accessTokenIssuedAtInMillis > 0\n            ? accessTokenIssuedAtInMillis - currentTime\n            : 0;\n        let idToken;\n        let refreshToken;\n        let deviceMetadata;\n        if (AuthenticationResult.RefreshToken) {\n            refreshToken = AuthenticationResult.RefreshToken;\n        }\n        if (AuthenticationResult.IdToken) {\n            idToken = decodeJWT(AuthenticationResult.IdToken);\n        }\n        if (AuthenticationResult?.NewDeviceMetadata) {\n            deviceMetadata = AuthenticationResult.NewDeviceMetadata;\n        }\n        const tokens = {\n            accessToken,\n            idToken,\n            refreshToken,\n            clockDrift,\n            deviceMetadata,\n            username: AuthenticationResult.username,\n        };\n        if (AuthenticationResult?.signInDetails) {\n            tokens.signInDetails = AuthenticationResult.signInDetails;\n        }\n        await tokenOrchestrator.setTokens({\n            tokens,\n        });\n    }\n    else {\n        // This would be a service error\n        throw new AmplifyError({\n            message: 'Invalid tokens',\n            name: 'InvalidTokens',\n            recoverySuggestion: 'Check Cognito UserPool settings',\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { getCurrentUser } from '../apis/getCurrentUser';\nimport { UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nimport { AuthError } from '../../../errors/AuthError';\nexport const ERROR_MESSAGE = 'Unable to get user session following successful sign-in.';\nexport const dispatchSignedInHubEvent = async () => {\n    try {\n        Hub.dispatch('auth', {\n            event: 'signedIn',\n            data: await getCurrentUser(),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    catch (error) {\n        if (error.name === USER_UNAUTHENTICATED_EXCEPTION) {\n            throw new AuthError({\n                name: UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION,\n                message: ERROR_MESSAGE,\n                recoverySuggestion: 'This most likely is due to auth tokens not being persisted. If you are using cookie store, please ensure cookies can be correctly set from your server.',\n            });\n        }\n        throw error;\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: delete this module when the Auth class is removed.\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { AuthErrorStrings } from './common/AuthErrorStrings';\nconst logger = new ConsoleLogger('AuthError');\nexport class AuthError extends Error {\n    constructor(type) {\n        const { message, log } = authErrorMessages[type];\n        super(message);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.name = 'AuthError';\n        this.log = log || message;\n        logger.error(this.log);\n    }\n}\nexport class NoUserPoolError extends AuthError {\n    constructor(type) {\n        super(type);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = NoUserPoolError;\n        Object.setPrototypeOf(this, NoUserPoolError.prototype);\n        this.name = 'NoUserPoolError';\n    }\n}\nexport const authErrorMessages = {\n    oauthSignInError: {\n        message: AuthErrorStrings.OAUTH_ERROR,\n        log: 'Make sure Cognito Hosted UI has been configured correctly',\n    },\n    noConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly.\n            This error is typically caused by one of the following scenarios:\n\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\n            \n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\n\t\t\t\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\n        `,\n    },\n    missingAuthConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly. \n            The configuration object is missing required auth properties.\n            This error is typically caused by one of the following scenarios:\n\n            1. Did you run \\`amplify push\\` after adding auth via \\`amplify add auth\\`?\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\n\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\n        `,\n    },\n    emptyUsername: {\n        message: AuthErrorStrings.EMPTY_USERNAME,\n    },\n    // TODO: should include a list of valid sign-in types\n    invalidUsername: {\n        message: AuthErrorStrings.INVALID_USERNAME,\n    },\n    emptyPassword: {\n        message: AuthErrorStrings.EMPTY_PASSWORD,\n    },\n    emptyCode: {\n        message: AuthErrorStrings.EMPTY_CODE,\n    },\n    signUpError: {\n        message: AuthErrorStrings.SIGN_UP_ERROR,\n        log: 'The first parameter should either be non-null string or object',\n    },\n    noMFA: {\n        message: AuthErrorStrings.NO_MFA,\n    },\n    invalidMFA: {\n        message: AuthErrorStrings.INVALID_MFA,\n    },\n    emptyChallengeResponse: {\n        message: AuthErrorStrings.EMPTY_CHALLENGE,\n    },\n    noUserSession: {\n        message: AuthErrorStrings.NO_USER_SESSION,\n    },\n    deviceConfig: {\n        message: AuthErrorStrings.DEVICE_CONFIG,\n    },\n    networkError: {\n        message: AuthErrorStrings.NETWORK_ERROR,\n    },\n    autoSignInError: {\n        message: AuthErrorStrings.AUTOSIGNIN_ERROR,\n    },\n    default: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n    },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { authErrorMessages } from '../../../../Errors';\nimport { AuthErrorCodes } from '../../../../common/AuthErrorStrings';\nimport { AuthError } from '../../../../errors/AuthError';\nexport const createOAuthError = (message, recoverySuggestion) => new AuthError({\n    message: message ?? 'An error has occurred during the oauth process.',\n    name: AuthErrorCodes.OAuthSignInError,\n    recoverySuggestion: recoverySuggestion ?? authErrorMessages.oauthSignInError.log,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AuthErrorTypes;\n(function (AuthErrorTypes) {\n    AuthErrorTypes[\"NoConfig\"] = \"noConfig\";\n    AuthErrorTypes[\"MissingAuthConfig\"] = \"missingAuthConfig\";\n    AuthErrorTypes[\"EmptyUsername\"] = \"emptyUsername\";\n    AuthErrorTypes[\"InvalidUsername\"] = \"invalidUsername\";\n    AuthErrorTypes[\"EmptyPassword\"] = \"emptyPassword\";\n    AuthErrorTypes[\"EmptyCode\"] = \"emptyCode\";\n    AuthErrorTypes[\"SignUpError\"] = \"signUpError\";\n    AuthErrorTypes[\"NoMFA\"] = \"noMFA\";\n    AuthErrorTypes[\"InvalidMFA\"] = \"invalidMFA\";\n    AuthErrorTypes[\"EmptyChallengeResponse\"] = \"emptyChallengeResponse\";\n    AuthErrorTypes[\"NoUserSession\"] = \"noUserSession\";\n    AuthErrorTypes[\"Default\"] = \"default\";\n    AuthErrorTypes[\"DeviceConfig\"] = \"deviceConfig\";\n    AuthErrorTypes[\"NetworkError\"] = \"networkError\";\n    AuthErrorTypes[\"AutoSignInError\"] = \"autoSignInError\";\n    AuthErrorTypes[\"OAuthSignInError\"] = \"oauthSignInError\";\n})(AuthErrorTypes || (AuthErrorTypes = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../errors/AuthError';\nimport { AuthErrorTypes } from '../../../../types/Auth';\nimport { oAuthStore } from './oAuthStore';\nexport const flowCancelledMessage = '`signInWithRedirect` has been canceled.';\nexport const validationFailedMessage = 'An error occurred while validating the state.';\nexport const validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\nexport const validateState = async (state) => {\n    const savedState = await oAuthStore.loadOAuthState();\n    // This is because savedState only exists if the flow was initiated by Amplify\n    const validatedState = state === savedState ? savedState : undefined;\n    if (!validatedState) {\n        throw new AuthError({\n            name: AuthErrorTypes.OAuthSignInError,\n            message: state === null ? flowCancelledMessage : validationFailedMessage,\n            recoverySuggestion: state === null ? undefined : validationRecoverySuggestion,\n        });\n    }\n    return validatedState;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AMPLIFY_SYMBOL, AmplifyUrl, USER_AGENT_HEADER, urlSafeDecode, } from '@aws-amplify/core/internals/utils';\nimport { Hub, decodeJWT } from '@aws-amplify/core';\nimport { cacheCognitoTokens } from '../../tokenProvider/cacheTokens';\nimport { dispatchSignedInHubEvent } from '../dispatchSignedInHubEvent';\nimport { tokenOrchestrator } from '../../tokenProvider';\nimport { createOAuthError } from './createOAuthError';\nimport { resolveAndClearInflightPromises } from './inflightPromise';\nimport { validateState } from './validateState';\nimport { oAuthStore } from './oAuthStore';\nexport const completeOAuthFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, responseType, domain, preferPrivateSession, }) => {\n    const urlParams = new AmplifyUrl(currentUrl);\n    const error = urlParams.searchParams.get('error');\n    const errorMessage = urlParams.searchParams.get('error_description');\n    if (error) {\n        throw createOAuthError(errorMessage ?? error);\n    }\n    if (responseType === 'code') {\n        return handleCodeFlow({\n            currentUrl,\n            userAgentValue,\n            clientId,\n            redirectUri,\n            domain,\n            preferPrivateSession,\n        });\n    }\n    return handleImplicitFlow({\n        currentUrl,\n        redirectUri,\n        preferPrivateSession,\n    });\n};\nconst handleCodeFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, domain, preferPrivateSession, }) => {\n    /* Convert URL into an object with parameters as keys\n{ redirect_uri: 'http://localhost:3000/', response_type: 'code', ...} */\n    const url = new AmplifyUrl(currentUrl);\n    const code = url.searchParams.get('code');\n    const state = url.searchParams.get('state');\n    // if `code` or `state` is not presented in the redirect url, most likely\n    // that the end user cancelled the inflight oauth flow by:\n    // 1. clicking the back button of browser\n    // 2. closing the provider hosted UI page and coming back to the app\n    if (!code || !state) {\n        throw createOAuthError('User cancelled OAuth flow.');\n    }\n    // may throw error is being caught in attemptCompleteOAuthFlow.ts\n    const validatedState = await validateState(state);\n    const oAuthTokenEndpoint = 'https://' + domain + '/oauth2/token';\n    // TODO(v6): check hub events\n    // dispatchAuthEvent(\n    // \t'codeFlow',\n    // \t{},\n    // \t`Retrieving tokens from ${oAuthTokenEndpoint}`\n    // );\n    const codeVerifier = await oAuthStore.loadPKCE();\n    const oAuthTokenBody = {\n        grant_type: 'authorization_code',\n        code,\n        client_id: clientId,\n        redirect_uri: redirectUri,\n        ...(codeVerifier ? { code_verifier: codeVerifier } : {}),\n    };\n    const body = Object.entries(oAuthTokenBody)\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    const { access_token, refresh_token: refreshToken, id_token, error, error_message: errorMessage, token_type, expires_in, } = await (await fetch(oAuthTokenEndpoint, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            [USER_AGENT_HEADER]: userAgentValue,\n        },\n        body,\n    })).json();\n    if (error) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError(errorMessage ?? error);\n    }\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        RefreshToken: refreshToken,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst handleImplicitFlow = async ({ currentUrl, redirectUri, preferPrivateSession, }) => {\n    // hash is `null` if `#` doesn't exist on URL\n    const url = new AmplifyUrl(currentUrl);\n    const { id_token, access_token, state, token_type, expires_in, error_description, error, } = (url.hash ?? '#')\n        .substring(1) // Remove # from returned code\n        .split('&')\n        .map(pairings => pairings.split('='))\n        .reduce((accum, [k, v]) => ({ ...accum, [k]: v }), {\n        id_token: undefined,\n        access_token: undefined,\n        state: undefined,\n        token_type: undefined,\n        expires_in: undefined,\n        error_description: undefined,\n        error: undefined,\n    });\n    if (error) {\n        throw createOAuthError(error_description ?? error);\n    }\n    if (!access_token) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError('No access token returned from OAuth flow.');\n    }\n    const validatedState = await validateState(state);\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst completeFlow = async ({ redirectUri, state, preferPrivateSession, }) => {\n    await tokenOrchestrator.setOAuthMetadata({\n        oauthSignIn: true,\n    });\n    await oAuthStore.clearOAuthData();\n    await oAuthStore.storeOAuthSignIn(true, preferPrivateSession);\n    // this should be called before any call that involves `fetchAuthSession`\n    // e.g. `getCurrentUser()` below, so it allows every inflight async calls to\n    //  `fetchAuthSession` can be resolved\n    resolveAndClearInflightPromises();\n    if (isCustomState(state)) {\n        Hub.dispatch('auth', {\n            event: 'customOAuthState',\n            data: urlSafeDecode(getCustomState(state)),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    Hub.dispatch('auth', { event: 'signInWithRedirect' }, 'Auth', AMPLIFY_SYMBOL);\n    await dispatchSignedInHubEvent();\n    clearHistory(redirectUri);\n};\nconst isCustomState = (state) => {\n    return /-/.test(state);\n};\nconst getCustomState = (state) => {\n    return state.split('-').splice(1).join('-');\n};\nconst clearHistory = (redirectUri) => {\n    if (typeof window !== 'undefined' && typeof window.history !== 'undefined') {\n        window.history.replaceState(window.history.state, '', redirectUri);\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { invalidOriginException, invalidRedirectException, } from '../../../../errors/constants';\n/** @internal */\nexport function getRedirectUrl(redirects) {\n    const redirectUrlFromTheSameOrigin = redirects?.find(isSameOriginAndPathName) ??\n        redirects?.find(isTheSameDomain);\n    const redirectUrlFromDifferentOrigin = redirects?.find(isHttps) ?? redirects?.find(isHttp);\n    if (redirectUrlFromTheSameOrigin) {\n        return redirectUrlFromTheSameOrigin;\n    }\n    else if (redirectUrlFromDifferentOrigin) {\n        throw invalidOriginException;\n    }\n    throw invalidRedirectException;\n}\n// origin + pathname => https://example.com/app\nconst isSameOriginAndPathName = (redirect) => redirect.startsWith(String(window.location.origin + window.location.pathname ?? '/'));\n// domain => outlook.live.com, github.com\nconst isTheSameDomain = (redirect) => redirect.includes(String(window.location.hostname));\nconst isHttp = (redirect) => redirect.startsWith('http://');\nconst isHttps = (redirect) => redirect.startsWith('https://');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { oAuthStore } from './oAuthStore';\nimport { resolveAndClearInflightPromises } from './inflightPromise';\nexport const handleFailure = async (error) => {\n    resolveAndClearInflightPromises();\n    await oAuthStore.clearOAuthInflightData();\n    Hub.dispatch('auth', { event: 'signInWithRedirect_failure', data: { error } }, 'Auth', AMPLIFY_SYMBOL);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction, assertOAuthConfig, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../../utils';\nimport { oAuthStore } from './oAuthStore';\nimport { completeOAuthFlow } from './completeOAuthFlow';\nimport { getRedirectUrl } from './getRedirectUrl';\nimport { handleFailure } from './handleFailure';\nexport const attemptCompleteOAuthFlow = async (authConfig) => {\n    try {\n        assertTokenProviderConfig(authConfig);\n        assertOAuthConfig(authConfig);\n        oAuthStore.setAuthConfig(authConfig);\n    }\n    catch (_) {\n        // no-op\n        // This should not happen as Amplify singleton checks the oauth config key\n        // unless the oauth config object doesn't contain required properties\n        return;\n    }\n    // No inflight OAuth\n    if (!(await oAuthStore.loadOAuthInFlight())) {\n        return;\n    }\n    try {\n        const currentUrl = window.location.href;\n        const { loginWith, userPoolClientId } = authConfig;\n        const { domain, redirectSignIn, responseType } = loginWith.oauth;\n        const redirectUri = getRedirectUrl(redirectSignIn);\n        await completeOAuthFlow({\n            currentUrl,\n            clientId: userPoolClientId,\n            domain,\n            redirectUri,\n            responseType,\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n        });\n    }\n    catch (err) {\n        await handleFailure(err);\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { ADD_OAUTH_LISTENER, isBrowser, } from '@aws-amplify/core/internals/utils';\nimport { attemptCompleteOAuthFlow } from './attemptCompleteOAuthFlow';\n// attach the side effect for handling the completion of an inflight oauth flow\n// this side effect works only on Web\nisBrowser() &&\n    (() => {\n        // add the listener to the singleton for triggering\n        Amplify[ADD_OAUTH_LISTENER](attemptCompleteOAuthFlow);\n    })();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const IdentityIdStorageKeys = {\n    identityId: 'identityId',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore';\nimport { IdentityIdStorageKeys } from './types';\nconst logger = new ConsoleLogger('DefaultIdentityIdStore');\nexport class DefaultIdentityIdStore {\n    setAuthConfig(authConfigParam) {\n        assertIdentityPoolIdConfig(authConfigParam.Cognito);\n        this.authConfig = authConfigParam;\n        this._authKeys = createKeysForAuthStorage('Cognito', authConfigParam.Cognito.identityPoolId);\n    }\n    constructor(keyValueStorage) {\n        this._authKeys = {};\n        this.keyValueStorage = keyValueStorage;\n    }\n    async loadIdentityId() {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        try {\n            if (this._primaryIdentityId) {\n                return {\n                    id: this._primaryIdentityId,\n                    type: 'primary',\n                };\n            }\n            else {\n                const storedIdentityId = await this.keyValueStorage.getItem(this._authKeys.identityId);\n                if (storedIdentityId) {\n                    return {\n                        id: storedIdentityId,\n                        type: 'guest',\n                    };\n                }\n                return null;\n            }\n        }\n        catch (err) {\n            logger.log('Error getting stored IdentityId.', err);\n            return null;\n        }\n    }\n    async storeIdentityId(identity) {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        if (identity.type === 'guest') {\n            this.keyValueStorage.setItem(this._authKeys.identityId, identity.id);\n            // Clear in-memory storage of primary identityId\n            this._primaryIdentityId = undefined;\n        }\n        else {\n            this._primaryIdentityId = identity.id;\n            // Clear locally stored guest id\n            this.keyValueStorage.removeItem(this._authKeys.identityId);\n        }\n    }\n    async clearIdentityId() {\n        this._primaryIdentityId = undefined;\n        await this.keyValueStorage.removeItem(this._authKeys.identityId);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(IdentityIdStorageKeys)(`com.amplify.${provider}`, identifier);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nexport function formLoginsMap(idToken) {\n    const issuer = decodeJWT(idToken).payload.iss;\n    const res = {};\n    if (!issuer) {\n        throw new AuthError({\n            name: 'InvalidIdTokenException',\n            message: 'Invalid Idtoken.',\n        });\n    }\n    const domainName = issuer.replace(/(^\\w+:|^)\\/\\//, '');\n    res[domainName] = idToken;\n    return res;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, getId } from '@aws-amplify/core';\nimport { AuthError } from '../../../errors/AuthError';\nimport { getRegionFromIdentityPoolId } from '../utils/clients/CognitoIdentityProvider/utils';\nimport { formLoginsMap } from './utils';\nconst logger = new ConsoleLogger('CognitoIdentityIdProvider');\n/**\n * Provides a Cognito identityId\n *\n * @param tokens - The AuthTokens received after SignIn\n * @returns string\n * @throws configuration exceptions: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service exceptions: {@link GetIdException }\n */\nexport async function cognitoIdentityIdProvider({ tokens, authConfig, identityIdStore, }) {\n    identityIdStore.setAuthConfig({ Cognito: authConfig });\n    // will return null only if there is no identityId cached or if there is an error retrieving it\n    let identityId = await identityIdStore.loadIdentityId();\n    // Tokens are available so return primary identityId\n    if (tokens) {\n        // If there is existing primary identityId in-memory return that\n        if (identityId && identityId.type === 'primary') {\n            return identityId.id;\n        }\n        else {\n            const logins = tokens.idToken\n                ? formLoginsMap(tokens.idToken.toString())\n                : {};\n            const generatedIdentityId = await generateIdentityId(logins, authConfig);\n            if (identityId && identityId.id === generatedIdentityId) {\n                logger.debug(`The guest identity ${identityId.id} has become the primary identity.`);\n            }\n            identityId = {\n                id: generatedIdentityId,\n                type: 'primary',\n            };\n        }\n    }\n    else {\n        // If there is existing guest identityId cached return that\n        if (identityId && identityId.type === 'guest') {\n            return identityId.id;\n        }\n        else {\n            identityId = {\n                id: await generateIdentityId({}, authConfig),\n                type: 'guest',\n            };\n        }\n    }\n    // Store in-memory or local storage depending on guest or primary identityId\n    identityIdStore.storeIdentityId(identityId);\n    return identityId.id;\n}\nasync function generateIdentityId(logins, authConfig) {\n    const identityPoolId = authConfig?.identityPoolId;\n    const region = getRegionFromIdentityPoolId(identityPoolId);\n    // IdentityId is absent so get it using IdentityPoolId with Cognito's GetId API\n    const idResult = \n    // for a first-time user, this will return a brand new identity\n    // for a returning user, this will retrieve the previous identity assocaited with the logins\n    (await getId({\n        region,\n    }, {\n        IdentityPoolId: identityPoolId,\n        Logins: logins,\n    })).IdentityId;\n    if (!idResult) {\n        throw new AuthError({\n            name: 'GetIdResponseException',\n            message: 'Received undefined response from getId operation',\n            recoverySuggestion: 'Make sure to pass a valid identityPoolId in the configuration.',\n        });\n    }\n    return idResult;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, getCredentialsForIdentity, } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { getRegionFromIdentityPoolId } from '../utils/clients/CognitoIdentityProvider/utils';\nimport { assertIdTokenInAuthTokens } from '../utils/types';\nimport { cognitoIdentityIdProvider } from './IdentityIdProvider';\nimport { formLoginsMap } from './utils';\nconst logger = new ConsoleLogger('CognitoCredentialsProvider');\nconst CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nexport class CognitoAWSCredentialsAndIdentityIdProvider {\n    constructor(identityIdStore) {\n        this._nextCredentialsRefresh = 0;\n        this._identityIdStore = identityIdStore;\n    }\n    async clearCredentialsAndIdentityId() {\n        logger.debug('Clearing out credentials and identityId');\n        this._credentialsAndIdentityId = undefined;\n        await this._identityIdStore.clearIdentityId();\n    }\n    async clearCredentials() {\n        logger.debug('Clearing out in-memory credentials');\n        this._credentialsAndIdentityId = undefined;\n    }\n    async getCredentialsAndIdentityId(getCredentialsOptions) {\n        const isAuthenticated = getCredentialsOptions.authenticated;\n        const { tokens } = getCredentialsOptions;\n        const { authConfig } = getCredentialsOptions;\n        try {\n            assertIdentityPoolIdConfig(authConfig?.Cognito);\n        }\n        catch {\n            // No identity pool configured, skipping\n            return;\n        }\n        if (!isAuthenticated && !authConfig.Cognito.allowGuestAccess) {\n            // TODO(V6): return partial result like Native platforms\n            return;\n        }\n        const { forceRefresh } = getCredentialsOptions;\n        const tokenHasChanged = this.hasTokenChanged(tokens);\n        const identityId = await cognitoIdentityIdProvider({\n            tokens,\n            authConfig: authConfig.Cognito,\n            identityIdStore: this._identityIdStore,\n        });\n        // Clear cached credentials when forceRefresh is true OR the cache token has changed\n        if (forceRefresh || tokenHasChanged) {\n            this.clearCredentials();\n        }\n        if (!isAuthenticated) {\n            return this.getGuestCredentials(identityId, authConfig.Cognito);\n        }\n        else {\n            assertIdTokenInAuthTokens(tokens);\n            return this.credsForOIDCTokens(authConfig.Cognito, tokens, identityId);\n        }\n    }\n    async getGuestCredentials(identityId, authConfig) {\n        // Return existing in-memory cached credentials only if it exists, is not past it's lifetime and is unauthenticated credentials\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === false) {\n            logger.info('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any authenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        // use identityId to obtain guest credentials\n        // save credentials in-memory\n        // No logins params should be passed for guest creds:\n        // https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html\n        const clientResult = await getCredentialsForIdentity({ region }, {\n            IdentityId: identityId,\n        });\n        if (clientResult.Credentials &&\n            clientResult.Credentials.AccessKeyId &&\n            clientResult.Credentials.SecretKey) {\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            const identityIdRes = clientResult.IdentityId;\n            if (identityIdRes) {\n                res.identityId = identityIdRes;\n                this._identityIdStore.storeIdentityId({\n                    id: identityIdRes,\n                    type: 'guest',\n                });\n            }\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: false,\n            };\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsNotFoundException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    async credsForOIDCTokens(authConfig, authTokens, identityId) {\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === true) {\n            logger.debug('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any unauthenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const logins = authTokens.idToken\n            ? formLoginsMap(authTokens.idToken.toString())\n            : {};\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        const clientResult = await getCredentialsForIdentity({ region }, {\n            IdentityId: identityId,\n            Logins: logins,\n        });\n        if (clientResult.Credentials &&\n            clientResult.Credentials.AccessKeyId &&\n            clientResult.Credentials.SecretKey) {\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            // Store the credentials in-memory along with the expiration\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: true,\n                associatedIdToken: authTokens.idToken?.toString(),\n            };\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const identityIdRes = clientResult.IdentityId;\n            if (identityIdRes) {\n                res.identityId = identityIdRes;\n                this._identityIdStore.storeIdentityId({\n                    id: identityIdRes,\n                    type: 'primary',\n                });\n            }\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    isPastTTL() {\n        return this._nextCredentialsRefresh === undefined\n            ? true\n            : this._nextCredentialsRefresh <= Date.now();\n    }\n    hasTokenChanged(tokens) {\n        return (!!tokens &&\n            !!this._credentialsAndIdentityId?.associatedIdToken &&\n            tokens.idToken?.toString() !==\n                this._credentialsAndIdentityId.associatedIdToken);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage } from '@aws-amplify/core';\nimport { DefaultIdentityIdStore } from './IdentityIdStore';\nimport { CognitoAWSCredentialsAndIdentityIdProvider } from './credentialsProvider';\n/**\n * Cognito specific implmentation of the CredentialsProvider interface\n * that manages setting and getting of AWS Credentials.\n *\n * @throws configuration expections: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service expections: {@link GetCredentialsForIdentityException}, {@link GetIdException}\n *\n */\nexport const cognitoCredentialsProvider = new CognitoAWSCredentialsAndIdentityIdProvider(new DefaultIdentityIdStore(defaultStorage));\nexport { CognitoAWSCredentialsAndIdentityIdProvider, DefaultIdentityIdStore };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, CookieStorage, defaultStorage, } from '@aws-amplify/core';\nimport { parseAmplifyConfig, } from '@aws-amplify/core/internals/utils';\nimport { cognitoCredentialsProvider, cognitoUserPoolsTokenProvider, } from './auth/cognito';\nexport const DefaultAmplify = {\n    /**\n     * Configures Amplify with the {@link resourceConfig} and {@link libraryOptions}.\n     *\n     * @param resourceConfig The {@link ResourcesConfig} object that is typically imported from the\n     * `amplifyconfiguration.json` file. It can also be an object literal created inline when calling `Amplify.configure`.\n     * @param libraryOptions The {@link LibraryOptions} additional options for the library.\n     *\n     * @example\n     * import config from './amplifyconfiguration.json';\n     *\n     * Amplify.configure(config);\n     */\n    configure(resourceConfig, libraryOptions) {\n        const resolvedResourceConfig = parseAmplifyConfig(resourceConfig);\n        // If no Auth config is provided, no special handling will be required, configure as is.\n        // Otherwise, we can assume an Auth config is provided from here on.\n        if (!resolvedResourceConfig.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If Auth options are provided, always just configure as is.\n        // Otherwise, we can assume no Auth libraryOptions were provided from here on.\n        if (libraryOptions?.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If no Auth libraryOptions were previously configured, then always add default providers.\n        if (!Amplify.libraryOptions.Auth) {\n            cognitoUserPoolsTokenProvider.setAuthConfig(resolvedResourceConfig.Auth);\n            cognitoUserPoolsTokenProvider.setKeyValueStorage(\n            // TODO: allow configure with a public interface\n            libraryOptions?.ssr\n                ? new CookieStorage({ sameSite: 'lax' })\n                : defaultStorage);\n            Amplify.configure(resolvedResourceConfig, {\n                ...libraryOptions,\n                Auth: {\n                    tokenProvider: cognitoUserPoolsTokenProvider,\n                    credentialsProvider: cognitoCredentialsProvider,\n                },\n            });\n            return;\n        }\n        // At this point, Auth libraryOptions would have been previously configured and no overriding\n        // Auth options were given, so we should preserve the currently configured Auth libraryOptions.\n        if (libraryOptions) {\n            // If ssr is provided through libraryOptions, we should respect the intentional reconfiguration.\n            if (libraryOptions.ssr !== undefined) {\n                cognitoUserPoolsTokenProvider.setKeyValueStorage(\n                // TODO: allow configure with a public interface\n                libraryOptions.ssr\n                    ? new CookieStorage({ sameSite: 'lax' })\n                    : defaultStorage);\n            }\n            Amplify.configure(resolvedResourceConfig, {\n                Auth: Amplify.libraryOptions.Auth,\n                ...libraryOptions,\n            });\n            return;\n        }\n        // Finally, if there were no libraryOptions given at all, we should simply not touch the currently\n        // configured libraryOptions.\n        Amplify.configure(resolvedResourceConfig);\n    },\n    /**\n     * Returns the {@link ResourcesConfig} object passed in as the `resourceConfig` parameter when calling\n     * `Amplify.configure`.\n     *\n     * @returns An {@link ResourcesConfig} object.\n     */\n    getConfig() {\n        return Amplify.getConfig();\n    },\n};\n", "// This file is auto-generated by Amplify. Edits will be overwritten.\r\nexport const env = process.env as any;", "export { generateClient } from './API.mjs';\nexport { CONNECTION_STATE_CHANGE, ConnectionState, GraphQLAuthError } from '@aws-amplify/api-graphql';\nexport { del, get, head, isCancelError, patch, post, put } from '@aws-amplify/api-rest';\nexport { ApiError } from '@aws-amplify/core/internals/utils';\n//# sourceMappingURL=index.mjs.map\n", "export { InternalGraphQLAPI, InternalGraphQLAPIClass } from './InternalGraphQLAPI.mjs';\nexport { cancel, graphql, isCancelError } from './v6.mjs';\nexport { generateClient } from './generateClient.mjs';\n//# sourceMappingURL=index.mjs.map\n", "export { isCancelError } from './errors/CanceledError.mjs';\nexport { del, get, head, patch, post, put } from './apis/index.mjs';\n//# sourceMappingURL=index.mjs.map\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ApiError } from '@aws-amplify/core/internals/utils';\nexport class RestApiError extends ApiError {\n    constructor(params) {\n        super(params);\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = RestApiError;\n        Object.setPrototypeOf(this, RestApiError.prototype);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { RestApiError } from './RestApiError';\n/**\n * Internal-only class for CanceledError.\n *\n * @internal\n */\nexport class CanceledError extends RestApiError {\n    constructor(params = {}) {\n        super({\n            name: 'CanceledError',\n            message: 'Request is canceled by user',\n            ...params,\n        });\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = CanceledError;\n        Object.setPrototypeOf(this, CanceledError.prototype);\n    }\n}\n/**\n * Check if an error is caused by user calling `cancel()` in REST API.\n *\n * @note This function works **ONLY** for errors thrown by REST API. For GraphQL APIs, use `client.isCancelError(error)`\n *   instead. `client` is generated from  `generateClient()` API from `aws-amplify/api`.\n *\n * @param {unknown} error The unknown exception to be checked.\n * @returns - A boolean indicating if the error was from an upload cancellation\n */\nexport const isCancelError = (error) => !!error && error instanceof CanceledError;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var RestApiValidationErrorCode;\n(function (RestApiValidationErrorCode) {\n    RestApiValidationErrorCode[\"InvalidApiName\"] = \"InvalidApiName\";\n})(RestApiValidationErrorCode || (RestApiValidationErrorCode = {}));\nexport const validationErrorMap = {\n    [RestApiValidationErrorCode.InvalidApiName]: {\n        message: 'API name is invalid.',\n        recoverySuggestion: 'Check if the API name matches the one in your configuration or `aws-exports.js`',\n    },\n};\n", "import { parseJsonError as parseAwsJsonError, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { RestApiError } from '../errors';\n/**\n * Parses both AWS and non-AWS error responses coming from the users' backend code.\n * * AWS errors generated by the AWS services(e.g. API Gateway, Bedrock). They can be Signature errors,\n *   ClockSkew errors, etc. These responses will be parsed to errors with proper name and message from the AWS\n *   services.\n * * non-AWS errors thrown by the user code. They can contain any headers or body. Users need to access the\n *   error.response to get the headers and body and parse them accordingly. The JS error name and message will\n *   be `UnknownError` and `Unknown error` respectively.\n */\nexport const parseRestApiServiceError = async (response) => {\n    if (!response) {\n        // Response is not considered an error.\n        return;\n    }\n    const parsedAwsError = await parseAwsJsonError(stubErrorResponse(response));\n    if (!parsedAwsError) {\n        // Response is not considered an error.\n    }\n    else {\n        const bodyText = await response.body?.text();\n        return buildRestApiError(parsedAwsError, {\n            statusCode: response.statusCode,\n            headers: response.headers,\n            body: bodyText,\n        });\n    }\n};\n/**\n * The response object needs to be stub here because the parseAwsJsonError assumes the response body to be valid JSON.\n * Although this is true for AWS services, it is not true for responses from user's code. Once the response body is\n * unwrapped as JSON(and fail), it cannot be read as text again. Therefore, we need to stub the response body here to\n * make sure we can read the error response body as a JSON, and may fall back to read as text if it is not a valid JSON.\n */\nconst stubErrorResponse = (response) => {\n    let bodyTextPromise;\n    const bodyProxy = new Proxy(response.body, {\n        get(target, prop, receiver) {\n            if (prop === 'json') {\n                // For potential AWS errors, error parser will try to parse the body as JSON first.\n                return async () => {\n                    if (!bodyTextPromise) {\n                        bodyTextPromise = target.text();\n                    }\n                    try {\n                        return JSON.parse(await bodyTextPromise);\n                    }\n                    catch (error) {\n                        // If response body is not a valid JSON, we stub it to be an empty object and eventually parsed\n                        // as an unknown error\n                        return {};\n                    }\n                };\n            }\n            else if (prop === 'text') {\n                // For non-AWS errors, users can access the body as a string as a fallback.\n                return async () => {\n                    if (!bodyTextPromise) {\n                        bodyTextPromise = target.text();\n                    }\n                    return bodyTextPromise;\n                };\n            }\n            else {\n                return Reflect.get(target, prop, receiver);\n            }\n        },\n    });\n    const responseProxy = new Proxy(response, {\n        get(target, prop, receiver) {\n            if (prop === 'body') {\n                return bodyProxy;\n            }\n            else {\n                return Reflect.get(target, prop, receiver);\n            }\n        },\n    });\n    return responseProxy;\n};\n/**\n * Utility to create a new RestApiError from a service error.\n */\nconst buildRestApiError = (error, response) => {\n    const restApiError = new RestApiError({\n        name: error?.name,\n        message: error.message,\n        underlyingError: error,\n        response,\n    });\n    // $metadata is only required for backwards compatibility.\n    return Object.assign(restApiError, { $metadata: error.$metadata });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '@aws-amplify/core';\nexport const logger = new ConsoleLogger('RestApis');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CanceledError } from '../errors';\nimport { parseRestApiServiceError } from './serviceError';\nimport { logger } from './logger';\n/**\n * @internal\n */\nexport function createCancellableOperation(handler, abortController) {\n    const isInternalPost = (targetHandler) => !!abortController;\n    // For creating a cancellable operation for public REST APIs, we need to create an AbortController\n    // internally. Whereas for internal POST APIs, we need to accept in the AbortController from the\n    // callers.\n    const publicApisAbortController = new AbortController();\n    const publicApisAbortSignal = publicApisAbortController.signal;\n    const internalPostAbortSignal = abortController?.signal;\n    let abortReason;\n    const job = async () => {\n        try {\n            const response = await (isInternalPost(handler)\n                ? handler()\n                : handler(publicApisAbortSignal));\n            if (response.statusCode >= 300) {\n                throw await parseRestApiServiceError(response);\n            }\n            return response;\n        }\n        catch (error) {\n            const abortSignal = internalPostAbortSignal ?? publicApisAbortSignal;\n            const message = abortReason ?? abortSignal.reason;\n            if (error.name === 'AbortError' || abortSignal?.aborted === true) {\n                const canceledError = new CanceledError({\n                    ...(message && { message }),\n                    underlyingError: error,\n                    recoverySuggestion: 'The API request was explicitly canceled. If this is not intended, validate if you called the `cancel()` function on the API request erroneously.',\n                });\n                logger.debug(error);\n                throw canceledError;\n            }\n            logger.debug(error);\n            throw error;\n        }\n    };\n    if (isInternalPost(handler)) {\n        return job();\n    }\n    else {\n        const cancel = (abortMessage) => {\n            if (publicApisAbortSignal.aborted === true) {\n                return;\n            }\n            publicApisAbortController.abort(abortMessage);\n            // If abort reason is not supported, set a scoped reasons instead. The reason property inside an\n            // AbortSignal is a readonly property and trying to set it would throw an error.\n            if (abortMessage && publicApisAbortSignal.reason !== abortMessage) {\n                abortReason = abortMessage;\n            }\n        };\n        return { response: job(), cancel };\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const DEFAULT_REST_IAM_SIGNING_SERVICE = 'execute-api';\nexport const DEFAULT_APPSYNC_API_SERVICE = 'appsync-api';\nexport const DEFAULT_IAM_SIGNING_REGION = 'us-east-1';\n/**\n * The REST endpoints generated by API Gateway\n * @see {@link https://docs.aws.amazon.com/general/latest/gr/apigateway.html#apigateway_region_data_plane}\n */\nexport const APIG_HOSTNAME_PATTERN = /^.+\\.([a-z0-9-]+)\\.([a-z0-9-]+)\\.amazonaws\\.com/;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { APIG_HOSTNAME_PATTERN, DEFAULT_IAM_SIGNING_REGION, DEFAULT_REST_IAM_SIGNING_SERVICE, } from './constants';\n/**\n * Infer the signing service and region from the given URL, and for REST API only, from the Amplify configuration.\n * It supports raw API Gateway endpoint and AppSync endpoint.\n *\n * @internal\n */\nexport const parseSigningInfo = (url, restApiOptions) => {\n    const { service: signingService = DEFAULT_REST_IAM_SIGNING_SERVICE, region: signingRegion = DEFAULT_IAM_SIGNING_REGION, } = restApiOptions?.amplify.getConfig()?.API?.REST?.[restApiOptions?.apiName] ??\n        {};\n    const { hostname } = url;\n    const [, service, region] = APIG_HOSTNAME_PATTERN.exec(hostname) ?? [];\n    if (service === DEFAULT_REST_IAM_SIGNING_SERVICE) {\n        // The configured endpoint is an API Gateway endpoint\n        // @see: https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-call-api.html\n        return {\n            service,\n            region: region ?? signingRegion,\n        };\n    }\n    else if (service === 'appsync-api') {\n        // AppSync endpoint is internally supported because GraphQL operation will send request using POST handler.\n        // example: https://xxxx.appsync-api.us-east-1.amazonaws.com/graphql\n        return {\n            service: 'appsync',\n            region: region ?? signingRegion,\n        };\n    }\n    else {\n        return {\n            service: signingService,\n            region: signingRegion,\n        };\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Determines if IAM authentication should be applied for a GraphQL request.\n *\n * This function checks the `headers` of the HTTP request to determine if IAM authentication\n * is applicable. IAM authentication is considered applicable if there is no `authorization`\n * header, no `x-api-key` header, and `signingServiceInfo` is provided.\n *\n * @param request - The HTTP request object containing headers.\n * @param signingServiceInfo - Optional signing service information,\n * including service and region.\n * @returns A boolean `true` if IAM authentication should be applied.\n *\n * @internal\n */\nexport const isIamAuthApplicableForGraphQL = ({ headers }, signingServiceInfo) => !headers.authorization && !headers['x-api-key'] && !!signingServiceInfo;\n/**\n * Determines if IAM authentication should be applied for a REST request.\n *\n * This function checks the `headers` of the HTTP request to determine if IAM authentication\n * is applicable. IAM authentication is considered applicable if there is no `authorization`\n * header and `signingServiceInfo` is provided.\n *\n * @param request - The HTTP request object containing headers.\n * @param signingServiceInfo - Optional signing service information,\n * including service and region.\n * @returns A boolean `true` if IAM authentication should be applied.\n *\n * @internal\n */\nexport const isIamAuthApplicableForRest = ({ headers }, signingServiceInfo) => !headers.authorization && !!signingServiceInfo;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const resolveHeaders = (headers, body) => {\n    const normalizedHeaders = {};\n    for (const key in headers) {\n        normalizedHeaders[key.toLowerCase()] = headers[key];\n    }\n    if (body) {\n        normalizedHeaders['content-type'] = 'application/json; charset=UTF-8';\n        if (body instanceof FormData) {\n            /**\n             * If body is a FormData we should not allow setting content-type.\n             * It's because runtime HTTP handlers(xhr, fetch, undici, node-fetch,\n             * etc.) will modify the content-type value when setting multipart\n             * boundary.\n             */\n            delete normalizedHeaders['content-type'];\n        }\n    }\n    return normalizedHeaders;\n};\n", "import { authenticatedHandler, getRetryDecider, jitteredBackoff, unauthenticatedHandler, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { logger, parseRestApiServiceError, parseSigningInfo, } from '../../utils';\nimport { resolveHeaders } from '../../utils/resolveHeaders';\n/**\n * Make REST API call with best-effort IAM auth.\n * @param amplify Amplify instance to to resolve credentials and tokens. Should use different instance in client-side\n *   and SSR\n * @param options Options accepted from public API options when calling the handlers.\n * @param signingServiceInfo Internal-only options enable IAM auth as well as to to overwrite the IAM signing service\n *   and region. If specified, and NONE of API Key header or Auth header is present, IAM auth will be used.\n * @param iamAuthApplicable Callback function that is used to determine if IAM Auth should be used or not.\n *\n * @internal\n */\nexport const transferHandler = async (amplify, options, iamAuthApplicable, signingServiceInfo) => {\n    const { url, method, headers, body, withCredentials, abortSignal } = options;\n    const resolvedBody = body\n        ? body instanceof FormData\n            ? body\n            : JSON.stringify(body ?? '')\n        : undefined;\n    const resolvedHeaders = resolveHeaders(headers, body);\n    const request = {\n        url,\n        headers: resolvedHeaders,\n        method,\n        body: resolvedBody,\n    };\n    const baseOptions = {\n        retryDecider: getRetryDecider(parseRestApiServiceError),\n        computeDelay: jitteredBackoff,\n        withCrossDomainCredentials: withCredentials,\n        abortSignal,\n    };\n    const isIamAuthApplicable = iamAuthApplicable(request, signingServiceInfo);\n    let response;\n    const credentials = await resolveCredentials(amplify);\n    if (isIamAuthApplicable && credentials) {\n        const signingInfoFromUrl = parseSigningInfo(url);\n        const signingService = signingServiceInfo?.service ?? signingInfoFromUrl.service;\n        const signingRegion = signingServiceInfo?.region ?? signingInfoFromUrl.region;\n        response = await authenticatedHandler(request, {\n            ...baseOptions,\n            credentials,\n            region: signingRegion,\n            service: signingService,\n        });\n    }\n    else {\n        response = await unauthenticatedHandler(request, {\n            ...baseOptions,\n        });\n    }\n    // Clean-up un-modeled properties from response.\n    return {\n        statusCode: response.statusCode,\n        headers: response.headers,\n        body: response.body,\n    };\n};\nconst resolveCredentials = async (amplify) => {\n    try {\n        const { credentials } = await amplify.Auth.fetchAuthSession();\n        if (credentials) {\n            return credentials;\n        }\n    }\n    catch (e) {\n        logger.debug('No credentials available, the request will be unsigned.');\n    }\n    return null;\n};\n", "export { cancel, post, updateRequestToBeCancellable } from '../apis/common/internalPost.mjs';\n//# sourceMappingURL=index.mjs.map\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createCancellableOperation } from '../../utils';\nimport { isIamAuthApplicableForGraphQL } from '../../utils/isIamAuthApplicable';\nimport { transferHandler } from './handler';\n/**\n * This weak map provides functionality to cancel a request given the promise containing the `post` request.\n *\n * 1. For every GraphQL POST request, an abort controller is created and supplied to the request.\n * 2. The promise fulfilled by GraphGL POST request is then mapped to that abort controller.\n * 3. The promise is returned to the external caller.\n * 4. The caller can either wait for the promise to fulfill or call `cancel(promise)` to cancel the request.\n * 5. If `cancel(promise)` is called, then the corresponding abort controller is retrieved from the map below.\n * 6. GraphQL POST request will be rejected with the error message provided during cancel.\n * 7. Caller can check if the error is because of cancelling by calling `isCancelError(error)`.\n */\nconst cancelTokenMap = new WeakMap();\n/**\n * @internal\n *\n * REST POST handler to send GraphQL request to given endpoint. By default, it will use IAM to authorize\n * the request. In some auth modes, the IAM auth has to be disabled. Here's how to set up the request auth correctly:\n * * If auth mode is 'iam', you MUST NOT set 'authorization' header and 'x-api-key' header, since it would disable IAM\n *   auth. You MUST also set 'input.options.signingServiceInfo' option.\n *   * The including 'input.options.signingServiceInfo.service' and 'input.options.signingServiceInfo.region' are\n *     optional. If omitted, the signing service and region will be inferred from url.\n * * If auth mode is 'none', you MUST NOT set 'options.signingServiceInfo' option.\n * * If auth mode is 'apiKey', you MUST set 'x-api-key' custom header.\n * * If auth mode is 'oidc' or 'lambda' or 'userPool', you MUST set 'authorization' header.\n *\n * To make the internal post cancellable, you must also call `updateRequestToBeCancellable()` with the promise from\n * internal post call and the abort controller supplied to the internal post call.\n *\n * @param amplify the AmplifyClassV6 instance - it may be the singleton used on Web, or an instance created within\n * a context created by `runWithAmplifyServerContext`\n * @param postInput an object of {@link InternalPostInput}\n * @param postInput.url The URL that the POST request sends to\n * @param postInput.options Options of the POST request\n * @param postInput.abortController The abort controller used to cancel the POST request\n * @returns a {@link RestApiResponse}\n *\n * @throws an {@link AmplifyError} with `Network Error` as the `message` when the external resource is unreachable due to one\n * of the following reasons:\n *   1. no network connection\n *   2. CORS error\n * @throws a {@link CanceledError} when the ongoing POST request get cancelled\n */\nexport const post = (amplify, { url, options, abortController }) => {\n    const controller = abortController ?? new AbortController();\n    const responsePromise = createCancellableOperation(async () => {\n        const response = transferHandler(amplify, {\n            url,\n            method: 'POST',\n            ...options,\n            abortSignal: controller.signal,\n        }, isIamAuthApplicableForGraphQL, options?.signingServiceInfo);\n        return response;\n    }, controller);\n    const responseWithCleanUp = responsePromise.finally(() => {\n        cancelTokenMap.delete(responseWithCleanUp);\n    });\n    return responseWithCleanUp;\n};\n/**\n * Cancels a request given the promise returned by `post`.\n * If the request is already completed, this function does nothing.\n * It MUST be used after `updateRequestToBeCancellable` is called.\n */\nexport const cancel = (promise, message) => {\n    const controller = cancelTokenMap.get(promise);\n    if (controller) {\n        controller.abort(message);\n        if (message && controller.signal.reason !== message) {\n            // In runtimes where `AbortSignal.reason` is not supported, we track the reason ourselves.\n            // @ts-expect-error reason is read-only property.\n            controller.signal.reason = message;\n        }\n        return true;\n    }\n    return false;\n};\n/**\n * MUST be used to make a promise including internal `post` API call cancellable.\n */\nexport const updateRequestToBeCancellable = (promise, controller) => {\n    cancelTokenMap.set(promise, controller);\n};\n", "export var CONTROL_MSG;\n(function (CONTROL_MSG) {\n    CONTROL_MSG[\"CONNECTION_CLOSED\"] = \"Connection closed\";\n    CONTROL_MSG[\"CONNECTION_FAILED\"] = \"Connection failed\";\n    CONTROL_MSG[\"REALTIME_SUBSCRIPTION_INIT_ERROR\"] = \"AppSync Realtime subscription init error\";\n    CONTROL_MSG[\"SUBSCRIPTION_ACK\"] = \"Subscription ack\";\n    CONTROL_MSG[\"TIMEOUT_DISCONNECT\"] = \"Timeout disconnect\";\n})(CONTROL_MSG || (CONTROL_MSG = {}));\n/** @enum {string} */\nexport var ConnectionState;\n(function (ConnectionState) {\n    /*\n     * The connection is alive and healthy\n     */\n    ConnectionState[\"Connected\"] = \"Connected\";\n    /*\n     * The connection is alive, but the connection is offline\n     */\n    ConnectionState[\"ConnectedPendingNetwork\"] = \"ConnectedPendingNetwork\";\n    /*\n     * The connection has been disconnected while in use\n     */\n    ConnectionState[\"ConnectionDisrupted\"] = \"ConnectionDisrupted\";\n    /*\n     * The connection has been disconnected and the network is offline\n     */\n    ConnectionState[\"ConnectionDisruptedPendingNetwork\"] = \"ConnectionDisruptedPendingNetwork\";\n    /*\n     * The connection is in the process of connecting\n     */\n    ConnectionState[\"Connecting\"] = \"Connecting\";\n    /*\n     * The connection is not in use and is being disconnected\n     */\n    ConnectionState[\"ConnectedPendingDisconnect\"] = \"ConnectedPendingDisconnect\";\n    /*\n     * The connection is not in use and has been disconnected\n     */\n    ConnectionState[\"Disconnected\"] = \"Disconnected\";\n    /*\n     * The connection is alive, but a keep alive message has been missed\n     */\n    ConnectionState[\"ConnectedPendingKeepAlive\"] = \"ConnectedPendingKeepAlive\";\n})(ConnectionState || (ConnectionState = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nexport const MAX_DELAY_MS = 5000;\nexport const NON_RETRYABLE_CODES = [400, 401, 403];\nexport const CONNECTION_STATE_CHANGE = 'ConnectionStateChange';\nexport var MESSAGE_TYPES;\n(function (MESSAGE_TYPES) {\n    /**\n     * Client -> Server message.\n     * This message type is the first message after handshake and this will initialize AWS AppSync RealTime communication\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_INIT\"] = \"connection_init\";\n    /**\n     * Server -> Client message\n     * This message type is in case there is an issue with AWS AppSync RealTime when establishing connection\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_ERROR\"] = \"connection_error\";\n    /**\n     * Server -> Client message.\n     * This message type is for the ack response from AWS AppSync RealTime for GQL_CONNECTION_INIT message\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_ACK\"] = \"connection_ack\";\n    /**\n     * Client -> Server message.\n     * This message type is for register subscriptions with AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"GQL_START\"] = \"start\";\n    /**\n     * Server -> Client message.\n     * This message type is for the ack response from AWS AppSync RealTime for GQL_START message\n     */\n    MESSAGE_TYPES[\"GQL_START_ACK\"] = \"start_ack\";\n    /**\n     * Server -> Client message.\n     * This message type is for subscription message from AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"GQL_DATA\"] = \"data\";\n    /**\n     * Server -> Client message.\n     * This message type helps the client to know is still receiving messages from AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_KEEP_ALIVE\"] = \"ka\";\n    /**\n     * Client -> Server message.\n     * This message type is for unregister subscriptions with AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"GQL_STOP\"] = \"stop\";\n    /**\n     * Server -> Client message.\n     * This message type is for the ack response from AWS AppSync RealTime for GQL_STOP message\n     */\n    MESSAGE_TYPES[\"GQL_COMPLETE\"] = \"complete\";\n    /**\n     * Server -> Client message.\n     * This message type is for sending error messages from AWS AppSync RealTime to the client\n     */\n    MESSAGE_TYPES[\"GQL_ERROR\"] = \"error\";\n})(MESSAGE_TYPES || (MESSAGE_TYPES = {}));\nexport var SUBSCRIPTION_STATUS;\n(function (SUBSCRIPTION_STATUS) {\n    SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS[\"PENDING\"] = 0] = \"PENDING\";\n    SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS[\"CONNECTED\"] = 1] = \"CONNECTED\";\n    SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS[\"FAILED\"] = 2] = \"FAILED\";\n})(SUBSCRIPTION_STATUS || (SUBSCRIPTION_STATUS = {}));\nexport var SOCKET_STATUS;\n(function (SOCKET_STATUS) {\n    SOCKET_STATUS[SOCKET_STATUS[\"CLOSED\"] = 0] = \"CLOSED\";\n    SOCKET_STATUS[SOCKET_STATUS[\"READY\"] = 1] = \"READY\";\n    SOCKET_STATUS[SOCKET_STATUS[\"CONNECTING\"] = 2] = \"CONNECTING\";\n})(SOCKET_STATUS || (SOCKET_STATUS = {}));\nexport const AWS_APPSYNC_REALTIME_HEADERS = {\n    accept: 'application/json, text/javascript',\n    'content-encoding': 'amz-1.0',\n    'content-type': 'application/json; charset=UTF-8',\n};\n/**\n * Time in milleseconds to wait for GQL_CONNECTION_INIT message\n */\nexport const CONNECTION_INIT_TIMEOUT = 15000;\n/**\n * Time in milleseconds to wait for GQL_START_ACK message\n */\nexport const START_ACK_TIMEOUT = 15000;\n/**\n * Default Time in milleseconds to wait for GQL_CONNECTION_KEEP_ALIVE message\n */\nexport const DEFAULT_KEEP_ALIVE_TIMEOUT = 5 * 60 * 1000;\n/**\n * Default Time in milleseconds to alert for missed GQL_CONNECTION_KEEP_ALIVE message\n */\nexport const DEFAULT_KEEP_ALIVE_ALERT_TIMEOUT = 65 * 1000;\n/**\n * Default delay time in milleseconds between when reconnect is triggered vs when it is attempted\n */\nexport const RECONNECT_DELAY = 5 * 1000;\n/**\n * Default interval time in milleseconds between when reconnect is re-attempted\n */\nexport const RECONNECT_INTERVAL = 60 * 1000;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Reachability } from '@aws-amplify/core/internals/utils';\nexport const ReachabilityMonitor = () => new Reachability().networkMonitor();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Observable, filter, map } from 'rxjs';\nimport { ConnectionState } from '../types/PubSub';\nimport { ReachabilityMonitor } from './ReachabilityMonitor';\nexport const CONNECTION_CHANGE = {\n    KEEP_ALIVE_MISSED: { keepAliveState: 'unhealthy' },\n    KEEP_ALIVE: { keepAliveState: 'healthy' },\n    CONNECTION_ESTABLISHED: { connectionState: 'connected' },\n    CONNECTION_FAILED: {\n        intendedConnectionState: 'disconnected',\n        connectionState: 'disconnected',\n    },\n    CLOSING_CONNECTION: { intendedConnectionState: 'disconnected' },\n    OPENING_CONNECTION: {\n        intendedConnectionState: 'connected',\n        connectionState: 'connecting',\n    },\n    CLOSED: { connectionState: 'disconnected' },\n    ONLINE: { networkState: 'connected' },\n    OFFLINE: { networkState: 'disconnected' },\n};\nexport class ConnectionStateMonitor {\n    constructor() {\n        this._networkMonitoringSubscription = undefined;\n        this._linkedConnectionState = {\n            networkState: 'connected',\n            connectionState: 'disconnected',\n            intendedConnectionState: 'disconnected',\n            keepAliveState: 'healthy',\n        };\n        // Attempt to update the state with the current actual network state\n        this._initialNetworkStateSubscription = ReachabilityMonitor().subscribe(({ online }) => {\n            this.record(online ? CONNECTION_CHANGE.ONLINE : CONNECTION_CHANGE.OFFLINE);\n            this._initialNetworkStateSubscription?.unsubscribe();\n        });\n        this._linkedConnectionStateObservable =\n            new Observable(connectionStateObserver => {\n                connectionStateObserver.next(this._linkedConnectionState);\n                this._linkedConnectionStateObserver = connectionStateObserver;\n            });\n    }\n    /**\n     * Turn network state monitoring on if it isn't on already\n     */\n    enableNetworkMonitoring() {\n        // If no initial network state was discovered, stop trying\n        this._initialNetworkStateSubscription?.unsubscribe();\n        // Maintain the network state based on the reachability monitor\n        if (this._networkMonitoringSubscription === undefined) {\n            this._networkMonitoringSubscription = ReachabilityMonitor().subscribe(({ online }) => {\n                this.record(online ? CONNECTION_CHANGE.ONLINE : CONNECTION_CHANGE.OFFLINE);\n            });\n        }\n    }\n    /**\n     * Turn network state monitoring off if it isn't off already\n     */\n    disableNetworkMonitoring() {\n        this._networkMonitoringSubscription?.unsubscribe();\n        this._networkMonitoringSubscription = undefined;\n    }\n    /**\n     * Get the observable that allows us to monitor the connection state\n     *\n     * @returns {Observable<ConnectionState>} - The observable that emits ConnectionState updates\n     */\n    get connectionStateObservable() {\n        let previous;\n        // The linked state aggregates state changes to any of the network, connection,\n        // intendedConnection and keepAliveHealth. Some states will change these independent\n        // states without changing the overall connection state.\n        // After translating from linked states to ConnectionState, then remove any duplicates\n        return this._linkedConnectionStateObservable\n            .pipe(map(value => {\n            return this.connectionStatesTranslator(value);\n        }))\n            .pipe(filter(current => {\n            const toInclude = current !== previous;\n            previous = current;\n            return toInclude;\n        }));\n    }\n    /*\n     * Updates local connection state and emits the full state to the observer.\n     */\n    record(statusUpdates) {\n        // Maintain the network monitor\n        if (statusUpdates.intendedConnectionState === 'connected') {\n            this.enableNetworkMonitoring();\n        }\n        else if (statusUpdates.intendedConnectionState === 'disconnected') {\n            this.disableNetworkMonitoring();\n        }\n        // Maintain the socket state\n        const newSocketStatus = {\n            ...this._linkedConnectionState,\n            ...statusUpdates,\n        };\n        this._linkedConnectionState = { ...newSocketStatus };\n        this._linkedConnectionStateObserver?.next(this._linkedConnectionState);\n    }\n    /*\n     * Translate the ConnectionState structure into a specific ConnectionState string literal union\n     */\n    connectionStatesTranslator({ connectionState, networkState, intendedConnectionState, keepAliveState, }) {\n        if (connectionState === 'connected' && networkState === 'disconnected')\n            return ConnectionState.ConnectedPendingNetwork;\n        if (connectionState === 'connected' &&\n            intendedConnectionState === 'disconnected')\n            return ConnectionState.ConnectedPendingDisconnect;\n        if (connectionState === 'disconnected' &&\n            intendedConnectionState === 'connected' &&\n            networkState === 'disconnected')\n            return ConnectionState.ConnectionDisruptedPendingNetwork;\n        if (connectionState === 'disconnected' &&\n            intendedConnectionState === 'connected')\n            return ConnectionState.ConnectionDisrupted;\n        if (connectionState === 'connected' && keepAliveState === 'unhealthy')\n            return ConnectionState.ConnectedPendingKeepAlive;\n        // All remaining states directly correspond to the connection state\n        if (connectionState === 'connecting')\n            return ConnectionState.Connecting;\n        if (connectionState === 'disconnected')\n            return ConnectionState.Disconnected;\n        return ConnectionState.Connected;\n    }\n}\n", "import { RECONNECT_DELAY, RECONNECT_INTERVAL } from '../Providers/constants';\nexport var ReconnectEvent;\n(function (ReconnectEvent) {\n    ReconnectEvent[\"START_RECONNECT\"] = \"START_RECONNECT\";\n    ReconnectEvent[\"HALT_RECONNECT\"] = \"HALT_RECONNECT\";\n})(ReconnectEvent || (ReconnectEvent = {}));\n/**\n * Captures the reconnect event logic used to determine when to reconnect to PubSub providers.\n *   Reconnnect attempts are delayed by 5 seconds to let the interface settle.\n *   Attempting to reconnect only once creates unrecoverable states when the network state isn't\n *   supported by the browser, so this keeps retrying every minute until halted.\n */\nexport class ReconnectionMonitor {\n    constructor() {\n        this.reconnectObservers = [];\n    }\n    /**\n     * Add reconnect observer to the list of observers to alert on reconnect\n     */\n    addObserver(reconnectObserver) {\n        this.reconnectObservers.push(reconnectObserver);\n    }\n    /**\n     * Given a reconnect event, start the appropriate behavior\n     */\n    record(event) {\n        if (event === ReconnectEvent.START_RECONNECT) {\n            // If the reconnection hasn't been started\n            if (this.reconnectSetTimeoutId === undefined &&\n                this.reconnectIntervalId === undefined) {\n                this.reconnectSetTimeoutId = setTimeout(() => {\n                    // Reconnect now\n                    this._triggerReconnect();\n                    // Retry reconnect every periodically until it works\n                    this.reconnectIntervalId = setInterval(() => {\n                        this._triggerReconnect();\n                    }, RECONNECT_INTERVAL);\n                }, RECONNECT_DELAY);\n            }\n        }\n        if (event === ReconnectEvent.HALT_RECONNECT) {\n            if (this.reconnectIntervalId) {\n                clearInterval(this.reconnectIntervalId);\n                this.reconnectIntervalId = undefined;\n            }\n            if (this.reconnectSetTimeoutId) {\n                clearTimeout(this.reconnectSetTimeoutId);\n                this.reconnectSetTimeoutId = undefined;\n            }\n        }\n    }\n    /**\n     * Complete all reconnect observers\n     */\n    close() {\n        this.reconnectObservers.forEach(reconnectObserver => {\n            reconnectObserver.complete?.();\n        });\n    }\n    _triggerReconnect() {\n        this.reconnectObservers.forEach(reconnectObserver => {\n            reconnectObserver.next?.();\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Observable } from 'rxjs';\nimport { GraphQLError } from 'graphql';\nimport { ConsoleLogger, Hub, fetchAuthSession, } from '@aws-amplify/core';\nimport { signRequest } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl, NonRetryableError, USER_AGENT_HEADER, amplifyUuid, base64Encoder, getAmplifyUserAgent, isNonRetryableError, jitteredExponentialRetry, } from '@aws-amplify/core/internals/utils';\nimport { CONTROL_MSG, ConnectionState, } from '../../types/PubSub';\nimport { AMPLIFY_SYMBOL, AWS_APPSYNC_REALTIME_HEADERS, CONNECTION_INIT_TIMEOUT, CONNECTION_STATE_CHANGE, DEFAULT_KEEP_ALIVE_ALERT_TIMEOUT, DEFAULT_KEEP_ALIVE_TIMEOUT, MAX_DELAY_MS, MESSAGE_TYPES, NON_RETRYABLE_CODES, SOCKET_STATUS, START_ACK_TIMEOUT, SUBSCRIPTION_STATUS, } from '../constants';\nimport { CONNECTION_CHANGE, ConnectionStateMonitor, } from '../../utils/ConnectionStateMonitor';\nimport { ReconnectEvent, ReconnectionMonitor, } from '../../utils/ReconnectionMonitor';\nconst logger = new ConsoleLogger('AWSAppSyncRealTimeProvider');\nconst dispatchApiEvent = (payload) => {\n    Hub.dispatch('api', payload, 'PubSub', AMPLIFY_SYMBOL);\n};\nconst standardDomainPattern = /^https:\\/\\/\\w{26}\\.appsync-api\\.\\w{2}(?:(?:-\\w{2,})+)-\\d\\.amazonaws.com(?:\\.cn)?\\/graphql$/i;\nconst customDomainPath = '/realtime';\nexport class AWSAppSyncRealTimeProvider {\n    constructor() {\n        this.socketStatus = SOCKET_STATUS.CLOSED;\n        this.keepAliveTimeout = DEFAULT_KEEP_ALIVE_TIMEOUT;\n        this.subscriptionObserverMap = new Map();\n        this.promiseArray = [];\n        this.connectionStateMonitor = new ConnectionStateMonitor();\n        this.reconnectionMonitor = new ReconnectionMonitor();\n        // Monitor the connection state and pass changes along to Hub\n        this.connectionStateMonitorSubscription =\n            this.connectionStateMonitor.connectionStateObservable.subscribe(connectionState => {\n                dispatchApiEvent({\n                    event: CONNECTION_STATE_CHANGE,\n                    data: {\n                        provider: this,\n                        connectionState,\n                    },\n                    message: `Connection state is ${connectionState}`,\n                });\n                this.connectionState = connectionState;\n                // Trigger START_RECONNECT when the connection is disrupted\n                if (connectionState === ConnectionState.ConnectionDisrupted) {\n                    this.reconnectionMonitor.record(ReconnectEvent.START_RECONNECT);\n                }\n                // Trigger HALT_RECONNECT to halt reconnection attempts when the state is anything other than\n                //   ConnectionDisrupted or Connecting\n                if ([\n                    ConnectionState.Connected,\n                    ConnectionState.ConnectedPendingDisconnect,\n                    ConnectionState.ConnectedPendingKeepAlive,\n                    ConnectionState.ConnectedPendingNetwork,\n                    ConnectionState.ConnectionDisruptedPendingNetwork,\n                    ConnectionState.Disconnected,\n                ].includes(connectionState)) {\n                    this.reconnectionMonitor.record(ReconnectEvent.HALT_RECONNECT);\n                }\n            });\n    }\n    /**\n     * Mark the socket closed and release all active listeners\n     */\n    close() {\n        // Mark the socket closed both in status and the connection monitor\n        this.socketStatus = SOCKET_STATUS.CLOSED;\n        this.connectionStateMonitor.record(CONNECTION_CHANGE.CONNECTION_FAILED);\n        // Turn off the subscription monitor Hub publishing\n        this.connectionStateMonitorSubscription.unsubscribe();\n        // Complete all reconnect observers\n        this.reconnectionMonitor.close();\n    }\n    getNewWebSocket(url, protocol) {\n        return new WebSocket(url, protocol);\n    }\n    getProviderName() {\n        return 'AWSAppSyncRealTimeProvider';\n    }\n    // Check if url matches standard domain pattern\n    isCustomDomain(url) {\n        return url.match(standardDomainPattern) === null;\n    }\n    subscribe(options, customUserAgentDetails) {\n        const { appSyncGraphqlEndpoint, region, query, variables, authenticationType, additionalHeaders, apiKey, authToken, libraryConfigHeaders, } = options || {};\n        return new Observable(observer => {\n            if (!options || !appSyncGraphqlEndpoint) {\n                observer.error({\n                    errors: [\n                        {\n                            ...new GraphQLError(`Subscribe only available for AWS AppSync endpoint`),\n                        },\n                    ],\n                });\n                observer.complete();\n            }\n            else {\n                let subscriptionStartActive = false;\n                const subscriptionId = amplifyUuid();\n                const startSubscription = () => {\n                    if (!subscriptionStartActive) {\n                        subscriptionStartActive = true;\n                        const startSubscriptionPromise = this._startSubscriptionWithAWSAppSyncRealTime({\n                            options: {\n                                query,\n                                variables,\n                                region,\n                                authenticationType,\n                                appSyncGraphqlEndpoint,\n                                additionalHeaders,\n                                apiKey,\n                                authToken,\n                                libraryConfigHeaders,\n                            },\n                            observer,\n                            subscriptionId,\n                            customUserAgentDetails,\n                        }).catch(err => {\n                            logger.debug(`${CONTROL_MSG.REALTIME_SUBSCRIPTION_INIT_ERROR}: ${err}`);\n                            this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSED);\n                        });\n                        startSubscriptionPromise.finally(() => {\n                            subscriptionStartActive = false;\n                        });\n                    }\n                };\n                // Add an observable to the reconnection list to manage reconnection for this subscription\n                const reconnectSubscription = new Observable(reconnectSubscriptionObserver => {\n                    this.reconnectionMonitor.addObserver(reconnectSubscriptionObserver);\n                }).subscribe(() => {\n                    startSubscription();\n                });\n                startSubscription();\n                return async () => {\n                    // Cleanup reconnection subscription\n                    reconnectSubscription?.unsubscribe();\n                    // Cleanup after unsubscribing or observer.complete was called after _startSubscriptionWithAWSAppSyncRealTime\n                    try {\n                        // Waiting that subscription has been connected before trying to unsubscribe\n                        await this._waitForSubscriptionToBeConnected(subscriptionId);\n                        const { subscriptionState } = this.subscriptionObserverMap.get(subscriptionId) || {};\n                        if (!subscriptionState) {\n                            // subscription already unsubscribed\n                            return;\n                        }\n                        if (subscriptionState === SUBSCRIPTION_STATUS.CONNECTED) {\n                            this._sendUnsubscriptionMessage(subscriptionId);\n                        }\n                        else {\n                            throw new Error('Subscription never connected');\n                        }\n                    }\n                    catch (err) {\n                        logger.debug(`Error while unsubscribing ${err}`);\n                    }\n                    finally {\n                        this._removeSubscriptionObserver(subscriptionId);\n                    }\n                };\n            }\n        });\n    }\n    async _startSubscriptionWithAWSAppSyncRealTime({ options, observer, subscriptionId, customUserAgentDetails, }) {\n        const { appSyncGraphqlEndpoint, authenticationType, query, variables, apiKey, region, libraryConfigHeaders = () => ({}), additionalHeaders = {}, authToken, } = options;\n        let additionalCustomHeaders = {};\n        if (typeof additionalHeaders === 'function') {\n            const requestOptions = {\n                url: appSyncGraphqlEndpoint || '',\n                queryString: query || '',\n            };\n            additionalCustomHeaders = await additionalHeaders(requestOptions);\n        }\n        else {\n            additionalCustomHeaders = additionalHeaders;\n        }\n        // if an authorization header is set, have the explicit authToken take precedence\n        if (authToken) {\n            additionalCustomHeaders = {\n                ...additionalCustomHeaders,\n                Authorization: authToken,\n            };\n        }\n        const subscriptionState = SUBSCRIPTION_STATUS.PENDING;\n        const data = {\n            query,\n            variables,\n        };\n        // Having a subscription id map will make it simple to forward messages received\n        this.subscriptionObserverMap.set(subscriptionId, {\n            observer,\n            query: query ?? '',\n            variables: variables ?? {},\n            subscriptionState,\n            startAckTimeoutId: undefined,\n        });\n        // Preparing payload for subscription message\n        const dataString = JSON.stringify(data);\n        const headerObj = {\n            ...(await this._awsRealTimeHeaderBasedAuth({\n                apiKey,\n                appSyncGraphqlEndpoint,\n                authenticationType,\n                payload: dataString,\n                canonicalUri: '',\n                region,\n                additionalCustomHeaders,\n            })),\n            ...(await libraryConfigHeaders()),\n            ...additionalCustomHeaders,\n            [USER_AGENT_HEADER]: getAmplifyUserAgent(customUserAgentDetails),\n        };\n        const subscriptionMessage = {\n            id: subscriptionId,\n            payload: {\n                data: dataString,\n                extensions: {\n                    authorization: {\n                        ...headerObj,\n                    },\n                },\n            },\n            type: MESSAGE_TYPES.GQL_START,\n        };\n        const stringToAWSRealTime = JSON.stringify(subscriptionMessage);\n        try {\n            this.connectionStateMonitor.record(CONNECTION_CHANGE.OPENING_CONNECTION);\n            await this._initializeWebSocketConnection({\n                apiKey,\n                appSyncGraphqlEndpoint,\n                authenticationType,\n                region,\n                additionalCustomHeaders,\n            });\n        }\n        catch (err) {\n            this._logStartSubscriptionError(subscriptionId, observer, err);\n            return;\n        }\n        // Potential race condition can occur when unsubscribe is called during _initializeWebSocketConnection.\n        // E.g.unsubscribe gets invoked prior to finishing WebSocket handshake or START_ACK.\n        // Both subscriptionFailedCallback and subscriptionReadyCallback are used to synchronized this.\n        const { subscriptionFailedCallback, subscriptionReadyCallback } = this.subscriptionObserverMap.get(subscriptionId) ?? {};\n        // This must be done before sending the message in order to be listening immediately\n        this.subscriptionObserverMap.set(subscriptionId, {\n            observer,\n            subscriptionState,\n            query: query ?? '',\n            variables: variables ?? {},\n            subscriptionReadyCallback,\n            subscriptionFailedCallback,\n            startAckTimeoutId: setTimeout(() => {\n                this._timeoutStartSubscriptionAck(subscriptionId);\n            }, START_ACK_TIMEOUT),\n        });\n        if (this.awsRealTimeSocket) {\n            this.awsRealTimeSocket.send(stringToAWSRealTime);\n        }\n    }\n    // Log logic for start subscription failures\n    _logStartSubscriptionError(subscriptionId, observer, err) {\n        logger.debug({ err });\n        const message = String(err.message ?? '');\n        // Resolving to give the state observer time to propogate the update\n        this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSED);\n        // Capture the error only when the network didn't cause disruption\n        if (this.connectionState !== ConnectionState.ConnectionDisruptedPendingNetwork) {\n            // When the error is non-retriable, error out the observable\n            if (isNonRetryableError(err)) {\n                observer.error({\n                    errors: [\n                        {\n                            ...new GraphQLError(`${CONTROL_MSG.CONNECTION_FAILED}: ${message}`),\n                        },\n                    ],\n                });\n            }\n            else {\n                logger.debug(`${CONTROL_MSG.CONNECTION_FAILED}: ${message}`);\n            }\n            const { subscriptionFailedCallback } = this.subscriptionObserverMap.get(subscriptionId) || {};\n            // Notify concurrent unsubscription\n            if (typeof subscriptionFailedCallback === 'function') {\n                subscriptionFailedCallback();\n            }\n        }\n    }\n    // Waiting that subscription has been connected before trying to unsubscribe\n    async _waitForSubscriptionToBeConnected(subscriptionId) {\n        const subscriptionObserver = this.subscriptionObserverMap.get(subscriptionId);\n        if (subscriptionObserver) {\n            const { subscriptionState } = subscriptionObserver;\n            // This in case unsubscribe is invoked before sending start subscription message\n            if (subscriptionState === SUBSCRIPTION_STATUS.PENDING) {\n                return new Promise((resolve, reject) => {\n                    const { observer, subscriptionState: observedSubscriptionState, variables, query, } = subscriptionObserver;\n                    this.subscriptionObserverMap.set(subscriptionId, {\n                        observer,\n                        subscriptionState: observedSubscriptionState,\n                        variables,\n                        query,\n                        subscriptionReadyCallback: resolve,\n                        subscriptionFailedCallback: reject,\n                    });\n                });\n            }\n        }\n    }\n    _sendUnsubscriptionMessage(subscriptionId) {\n        try {\n            if (this.awsRealTimeSocket &&\n                this.awsRealTimeSocket.readyState === WebSocket.OPEN &&\n                this.socketStatus === SOCKET_STATUS.READY) {\n                // Preparing unsubscribe message to stop receiving messages for that subscription\n                const unsubscribeMessage = {\n                    id: subscriptionId,\n                    type: MESSAGE_TYPES.GQL_STOP,\n                };\n                const stringToAWSRealTime = JSON.stringify(unsubscribeMessage);\n                this.awsRealTimeSocket.send(stringToAWSRealTime);\n            }\n        }\n        catch (err) {\n            // If GQL_STOP is not sent because of disconnection issue, then there is nothing the client can do\n            logger.debug({ err });\n        }\n    }\n    _removeSubscriptionObserver(subscriptionId) {\n        this.subscriptionObserverMap.delete(subscriptionId);\n        // Verifying 1000ms after removing subscription in case there are new subscription unmount/mount\n        setTimeout(this._closeSocketIfRequired.bind(this), 1000);\n    }\n    _closeSocketIfRequired() {\n        if (this.subscriptionObserverMap.size > 0) {\n            // Active subscriptions on the WebSocket\n            return;\n        }\n        if (!this.awsRealTimeSocket) {\n            this.socketStatus = SOCKET_STATUS.CLOSED;\n            return;\n        }\n        this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSING_CONNECTION);\n        if (this.awsRealTimeSocket.bufferedAmount > 0) {\n            // Still data on the WebSocket\n            setTimeout(this._closeSocketIfRequired.bind(this), 1000);\n        }\n        else {\n            logger.debug('closing WebSocket...');\n            if (this.keepAliveTimeoutId) {\n                clearTimeout(this.keepAliveTimeoutId);\n            }\n            if (this.keepAliveAlertTimeoutId) {\n                clearTimeout(this.keepAliveAlertTimeoutId);\n            }\n            const tempSocket = this.awsRealTimeSocket;\n            // Cleaning callbacks to avoid race condition, socket still exists\n            tempSocket.onclose = null;\n            tempSocket.onerror = null;\n            tempSocket.close(1000);\n            this.awsRealTimeSocket = undefined;\n            this.socketStatus = SOCKET_STATUS.CLOSED;\n            this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSED);\n        }\n    }\n    _handleIncomingSubscriptionMessage(message) {\n        if (typeof message.data !== 'string') {\n            return;\n        }\n        logger.debug(`subscription message from AWS AppSync RealTime: ${message.data}`);\n        const { id = '', payload, type, } = JSON.parse(String(message.data));\n        const { observer = null, query = '', variables = {}, startAckTimeoutId, subscriptionReadyCallback, subscriptionFailedCallback, } = this.subscriptionObserverMap.get(id) || {};\n        logger.debug({ id, observer, query, variables });\n        if (type === MESSAGE_TYPES.GQL_DATA && payload && payload.data) {\n            if (observer) {\n                observer.next(payload);\n            }\n            else {\n                logger.debug(`observer not found for id: ${id}`);\n            }\n            return;\n        }\n        if (type === MESSAGE_TYPES.GQL_START_ACK) {\n            logger.debug(`subscription ready for ${JSON.stringify({ query, variables })}`);\n            if (typeof subscriptionReadyCallback === 'function') {\n                subscriptionReadyCallback();\n            }\n            if (startAckTimeoutId)\n                clearTimeout(startAckTimeoutId);\n            dispatchApiEvent({\n                event: CONTROL_MSG.SUBSCRIPTION_ACK,\n                data: { query, variables },\n                message: 'Connection established for subscription',\n            });\n            const subscriptionState = SUBSCRIPTION_STATUS.CONNECTED;\n            if (observer) {\n                this.subscriptionObserverMap.set(id, {\n                    observer,\n                    query,\n                    variables,\n                    startAckTimeoutId: undefined,\n                    subscriptionState,\n                    subscriptionReadyCallback,\n                    subscriptionFailedCallback,\n                });\n            }\n            this.connectionStateMonitor.record(CONNECTION_CHANGE.CONNECTION_ESTABLISHED);\n            return;\n        }\n        if (type === MESSAGE_TYPES.GQL_CONNECTION_KEEP_ALIVE) {\n            if (this.keepAliveTimeoutId)\n                clearTimeout(this.keepAliveTimeoutId);\n            if (this.keepAliveAlertTimeoutId)\n                clearTimeout(this.keepAliveAlertTimeoutId);\n            this.keepAliveTimeoutId = setTimeout(() => {\n                this._errorDisconnect(CONTROL_MSG.TIMEOUT_DISCONNECT);\n            }, this.keepAliveTimeout);\n            this.keepAliveAlertTimeoutId = setTimeout(() => {\n                this.connectionStateMonitor.record(CONNECTION_CHANGE.KEEP_ALIVE_MISSED);\n            }, DEFAULT_KEEP_ALIVE_ALERT_TIMEOUT);\n            this.connectionStateMonitor.record(CONNECTION_CHANGE.KEEP_ALIVE);\n            return;\n        }\n        if (type === MESSAGE_TYPES.GQL_ERROR) {\n            const subscriptionState = SUBSCRIPTION_STATUS.FAILED;\n            if (observer) {\n                this.subscriptionObserverMap.set(id, {\n                    observer,\n                    query,\n                    variables,\n                    startAckTimeoutId,\n                    subscriptionReadyCallback,\n                    subscriptionFailedCallback,\n                    subscriptionState,\n                });\n                logger.debug(`${CONTROL_MSG.CONNECTION_FAILED}: ${JSON.stringify(payload)}`);\n                observer.error({\n                    errors: [\n                        {\n                            ...new GraphQLError(`${CONTROL_MSG.CONNECTION_FAILED}: ${JSON.stringify(payload)}`),\n                        },\n                    ],\n                });\n                if (startAckTimeoutId)\n                    clearTimeout(startAckTimeoutId);\n                if (typeof subscriptionFailedCallback === 'function') {\n                    subscriptionFailedCallback();\n                }\n            }\n        }\n    }\n    _errorDisconnect(msg) {\n        logger.debug(`Disconnect error: ${msg}`);\n        if (this.awsRealTimeSocket) {\n            this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSED);\n            this.awsRealTimeSocket.close();\n        }\n        this.socketStatus = SOCKET_STATUS.CLOSED;\n    }\n    _timeoutStartSubscriptionAck(subscriptionId) {\n        const subscriptionObserver = this.subscriptionObserverMap.get(subscriptionId);\n        if (subscriptionObserver) {\n            const { observer, query, variables } = subscriptionObserver;\n            if (!observer) {\n                return;\n            }\n            this.subscriptionObserverMap.set(subscriptionId, {\n                observer,\n                query,\n                variables,\n                subscriptionState: SUBSCRIPTION_STATUS.FAILED,\n            });\n            this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSED);\n            logger.debug('timeoutStartSubscription', JSON.stringify({ query, variables }));\n        }\n    }\n    /**\n     * Strips out `Authorization` header if present\n     */\n    _extractNonAuthHeaders(headers) {\n        if (!headers) {\n            return {};\n        }\n        if ('Authorization' in headers) {\n            const { Authorization: _, ...nonAuthHeaders } = headers;\n            return nonAuthHeaders;\n        }\n        return headers;\n    }\n    /**\n     *\n     * @param headers - http headers\n     * @returns query string of uri-encoded parameters derived from custom headers\n     */\n    _queryStringFromCustomHeaders(headers) {\n        const nonAuthHeaders = this._extractNonAuthHeaders(headers);\n        const queryParams = Object.entries(nonAuthHeaders).map(([key, val]) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`);\n        const queryString = queryParams.join('&');\n        return queryString;\n    }\n    _initializeWebSocketConnection({ appSyncGraphqlEndpoint, authenticationType, apiKey, region, additionalCustomHeaders, }) {\n        if (this.socketStatus === SOCKET_STATUS.READY) {\n            return;\n        }\n        // TODO(Eslint): refactor to now use async function as the promise executor\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            this.promiseArray.push({ res: resolve, rej: reject });\n            if (this.socketStatus === SOCKET_STATUS.CLOSED) {\n                try {\n                    this.socketStatus = SOCKET_STATUS.CONNECTING;\n                    const payloadString = '{}';\n                    const authHeader = await this._awsRealTimeHeaderBasedAuth({\n                        authenticationType,\n                        payload: payloadString,\n                        canonicalUri: '/connect',\n                        apiKey,\n                        appSyncGraphqlEndpoint,\n                        region,\n                        additionalCustomHeaders,\n                    });\n                    const headerString = authHeader ? JSON.stringify(authHeader) : '';\n                    const headerQs = base64Encoder.convert(headerString);\n                    const payloadQs = base64Encoder.convert(payloadString);\n                    const queryString = this._queryStringFromCustomHeaders(additionalCustomHeaders);\n                    let discoverableEndpoint = appSyncGraphqlEndpoint ?? '';\n                    if (this.isCustomDomain(discoverableEndpoint)) {\n                        discoverableEndpoint =\n                            discoverableEndpoint.concat(customDomainPath);\n                    }\n                    else {\n                        discoverableEndpoint = discoverableEndpoint\n                            .replace('appsync-api', 'appsync-realtime-api')\n                            .replace('gogi-beta', 'grt-beta');\n                    }\n                    // Creating websocket url with required query strings\n                    const protocol = 'wss://';\n                    discoverableEndpoint = discoverableEndpoint\n                        .replace('https://', protocol)\n                        .replace('http://', protocol);\n                    let awsRealTimeUrl = `${discoverableEndpoint}?header=${headerQs}&payload=${payloadQs}`;\n                    if (queryString !== '') {\n                        awsRealTimeUrl += `&${queryString}`;\n                    }\n                    await this._initializeRetryableHandshake(awsRealTimeUrl);\n                    this.promiseArray.forEach(({ res }) => {\n                        logger.debug('Notifying connection successful');\n                        res();\n                    });\n                    this.socketStatus = SOCKET_STATUS.READY;\n                    this.promiseArray = [];\n                }\n                catch (err) {\n                    logger.debug('Connection exited with', err);\n                    this.promiseArray.forEach(({ rej }) => {\n                        rej(err);\n                    });\n                    this.promiseArray = [];\n                    if (this.awsRealTimeSocket &&\n                        this.awsRealTimeSocket.readyState === WebSocket.OPEN) {\n                        this.awsRealTimeSocket.close(3001);\n                    }\n                    this.awsRealTimeSocket = undefined;\n                    this.socketStatus = SOCKET_STATUS.CLOSED;\n                }\n            }\n        });\n    }\n    async _initializeRetryableHandshake(awsRealTimeUrl) {\n        logger.debug(`Initializaling retryable Handshake`);\n        await jitteredExponentialRetry(this._initializeHandshake.bind(this), [awsRealTimeUrl], MAX_DELAY_MS);\n    }\n    async _initializeHandshake(awsRealTimeUrl) {\n        logger.debug(`Initializing handshake ${awsRealTimeUrl}`);\n        // Because connecting the socket is async, is waiting until connection is open\n        // Step 1: connect websocket\n        try {\n            await (() => {\n                return new Promise((resolve, reject) => {\n                    const newSocket = this.getNewWebSocket(awsRealTimeUrl, 'graphql-ws');\n                    newSocket.onerror = () => {\n                        logger.debug(`WebSocket connection error`);\n                    };\n                    newSocket.onclose = () => {\n                        reject(new Error('Connection handshake error'));\n                    };\n                    newSocket.onopen = () => {\n                        this.awsRealTimeSocket = newSocket;\n                        resolve();\n                    };\n                });\n            })();\n            // Step 2: wait for ack from AWS AppSyncReaTime after sending init\n            await (() => {\n                return new Promise((resolve, reject) => {\n                    if (this.awsRealTimeSocket) {\n                        let ackOk = false;\n                        this.awsRealTimeSocket.onerror = error => {\n                            logger.debug(`WebSocket error ${JSON.stringify(error)}`);\n                        };\n                        this.awsRealTimeSocket.onclose = event => {\n                            logger.debug(`WebSocket closed ${event.reason}`);\n                            reject(new Error(JSON.stringify(event)));\n                        };\n                        this.awsRealTimeSocket.onmessage = (message) => {\n                            if (typeof message.data !== 'string') {\n                                return;\n                            }\n                            logger.debug(`subscription message from AWS AppSyncRealTime: ${message.data} `);\n                            const data = JSON.parse(message.data);\n                            const { type, payload: { connectionTimeoutMs = DEFAULT_KEEP_ALIVE_TIMEOUT, } = {}, } = data;\n                            if (type === MESSAGE_TYPES.GQL_CONNECTION_ACK) {\n                                ackOk = true;\n                                if (this.awsRealTimeSocket) {\n                                    this.keepAliveTimeout = connectionTimeoutMs;\n                                    this.awsRealTimeSocket.onmessage =\n                                        this._handleIncomingSubscriptionMessage.bind(this);\n                                    this.awsRealTimeSocket.onerror = err => {\n                                        logger.debug(err);\n                                        this._errorDisconnect(CONTROL_MSG.CONNECTION_CLOSED);\n                                    };\n                                    this.awsRealTimeSocket.onclose = event => {\n                                        logger.debug(`WebSocket closed ${event.reason}`);\n                                        this._errorDisconnect(CONTROL_MSG.CONNECTION_CLOSED);\n                                    };\n                                }\n                                resolve('Cool, connected to AWS AppSyncRealTime');\n                                return;\n                            }\n                            if (type === MESSAGE_TYPES.GQL_CONNECTION_ERROR) {\n                                const { payload: { errors: [{ errorType = '', errorCode = 0 } = {}] = [], } = {}, } = data;\n                                // TODO(Eslint): refactor to reject an Error object instead of a plain object\n                                // eslint-disable-next-line prefer-promise-reject-errors\n                                reject({ errorType, errorCode });\n                            }\n                        };\n                        const gqlInit = {\n                            type: MESSAGE_TYPES.GQL_CONNECTION_INIT,\n                        };\n                        this.awsRealTimeSocket.send(JSON.stringify(gqlInit));\n                        const checkAckOk = (targetAckOk) => {\n                            if (!targetAckOk) {\n                                this.connectionStateMonitor.record(CONNECTION_CHANGE.CONNECTION_FAILED);\n                                reject(new Error(`Connection timeout: ack from AWSAppSyncRealTime was not received after ${CONNECTION_INIT_TIMEOUT} ms`));\n                            }\n                        };\n                        setTimeout(() => {\n                            checkAckOk(ackOk);\n                        }, CONNECTION_INIT_TIMEOUT);\n                    }\n                });\n            })();\n        }\n        catch (err) {\n            const { errorType, errorCode } = err;\n            if (NON_RETRYABLE_CODES.includes(errorCode)) {\n                throw new NonRetryableError(errorType);\n            }\n            else if (errorType) {\n                throw new Error(errorType);\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    async _awsRealTimeHeaderBasedAuth({ apiKey, authenticationType, payload, canonicalUri, appSyncGraphqlEndpoint, region, additionalCustomHeaders, }) {\n        const headerHandler = {\n            apiKey: this._awsRealTimeApiKeyHeader.bind(this),\n            iam: this._awsRealTimeIAMHeader.bind(this),\n            oidc: this._awsAuthTokenHeader.bind(this),\n            userPool: this._awsAuthTokenHeader.bind(this),\n            lambda: this._customAuthHeader,\n            none: this._customAuthHeader,\n        };\n        if (!authenticationType || !headerHandler[authenticationType]) {\n            logger.debug(`Authentication type ${authenticationType} not supported`);\n            return undefined;\n        }\n        else {\n            const handler = headerHandler[authenticationType];\n            const host = appSyncGraphqlEndpoint\n                ? new AmplifyUrl(appSyncGraphqlEndpoint).host\n                : undefined;\n            logger.debug(`Authenticating with ${JSON.stringify(authenticationType)}`);\n            let resolvedApiKey;\n            if (authenticationType === 'apiKey') {\n                resolvedApiKey = apiKey;\n            }\n            const result = await handler({\n                payload,\n                canonicalUri,\n                appSyncGraphqlEndpoint,\n                apiKey: resolvedApiKey,\n                region,\n                host,\n                additionalCustomHeaders,\n            });\n            return result;\n        }\n    }\n    async _awsAuthTokenHeader({ host }) {\n        const session = await fetchAuthSession();\n        return {\n            Authorization: session?.tokens?.accessToken?.toString(),\n            host,\n        };\n    }\n    async _awsRealTimeApiKeyHeader({ apiKey, host, }) {\n        const dt = new Date();\n        const dtStr = dt.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n        return {\n            host,\n            'x-amz-date': dtStr,\n            'x-api-key': apiKey,\n        };\n    }\n    async _awsRealTimeIAMHeader({ payload, canonicalUri, appSyncGraphqlEndpoint, region, }) {\n        const endpointInfo = {\n            region,\n            service: 'appsync',\n        };\n        const creds = (await fetchAuthSession()).credentials;\n        const request = {\n            url: `${appSyncGraphqlEndpoint}${canonicalUri}`,\n            data: payload,\n            method: 'POST',\n            headers: { ...AWS_APPSYNC_REALTIME_HEADERS },\n        };\n        const signedParams = signRequest({\n            headers: request.headers,\n            method: request.method,\n            url: new AmplifyUrl(request.url),\n            body: request.data,\n        }, {\n            // TODO: What do we need to do to remove these !'s?\n            credentials: creds,\n            signingRegion: endpointInfo.region,\n            signingService: endpointInfo.service,\n        });\n        return signedParams.headers;\n    }\n    _customAuthHeader({ host, additionalCustomHeaders, }) {\n        /**\n         * If `additionalHeaders` was provided to the subscription as a function,\n         * the headers that are returned by that function will already have been\n         * provided before this function is called.\n         */\n        if (!additionalCustomHeaders?.Authorization) {\n            throw new Error('No auth token specified');\n        }\n        return {\n            Authorization: additionalCustomHeaders.Authorization,\n            host,\n        };\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, } from '@aws-amplify/core/internals/utils';\n/**\n * @internal\n */\nexport class GraphQLApiError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = GraphQLApiError;\n        Object.setPrototypeOf(this, GraphQLApiError.prototype);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var APIValidationErrorCode;\n(function (APIValidationErrorCode) {\n    APIValidationErrorCode[\"NoAuthSession\"] = \"NoAuthSession\";\n    APIValidationErrorCode[\"NoRegion\"] = \"NoRegion\";\n    APIValidationErrorCode[\"NoCustomEndpoint\"] = \"NoCustomEndpoint\";\n})(APIValidationErrorCode || (APIValidationErrorCode = {}));\nexport const validationErrorMap = {\n    [APIValidationErrorCode.NoAuthSession]: {\n        message: 'Auth session should not be empty.',\n    },\n    // TODO: re-enable when working in all test environments:\n    // [APIValidationErrorCode.NoEndpoint]: {\n    // \tmessage: 'Missing endpoint',\n    // },\n    [APIValidationErrorCode.NoRegion]: {\n        message: 'Missing region.',\n    },\n    [APIValidationErrorCode.NoCustomEndpoint]: {\n        message: 'Custom endpoint region is present without custom endpoint.',\n    },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { GraphQLApiError } from './GraphQLApiError';\nimport { validationErrorMap } from './validation';\n/**\n * @internal\n */\nexport function assertValidationError(assertion, name) {\n    const { message, recoverySuggestion } = validationErrorMap[name];\n    if (!assertion) {\n        throw new GraphQLApiError({ name, message, recoverySuggestion });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { APIValidationErrorCode, assertValidationError } from './errors';\nconst logger = new ConsoleLogger('GraphQLAPI resolveConfig');\n/**\n * @internal\n */\nexport const resolveConfig = (amplify) => {\n    const config = amplify.getConfig();\n    if (!config.API?.GraphQL) {\n        logger.warn('The API configuration is missing. This is likely due to Amplify.configure() not being called prior to generateClient().');\n    }\n    const { apiKey, customEndpoint, customEndpointRegion, defaultAuthMode, endpoint, region, } = config.API?.GraphQL ?? {};\n    // TODO: re-enable when working in all test environments:\n    // assertValidationError(!!endpoint, APIValidationErrorCode.NoEndpoint);\n    assertValidationError(!(!customEndpoint && customEndpointRegion), APIValidationErrorCode.NoCustomEndpoint);\n    return {\n        apiKey,\n        customEndpoint,\n        customEndpointRegion,\n        defaultAuthMode,\n        endpoint,\n        region,\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nexport const resolveLibraryOptions = (amplify) => {\n    const headers = amplify.libraryOptions?.API?.GraphQL?.headers;\n    const withCredentials = amplify.libraryOptions?.API?.GraphQL?.withCredentials;\n    return { headers, withCredentials };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Checks to see if the given response or subscription message contains an\n * Unauthorized error. If it does, it changes the error message to include instructions\n * for the app developer.\n */\nexport function repackageUnauthorizedError(content) {\n    if (content.errors && Array.isArray(content.errors)) {\n        content.errors.forEach(e => {\n            if (isUnauthorizedError(e)) {\n                e.message = 'Unauthorized';\n                e.recoverySuggestion =\n                    `If you're calling an Amplify-generated API, make sure ` +\n                        `to set the \"authMode\" in generateClient({ authMode: '...' }) to the backend authorization ` +\n                        `rule's auth provider ('apiKey', 'userPool', 'iam', 'oidc', 'lambda')`;\n            }\n        });\n    }\n    return content;\n}\nfunction isUnauthorizedError(error) {\n    // Error pattern corresponding to appsync calls\n    if (error?.originalError?.name?.startsWith('UnauthorizedException')) {\n        return true;\n    }\n    // Error pattern corresponding to appsync subscriptions\n    if (error.message?.startsWith('Connection failed:') &&\n        error.message?.includes('Permission denied')) {\n        return true;\n    }\n    return false;\n}\n", "export { CONTROL_MSG, ConnectionState } from './PubSub';\nexport var GraphQLAuthError;\n(function (GraphQLAuthError) {\n    GraphQLAuthError[\"NO_API_KEY\"] = \"No api-key configured\";\n    GraphQLAuthError[\"NO_CURRENT_USER\"] = \"No current user\";\n    GraphQLAuthError[\"NO_CREDENTIALS\"] = \"No credentials\";\n    GraphQLAuthError[\"NO_FEDERATED_JWT\"] = \"No federated jwt\";\n    GraphQLAuthError[\"NO_AUTH_TOKEN\"] = \"No auth token specified\";\n})(GraphQLAuthError || (GraphQLAuthError = {}));\nexport const __amplify = Symbol('amplify');\nexport const __authMode = Symbol('authMode');\nexport const __authToken = Symbol('authToken');\nexport const __headers = Symbol('headers');\nexport function getInternals(client) {\n    const c = client;\n    return {\n        amplify: c[__amplify],\n        authMode: c[__authMode],\n        authToken: c[__authToken],\n        headers: c[__headers],\n    };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { GraphQLAuthError } from '../../types';\nexport const NO_API_KEY = {\n    name: 'NoApiKey',\n    // ideal: No API key configured.\n    message: GraphQLAuthError.NO_API_KEY,\n    recoverySuggestion: 'The API request was made with `authMode: \"apiKey\"` but no API Key was passed into `Amplify.configure()`. Review if your API key is passed into the `Amplify.configure()` function.',\n};\nexport const NO_VALID_CREDENTIALS = {\n    name: 'NoCredentials',\n    // ideal: No auth credentials available.\n    message: GraphQLAuthError.NO_CREDENTIALS,\n    recoverySuggestion: `The API request was made with \\`authMode: \"iam\"\\` but no authentication credentials are available.\n\nIf you intended to make a request using an authenticated role, review if your user is signed in before making the request.\n\nIf you intend to make a request using an unauthenticated role or also known as \"guest access\", verify if \"Auth.Cognito.allowGuestAccess\" is set to \"true\" in the \\`Amplify.configure()\\` function.`,\n};\nexport const NO_VALID_AUTH_TOKEN = {\n    name: 'NoValidAuthTokens',\n    // ideal: No valid JWT auth token provided to make the API request..\n    message: GraphQLAuthError.NO_FEDERATED_JWT,\n    recoverySuggestion: 'If you intended to make an authenticated API request, review if the current user is signed in.',\n};\nexport const NO_SIGNED_IN_USER = {\n    name: 'NoSignedUser',\n    // ideal: Couldn't retrieve authentication credentials to make the API request.\n    message: GraphQLAuthError.NO_CURRENT_USER,\n    recoverySuggestion: 'Review the underlying exception field for more details. If you intended to make an authenticated API request, review if the current user is signed in.',\n};\nexport const NO_AUTH_TOKEN_HEADER = {\n    name: 'NoAuthorizationHeader',\n    // ideal: Authorization header not specified.\n    message: GraphQLAuthError.NO_AUTH_TOKEN,\n    recoverySuggestion: 'The API request was made with `authMode: \"lambda\"` but no `authToken` is set. Review if a valid authToken is passed into the request options or in the `Amplify.configure()` function.',\n};\nexport const NO_ENDPOINT = {\n    name: 'NoEndpoint',\n    message: 'No GraphQL endpoint configured in `Amplify.configure()`.',\n    recoverySuggestion: 'Review if the GraphQL API endpoint is set in the `Amplify.configure()` function.',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { GraphQLError } from 'graphql';\nexport const createGraphQLResultWithError = (error) => {\n    return {\n        data: {},\n        errors: [new GraphQLError(error.message, null, null, null, null, error)],\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isGraphQLResponseWithErrors(response) {\n    if (!response) {\n        return false;\n    }\n    const r = response;\n    return Array.isArray(r.errors) && r.errors.length > 0;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parse, print, } from 'graphql';\nimport { catchError } from 'rxjs';\nimport { AmplifyUrl, getAmplifyUserAgent, } from '@aws-amplify/core/internals/utils';\nimport { isCancelError as isCancelErrorREST } from '@aws-amplify/api-rest';\nimport { cancel as cancelREST, post, updateRequestToBeCancellable, } from '@aws-amplify/api-rest/internals';\nimport { AWSAppSyncRealTimeProvider } from '../Providers/AWSAppSyncRealTimeProvider';\nimport { resolveConfig, resolveLibraryOptions } from '../utils';\nimport { repackageUnauthorizedError } from '../utils/errors/repackageAuthError';\nimport { NO_API_KEY, NO_AUTH_TOKEN_HEADER, NO_ENDPOINT, NO_SIGNED_IN_USER, NO_VALID_AUTH_TOKEN, NO_VALID_CREDENTIALS, } from '../utils/errors/constants';\nimport { GraphQLApiError, createGraphQLResultWithError } from '../utils/errors';\nimport { isGraphQLResponseWithErrors } from './utils/runtimeTypeGuards/isGraphQLResponseWithErrors';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\nconst isAmplifyInstance = (amplify) => {\n    return typeof amplify !== 'function';\n};\n/**\n * Export Cloud Logic APIs\n */\nexport class InternalGraphQLAPIClass {\n    constructor() {\n        /**\n         * @private\n         */\n        this.appSyncRealTime = new AWSAppSyncRealTimeProvider();\n        this._api = {\n            post,\n            cancelREST,\n            isCancelErrorREST,\n            updateRequestToBeCancellable,\n        };\n    }\n    getModuleName() {\n        return 'InternalGraphQLAPI';\n    }\n    async _headerBasedAuth(amplify, authMode, additionalHeaders = {}) {\n        const { apiKey } = resolveConfig(amplify);\n        let headers = {};\n        switch (authMode) {\n            case 'apiKey':\n                if (!apiKey) {\n                    throw new GraphQLApiError(NO_API_KEY);\n                }\n                headers = {\n                    'X-Api-Key': apiKey,\n                };\n                break;\n            case 'iam': {\n                const session = await amplify.Auth.fetchAuthSession();\n                if (session.credentials === undefined) {\n                    throw new GraphQLApiError(NO_VALID_CREDENTIALS);\n                }\n                break;\n            }\n            case 'oidc':\n            case 'userPool': {\n                let token;\n                try {\n                    token = (await amplify.Auth.fetchAuthSession()).tokens?.accessToken.toString();\n                }\n                catch (e) {\n                    // fetchAuthSession failed\n                    throw new GraphQLApiError({\n                        ...NO_SIGNED_IN_USER,\n                        underlyingError: e,\n                    });\n                }\n                // `fetchAuthSession()` succeeded but didn't return `tokens`.\n                // This may happen when unauthenticated access is enabled and there is\n                // no user signed in.\n                if (!token) {\n                    throw new GraphQLApiError(NO_VALID_AUTH_TOKEN);\n                }\n                headers = {\n                    Authorization: token,\n                };\n                break;\n            }\n            case 'lambda':\n                if (typeof additionalHeaders === 'object' &&\n                    !additionalHeaders.Authorization) {\n                    throw new GraphQLApiError(NO_AUTH_TOKEN_HEADER);\n                }\n                headers = {\n                    Authorization: additionalHeaders.Authorization,\n                };\n                break;\n            case 'none':\n                break;\n            default:\n                break;\n        }\n        return headers;\n    }\n    /**\n     * to get the operation type\n     * @param operation\n     */\n    getGraphqlOperationType(operation) {\n        const doc = parse(operation);\n        const definitions = doc.definitions;\n        const [{ operation: operationType }] = definitions;\n        return operationType;\n    }\n    /**\n     * Executes a GraphQL operation\n     *\n     * @param options - GraphQL Options\n     * @param [additionalHeaders] - headers to merge in after any `libraryConfigHeaders` set in the config\n     * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n     */\n    graphql(amplify, { query: paramQuery, variables = {}, authMode, authToken }, additionalHeaders, customUserAgentDetails) {\n        const query = typeof paramQuery === 'string'\n            ? parse(paramQuery)\n            : parse(print(paramQuery));\n        const [operationDef = {}] = query.definitions.filter(def => def.kind === 'OperationDefinition');\n        const { operation: operationType } = operationDef;\n        const headers = additionalHeaders || {};\n        switch (operationType) {\n            case 'query':\n            case 'mutation': {\n                const abortController = new AbortController();\n                let responsePromise;\n                if (isAmplifyInstance(amplify)) {\n                    responsePromise = this._graphql(amplify, { query, variables, authMode }, headers, abortController, customUserAgentDetails, authToken);\n                }\n                else {\n                    // NOTE: this wrapper function must be await-able so the Amplify server context manager can\n                    // destroy the context only after it completes\n                    const wrapper = async (amplifyInstance) => {\n                        const result = await this._graphql(amplifyInstance, { query, variables, authMode }, headers, abortController, customUserAgentDetails, authToken);\n                        return result;\n                    };\n                    responsePromise = amplify(wrapper);\n                }\n                this._api.updateRequestToBeCancellable(responsePromise, abortController);\n                return responsePromise;\n            }\n            case 'subscription':\n                return this._graphqlSubscribe(amplify, { query, variables, authMode }, headers, customUserAgentDetails, authToken);\n            default:\n                throw new Error(`invalid operation type: ${operationType}`);\n        }\n    }\n    async _graphql(amplify, { query, variables, authMode: explicitAuthMode }, additionalHeaders = {}, abortController, customUserAgentDetails, authToken) {\n        const { region, endpoint: appSyncGraphqlEndpoint, customEndpoint, customEndpointRegion, defaultAuthMode, } = resolveConfig(amplify);\n        const initialAuthMode = explicitAuthMode || defaultAuthMode || 'iam';\n        // identityPool is an alias for iam. TODO: remove 'iam' in v7\n        const authMode = initialAuthMode === 'identityPool' ? 'iam' : initialAuthMode;\n        /**\n         * Retrieve library options from Amplify configuration.\n         * `customHeaders` here are from the Amplify configuration options,\n         * and are for non-AppSync endpoints only. These are *not* the same as\n         * `additionalHeaders`, which are custom headers that are either 1)\n         * included when configuring the API client or 2) passed along with\n         * individual requests.\n         */\n        const { headers: customHeaders, withCredentials } = resolveLibraryOptions(amplify);\n        /**\n         * Client or request-specific custom headers that may or may not be\n         * returned by a function:\n         */\n        let additionalCustomHeaders;\n        if (typeof additionalHeaders === 'function') {\n            const requestOptions = {\n                method: 'POST',\n                url: new AmplifyUrl(customEndpoint || appSyncGraphqlEndpoint || '').toString(),\n                queryString: print(query),\n            };\n            additionalCustomHeaders = await additionalHeaders(requestOptions);\n        }\n        else {\n            additionalCustomHeaders = additionalHeaders;\n        }\n        // if an authorization header is set, have the explicit authToken take precedence\n        if (authToken) {\n            additionalCustomHeaders = {\n                ...additionalCustomHeaders,\n                Authorization: authToken,\n            };\n        }\n        // TODO: Figure what we need to do to remove `!`'s.\n        const headers = {\n            ...(!customEndpoint &&\n                (await this._headerBasedAuth(amplify, authMode, additionalCustomHeaders))),\n            /**\n             * Custom endpoint headers.\n             * If there is both a custom endpoint and custom region present, we get the headers.\n             * If there is a custom endpoint but no region, we return an empty object.\n             * If neither are present, we return an empty object.\n             */\n            ...((customEndpoint &&\n                (customEndpointRegion\n                    ? await this._headerBasedAuth(amplify, authMode, additionalCustomHeaders)\n                    : {})) ||\n                {}),\n            // Custom headers included in Amplify configuration options:\n            ...(customHeaders &&\n                (await customHeaders({\n                    query: print(query),\n                    variables,\n                }))),\n            // Custom headers from individual requests or API client configuration:\n            ...additionalCustomHeaders,\n            // User agent headers:\n            ...(!customEndpoint && {\n                [USER_AGENT_HEADER]: getAmplifyUserAgent(customUserAgentDetails),\n            }),\n        };\n        const body = {\n            query: print(query),\n            variables: variables || null,\n        };\n        let signingServiceInfo;\n        /**\n         * We do not send the signing service info to the REST API under the\n         * following conditions (i.e. it will not sign the request):\n         *   - there is a custom endpoint but no region\n         *   - the auth mode is `none`, or `apiKey`\n         *   - the auth mode is a type other than the types listed below\n         */\n        if ((customEndpoint && !customEndpointRegion) ||\n            (authMode !== 'oidc' &&\n                authMode !== 'userPool' &&\n                authMode !== 'iam' &&\n                authMode !== 'lambda')) {\n            signingServiceInfo = undefined;\n        }\n        else {\n            signingServiceInfo = {\n                service: !customEndpointRegion ? 'appsync' : 'execute-api',\n                region: !customEndpointRegion ? region : customEndpointRegion,\n            };\n        }\n        const endpoint = customEndpoint || appSyncGraphqlEndpoint;\n        if (!endpoint) {\n            throw createGraphQLResultWithError(new GraphQLApiError(NO_ENDPOINT));\n        }\n        let response;\n        try {\n            // See the inline doc of the REST `post()` API for possible errors to be thrown.\n            // As these errors are catastrophic they should be caught and handled by GraphQL\n            // API consumers.\n            const { body: responseBody } = await this._api.post(amplify, {\n                url: new AmplifyUrl(endpoint),\n                options: {\n                    headers,\n                    body,\n                    signingServiceInfo,\n                    withCredentials,\n                },\n                abortController,\n            });\n            response = await responseBody.json();\n        }\n        catch (error) {\n            if (this.isCancelError(error)) {\n                throw error;\n            }\n            response = createGraphQLResultWithError(error);\n        }\n        if (isGraphQLResponseWithErrors(response)) {\n            throw repackageUnauthorizedError(response);\n        }\n        return response;\n    }\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    isCancelError(error) {\n        return this._api.isCancelErrorREST(error);\n    }\n    /**\n     * Cancels an inflight request. Only applicable for graphql queries and mutations\n     * @param {any} request - request to cancel\n     * @returns - A boolean indicating if the request was cancelled\n     */\n    cancel(request, message) {\n        return this._api.cancelREST(request, message);\n    }\n    _graphqlSubscribe(amplify, { query, variables, authMode: explicitAuthMode }, additionalHeaders = {}, customUserAgentDetails, authToken) {\n        const config = resolveConfig(amplify);\n        const initialAuthMode = explicitAuthMode || config?.defaultAuthMode || 'iam';\n        // identityPool is an alias for iam. TODO: remove 'iam' in v7\n        const authMode = initialAuthMode === 'identityPool' ? 'iam' : initialAuthMode;\n        /**\n         * Retrieve library options from Amplify configuration.\n         * `libraryConfigHeaders` are from the Amplify configuration options,\n         * and will not be overwritten by other custom headers. These are *not*\n         * the same as `additionalHeaders`, which are custom headers that are\n         * either 1)included when configuring the API client or 2) passed along\n         * with individual requests.\n         */\n        const { headers: libraryConfigHeaders } = resolveLibraryOptions(amplify);\n        return this.appSyncRealTime\n            .subscribe({\n            query: print(query),\n            variables,\n            appSyncGraphqlEndpoint: config?.endpoint,\n            region: config?.region,\n            authenticationType: authMode,\n            apiKey: config?.apiKey,\n            additionalHeaders,\n            authToken,\n            libraryConfigHeaders,\n        }, customUserAgentDetails)\n            .pipe(catchError(e => {\n            if (e.errors) {\n                throw repackageUnauthorizedError(e);\n            }\n            throw e;\n        }));\n    }\n}\nexport const InternalGraphQLAPI = new InternalGraphQLAPIClass();\n", "import { ApiAction, Category } from '@aws-amplify/core/internals/utils';\nimport { InternalGraphQLAPIClass } from './internals/InternalGraphQLAPI';\nexport const graphqlOperation = (query, variables = {}, authToken) => ({\n    query,\n    variables,\n    authToken,\n});\n/**\n * Export Cloud Logic APIs\n */\nexport class GraphQLAPIClass extends InternalGraphQLAPIClass {\n    getModuleName() {\n        return 'GraphQLAPI';\n    }\n    /**\n     * Executes a GraphQL operation\n     *\n     * @param options - GraphQL Options\n     * @param [additionalHeaders] - headers to merge in after any `libraryConfigHeaders` set in the config\n     * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n     */\n    graphql(amplify, options, additionalHeaders) {\n        return super.graphql(amplify, options, additionalHeaders, {\n            category: Category.API,\n            action: ApiAction.GraphQl,\n        });\n    }\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param error - Any error\n     * @returns A boolean indicating if the error was from an api request cancellation\n     */\n    isCancelError(error) {\n        return super.isCancelError(error);\n    }\n    /**\n     * Cancels an inflight request. Only applicable for graphql queries and mutations\n     * @param {any} request - request to cancel\n     * @returns A boolean indicating if the request was cancelled\n     */\n    cancel(request, message) {\n        return super.cancel(request, message);\n    }\n}\nexport const GraphQLAPI = new GraphQLAPIClass();\n", "import { GraphQLAPI } from '../GraphQLAPI';\nimport { getInternals, } from '../types';\n/**\n * Invokes graphql operations against a graphql service, providing correct input and\n * output types if Amplify-generated graphql from a recent version of the CLI/codegen\n * are used *or* correct typing is provided via the type argument.\n *\n * Amplify-generated \"branded\" graphql queries will look similar to this:\n *\n * ```ts\n *                               //\n *                               // |-- branding\n *                               // v\n * export const getModel = `...` as GeneratedQuery<\n * \tGetModelQueryVariables,\n * \tGetModelQuery\n * >;\n * ```\n *\n * If this branding is not in your generated graphql, update to a newer version of\n * CLI/codegen and regenerate your graphql using `amplify codegen`.\n *\n * ## Using Amplify-generated graphql\n *\n * ```ts\n * import * as queries from './graphql/queries';\n *\n * //\n * //    |-- correctly typed graphql response containing a Widget\n * //    v\n * const queryResult = await graphql({\n * \tquery: queries.getWidget,\n * \tvariables: {\n * \t\tid: \"abc\", // <-- type hinted/enforced\n * \t},\n * });\n *\n * //\n * //    |-- a correctly typed Widget\n * //    v\n * const fetchedWidget = queryResult.data?.getWidget!;\n * ```\n *\n * ## Custom input + result types\n *\n * To provide input types (`variables`) and result types:\n *\n * ```ts\n * type GetById_NameOnly = {\n * \tvariables: {\n * \t\tid: string\n * \t},\n * \tresult: Promise<{\n * \t\tdata: { getWidget: { name: string } }\n * \t}>\n * }\n *\n * //\n * //    |-- type is GetById_NameOnly[\"result\"]\n * //    v\n * const result = graphql<GetById_NameOnly>({\n * \tquery: \"...\",\n * \tvariables: { id: \"abc\" }  // <-- type of GetById_NameOnly[\"variables\"]\n * });\n * ```\n *\n * ## Custom result type only\n *\n * To specify result types only, use a type that is *not* in the `{variables, result}` shape:\n *\n * ```ts\n * type MyResultType = Promise<{\n * \tdata: {\n * \t\tgetWidget: { name: string }\n * \t}\n * }>\n *\n * //\n * //    |-- type is MyResultType\n * //    v\n * const result = graphql<MyResultType>({query: \"...\"});\n * ```\n *\n * @param options\n * @param additionalHeaders\n */\nexport function graphql(options, additionalHeaders) {\n    // inject client-level auth\n    const internals = getInternals(this);\n    options.authMode = options.authMode || internals.authMode;\n    options.authToken = options.authToken || internals.authToken;\n    const headers = additionalHeaders || internals.headers;\n    /**\n     * The correctness of these typings depends on correct string branding or overrides.\n     * Neither of these can actually be validated at runtime. Hence, we don't perform\n     * any validation or type-guarding here.\n     */\n    const result = GraphQLAPI.graphql(\n    // TODO: move V6Client back into this package?\n    internals.amplify, options, headers);\n    return result;\n}\n/**\n * Cancels an inflight request. Only applicable for graphql queries and mutations\n * @param {any} request - request to cancel\n * @returns - A boolean indicating if the request was cancelled\n */\nexport function cancel(promise, message) {\n    return GraphQLAPI.cancel(promise, message);\n}\n/**\n * Checks to see if an error thrown is from an api request cancellation\n * @param {any} error - Any error\n * @returns - A boolean indicating if the error was from an api request cancellation\n */\nexport function isCancelError(error) {\n    return GraphQLAPI.isCancelError(error);\n}\n", "export { __modelMeta__ } from '@aws-amplify/data-schema-types';\nexport { addSchemaToClient } from './addSchemaToClient.mjs';\nexport { addSchemaToClientWithInstance } from './addSchemaToClientWithInstance.mjs';\n//# sourceMappingURL=index.mjs.map\n", "export { __modelMeta__ } from './client/symbol.mjs';\n//# sourceMappingURL=index.mjs.map\n", "export const __modelMeta__ = Symbol();\n", "/**\n * Given an introspection schema model, returns all owner fields.\n *\n * @param model Model from an introspection schema\n * @returns List of owner field names\n */\nexport function resolveOwnerFields(model) {\n    const ownerFields = new Set();\n    for (const attr of model.attributes || []) {\n        if (isAuthAttribute(attr)) {\n            for (const rule of attr.properties.rules) {\n                if (rule.allow === 'owner') {\n                    ownerFields.add(rule.ownerField || 'owner');\n                }\n                else if (rule.allow === 'groups' && rule.groupsField !== undefined) {\n                    // only valid for dynamic group(s)\n                    // static group auth will have an array of predefined groups in the attribute, groups: string[]\n                    // but `groupsField` will be undefined\n                    ownerFields.add(rule.groupsField);\n                }\n            }\n        }\n    }\n    return Array.from(ownerFields);\n}\n/**\n * Type guard that identifies an auth attribute with an attached rules list that\n * specifies an `allow` attribute at a minimum.\n *\n * @param attribute Any object. Ideally a model introspection schema model attribute\n * @returns True if given object is an auth attribute\n */\nfunction isAuthAttribute(attribute) {\n    if (attribute?.type === 'auth') {\n        if (typeof attribute?.properties === 'object') {\n            if (Array.isArray(attribute?.properties?.rules)) {\n                return (attribute?.properties?.rules).every((rule) => !!rule.allow);\n            }\n        }\n    }\n    return false;\n}\n", "/**\n * @param s string to capitalize\n * @returns capitalized string\n */\nexport function capitalize(s) {\n    return `${s[0].toUpperCase()}${s.slice(1)}`;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\nimport { resolveOwnerFields, capitalize } from '../utils';\nconst connectionType = {\n    HAS_ONE: 'HAS_ONE',\n    HAS_MANY: 'HAS_MANY',\n    BELONGS_TO: 'BELONGS_TO',\n};\n// When generating an SK's KeyConditionInput name, string-like types map to String\nconst skGraphQlFieldTypeMap = {\n    ID: 'ID',\n    String: 'String',\n    AWSDate: 'String',\n    AWSTime: 'String',\n    AWSDateTime: 'String',\n    AWSTimestamp: 'Int',\n    AWSEmail: 'String',\n    AWSPhone: 'String',\n    AWSURL: 'String',\n    AWSIPAddress: 'String',\n    AWSJSON: 'String',\n    Boolean: 'Boolean',\n    Int: 'Int',\n    Float: 'Float',\n};\n// move to util\nconst resolvedSkName = (sk) => {\n    if (sk.length === 1) {\n        return sk[0];\n    }\n    else {\n        return sk.reduce((acc, curr, idx) => {\n            if (idx === 0) {\n                return curr;\n            }\n            else {\n                return acc + capitalize(curr);\n            }\n        }, '');\n    }\n};\n/**\n * Crawls a model tree, starting with a given **individual** model instance record, looking\n * for related hasMany children to extract from their `items` containers.\n *\n * E.g., if we have a record like this:\n *\n * ```js\n * {\n *   id: 'some-id',\n *   children: {\n *     items: [\n *       { name: 'a' }\n *       { name: 'b' }\n *       { name: 'c' }\n *     ]\n *   }\n * }\n * ```\n *\n * And if `children` refers to *an array of another model* (as opposed to a custom type),\n * the `items` will be extracted. We do this because `items` is just the mechanism for nesting\n * child records -- we don't want customers to have to dig the items out in application code.\n * Ultimately, we return this \"flattened\" structure:\n *\n * ```js\n * {\n *   id: 'some-id',\n *   children: [\n *     { name: 'a' }\n *     { name: 'b' }\n *     { name: 'c' }\n *   ]\n * }\n * ```\n *\n * Notably, an identical record could be the result of a nested custom type that contains an\n * `items` property. This will *not* be flattened, because in that case the `items` property is\n * actually part of the customer's schema. Similarly if a model contains an explicit `items` field.\n *\n * @param modelIntrospection Top-level model introspection schema.\n * @param modelName The name of the model. Can be `undefined`. E.g., for customOperation return types.\n * @param modelRecord The individual \"model instance record\" to normalize.\n */\nexport const flattenItems = (modelIntrospection, modelName, modelRecord) => {\n    if (!modelRecord)\n        return null;\n    const mapped = {};\n    for (const [fieldName, value] of Object.entries(modelRecord)) {\n        const fieldDef = modelName\n            ? modelIntrospection.models[modelName]?.fields[fieldName]\n            : undefined;\n        const dvPair = { fieldDef, value };\n        if (isRelatedModelItemsArrayPair(dvPair)) {\n            mapped[fieldName] = dvPair.value.items.map((itemValue) => flattenItems(modelIntrospection, dvPair.fieldDef.type.model, itemValue));\n        }\n        else if (isRelatedModelProperty(fieldDef)) {\n            mapped[fieldName] = flattenItems(modelIntrospection, fieldDef.type.model, value);\n        }\n        else {\n            mapped[fieldName] = value;\n        }\n    }\n    return mapped;\n};\n/**\n * Determines whether the given field definition and associated result value\n * represent a related model array from a HasMany-type relationship.\n *\n * @param dv Pair of field definition and associated result value\n * @returns\n */\nfunction isRelatedModelItemsArrayPair(dv) {\n    return (typeof dv.fieldDef?.type === 'object' &&\n        'model' in dv.fieldDef.type &&\n        typeof dv.fieldDef.type.model === 'string' &&\n        dv.fieldDef.isArray &&\n        Array.isArray(dv.value?.items));\n}\n/**\n * Determines whether the given field definition represents a relationship\n * to another model.\n *\n * @param fieldDef\n * @returns\n */\nfunction isRelatedModelProperty(fieldDef) {\n    return (typeof fieldDef?.type === 'object' &&\n        'model' in fieldDef.type &&\n        typeof fieldDef.type.model === 'string');\n}\n// TODO: this should accept single result to support CRUD methods; create helper for array/list\nexport function initializeModel(client, modelName, result, modelIntrospection, authMode, authToken, context = false) {\n    const introModel = modelIntrospection.models[modelName];\n    const introModelFields = introModel.fields;\n    const modelFields = Object.entries(introModelFields)\n        .filter(([_, field]) => field?.type?.model !== undefined)\n        .map(([fieldName]) => fieldName);\n    return result.map((record) => {\n        const initializedRelationalFields = {};\n        for (const fieldName of modelFields) {\n            const modelField = introModelFields[fieldName];\n            const modelFieldType = modelField?.type;\n            const relatedModelName = modelFieldType.model;\n            const relatedModel = modelIntrospection.models[relatedModelName];\n            const relatedModelPKFieldName = relatedModel.primaryKeyInfo.primaryKeyFieldName;\n            const relatedModelSKFieldNames = relatedModel.primaryKeyInfo.sortKeyFieldNames;\n            const relationType = modelField.association?.connectionType;\n            let connectionFields = [];\n            if (modelField.association &&\n                'associatedWith' in modelField.association) {\n                connectionFields = modelField.association.associatedWith;\n            }\n            const targetNames = [];\n            if (modelField.association && 'targetNames' in modelField.association) {\n                targetNames.push(...modelField.association.targetNames);\n            }\n            switch (relationType) {\n                case connectionType.BELONGS_TO: {\n                    const sortKeyValues = relatedModelSKFieldNames.reduce(\n                    // TODO(Eslint): is this implementation correct?\n                    // eslint-disable-next-line array-callback-return\n                    (acc, curVal) => {\n                        if (record[curVal]) {\n                            return (acc[curVal] = record[curVal]);\n                        }\n                    }, {});\n                    if (context) {\n                        initializedRelationalFields[fieldName] = (contextSpec, options) => {\n                            if (record[targetNames[0]]) {\n                                return client.models[relatedModelName].get(contextSpec, {\n                                    [relatedModelPKFieldName]: record[targetNames[0]],\n                                    ...sortKeyValues,\n                                }, {\n                                    authMode: options?.authMode || authMode,\n                                    authToken: options?.authToken || authToken,\n                                });\n                            }\n                            return { data: null };\n                        };\n                    }\n                    else {\n                        initializedRelationalFields[fieldName] = (options) => {\n                            if (record[targetNames[0]]) {\n                                return client.models[relatedModelName].get({\n                                    [relatedModelPKFieldName]: record[targetNames[0]],\n                                    ...sortKeyValues,\n                                }, {\n                                    authMode: options?.authMode || authMode,\n                                    authToken: options?.authToken || authToken,\n                                });\n                            }\n                            return { data: null };\n                        };\n                    }\n                    break;\n                }\n                case connectionType.HAS_ONE:\n                case connectionType.HAS_MANY: {\n                    /**\n                     * If the loader is a HAS_ONE, we just need to attempt to grab the first item\n                     * from the result.\n                     */\n                    const mapResult = relationType === connectionType.HAS_ONE\n                        ? (result) => {\n                            return {\n                                data: result?.data.shift() || null,\n                                errors: result.errors,\n                                extensions: result.extensions,\n                            };\n                        }\n                        : (result) => result;\n                    const parentPk = introModel.primaryKeyInfo.primaryKeyFieldName;\n                    const parentSK = introModel.primaryKeyInfo.sortKeyFieldNames;\n                    // M:N check - TODO: refactor\n                    const relatedModelField = relatedModel.fields[connectionFields[0]];\n                    const relatedModelFieldType = relatedModelField.type;\n                    if (relatedModelFieldType.model) {\n                        let relatedTargetNames = [];\n                        if (relatedModelField.association &&\n                            'targetNames' in relatedModelField.association) {\n                            relatedTargetNames = relatedModelField.association?.targetNames;\n                        }\n                        const hasManyFilter = relatedTargetNames.map((field, idx) => {\n                            if (idx === 0) {\n                                return { [field]: { eq: record[parentPk] } };\n                            }\n                            return { [field]: { eq: record[parentSK[idx - 1]] } };\n                        });\n                        if (context) {\n                            initializedRelationalFields[fieldName] = (contextSpec, options) => {\n                                if (record[parentPk]) {\n                                    return client.models[relatedModelName]\n                                        .list(contextSpec, {\n                                        filter: { and: hasManyFilter },\n                                        limit: options?.limit,\n                                        nextToken: options?.nextToken,\n                                        authMode: options?.authMode || authMode,\n                                        authToken: options?.authToken || authToken,\n                                    })\n                                        .then(mapResult);\n                                }\n                                return [];\n                            };\n                        }\n                        else {\n                            initializedRelationalFields[fieldName] = (options) => {\n                                if (record[parentPk]) {\n                                    return client.models[relatedModelName]\n                                        .list({\n                                        filter: { and: hasManyFilter },\n                                        limit: options?.limit,\n                                        nextToken: options?.nextToken,\n                                        authMode: options?.authMode || authMode,\n                                        authToken: options?.authToken || authToken,\n                                    })\n                                        .then(mapResult);\n                                }\n                                return [];\n                            };\n                        }\n                        break;\n                    }\n                    const hasManyFilter = connectionFields.map((field, idx) => {\n                        if (idx === 0) {\n                            return { [field]: { eq: record[parentPk] } };\n                        }\n                        return { [field]: { eq: record[parentSK[idx - 1]] } };\n                    });\n                    if (context) {\n                        initializedRelationalFields[fieldName] = (contextSpec, options) => {\n                            if (record[parentPk]) {\n                                return client.models[relatedModelName]\n                                    .list(contextSpec, {\n                                    filter: { and: hasManyFilter },\n                                    limit: options?.limit,\n                                    nextToken: options?.nextToken,\n                                    authMode: options?.authMode || authMode,\n                                    authToken: options?.authToken || authToken,\n                                })\n                                    .then(mapResult);\n                            }\n                            return [];\n                        };\n                    }\n                    else {\n                        initializedRelationalFields[fieldName] = (options) => {\n                            if (record[parentPk]) {\n                                return client.models[relatedModelName]\n                                    .list({\n                                    filter: { and: hasManyFilter },\n                                    limit: options?.limit,\n                                    nextToken: options?.nextToken,\n                                    authMode: options?.authMode || authMode,\n                                    authToken: options?.authToken || authToken,\n                                })\n                                    .then(mapResult);\n                            }\n                            return [];\n                        };\n                    }\n                    break;\n                }\n                default:\n                    break;\n            }\n        }\n        return { ...record, ...initializedRelationalFields };\n    });\n}\nexport const graphQLOperationsInfo = {\n    CREATE: { operationPrefix: 'create', usePlural: false },\n    READ: { operationPrefix: 'get', usePlural: false },\n    UPDATE: { operationPrefix: 'update', usePlural: false },\n    DELETE: { operationPrefix: 'delete', usePlural: false },\n    LIST: { operationPrefix: 'list', usePlural: true },\n    INDEX_QUERY: { operationPrefix: '', usePlural: false },\n    ONCREATE: { operationPrefix: 'onCreate', usePlural: false },\n    ONUPDATE: { operationPrefix: 'onUpdate', usePlural: false },\n    ONDELETE: { operationPrefix: 'onDelete', usePlural: false },\n    OBSERVE_QUERY: { operationPrefix: 'observeQuery', usePlural: false },\n};\nconst SELECTION_SET_WILDCARD = '*';\nexport const getDefaultSelectionSetForNonModelWithIR = (nonModelDefinition, modelIntrospection) => {\n    const { fields } = nonModelDefinition;\n    const mappedFields = Object.values(fields)\n        .map(({ type, name }) => {\n        if (typeof type.enum === 'string') {\n            return [name, FIELD_IR];\n        }\n        if (typeof type.nonModel === 'string') {\n            return [\n                name,\n                getDefaultSelectionSetForNonModelWithIR(modelIntrospection.nonModels[type.nonModel], modelIntrospection),\n            ];\n        }\n        if (typeof type === 'string') {\n            return [name, FIELD_IR];\n        }\n        return undefined;\n    })\n        .filter((pair) => pair !== undefined);\n    return Object.fromEntries(mappedFields);\n};\nconst getDefaultSelectionSetForModelWithIR = (modelDefinition, modelIntrospection) => {\n    const { fields } = modelDefinition;\n    const mappedFields = Object.values(fields)\n        .map(({ type, name }) => {\n        if (typeof type.enum === 'string' ||\n            typeof type === 'string') {\n            return [name, FIELD_IR];\n        }\n        if (typeof type.nonModel === 'string') {\n            return [\n                name,\n                getDefaultSelectionSetForNonModelWithIR(modelIntrospection.nonModels[type.nonModel], modelIntrospection),\n            ];\n        }\n        return undefined;\n    })\n        .filter((pair) => pair !== undefined);\n    const ownerFields = resolveOwnerFields(modelDefinition).map((field) => [\n        field,\n        FIELD_IR,\n    ]);\n    return Object.fromEntries(mappedFields.concat(ownerFields));\n};\nfunction defaultSelectionSetForModel(modelDefinition) {\n    // fields that are explicitly part of the graphql schema; not\n    // inferred from owner auth rules.\n    const { fields } = modelDefinition;\n    const explicitFields = Object.values(fields)\n        // Default selection set omits model fields\n        .map(({ type, name }) => {\n        if (typeof type === 'string')\n            return name;\n        if (typeof type === 'object') {\n            if (typeof type?.enum === 'string') {\n                return name;\n            }\n            else if (typeof type?.nonModel === 'string') {\n                return `${name}.${SELECTION_SET_WILDCARD}`;\n            }\n        }\n        return undefined;\n    })\n        .filter(Boolean);\n    // fields used for owner auth rules that may or may not also\n    // be explicit on the model.\n    const ownerFields = resolveOwnerFields(modelDefinition);\n    return Array.from(new Set(explicitFields.concat(ownerFields)));\n}\nconst FIELD_IR = '';\n/**\n * Generates nested Custom Selection Set IR from path\n *\n * @param modelDefinitions\n * @param modelName\n * @param selectionSet - array of object paths\n * @example\n * ### Given\n * `selectionSet = ['id', 'comments.post.id']`\n * ### Returns\n * ```ts\n * {\n *   id: '',\n *   comments: {\n *     items: { post: { id: '' } }\n *   }\n * }\n * ```\n */\nexport function customSelectionSetToIR(modelIntrospection, modelName, selectionSet) {\n    const dotNotationToObject = (path, modelOrNonModelName) => {\n        const [fieldName, ...rest] = path.split('.');\n        const nested = rest[0];\n        const modelOrNonModelDefinition = modelIntrospection.models[modelOrNonModelName] ??\n            modelIntrospection.nonModels[modelOrNonModelName];\n        const modelOrNonModelFields = modelOrNonModelDefinition?.fields;\n        const relatedModel = modelOrNonModelFields?.[fieldName]?.type?.model;\n        const relatedModelDefinition = modelIntrospection.models[relatedModel];\n        const relatedNonModel = modelOrNonModelFields?.[fieldName]?.type?.nonModel;\n        const relatedNonModelDefinition = modelIntrospection.nonModels[relatedNonModel];\n        const isModelOrNonModelOrFieldType = relatedModelDefinition\n            ? 'model'\n            : relatedNonModelDefinition\n                ? 'nonModel'\n                : 'field';\n        if (isModelOrNonModelOrFieldType === 'nonModel') {\n            let result = {};\n            if (!nested) {\n                throw Error(`${fieldName} must declare a wildcard (*) or a field of custom type ${relatedNonModel}`);\n            }\n            if (nested === SELECTION_SET_WILDCARD) {\n                result = {\n                    [fieldName]: getDefaultSelectionSetForNonModelWithIR(relatedNonModelDefinition, modelIntrospection),\n                };\n            }\n            else {\n                result = {\n                    [fieldName]: dotNotationToObject(rest.join('.'), relatedNonModel),\n                };\n            }\n            return result;\n        }\n        else if (isModelOrNonModelOrFieldType === 'model') {\n            let result = {};\n            if (!nested) {\n                throw Error(`${fieldName} must declare a wildcard (*) or a field of model ${relatedModel}`);\n            }\n            if (nested === SELECTION_SET_WILDCARD) {\n                const nestedRelatedModelDefinition = modelIntrospection.models[relatedModel];\n                result = {\n                    [fieldName]: getDefaultSelectionSetForModelWithIR(nestedRelatedModelDefinition, modelIntrospection),\n                };\n            }\n            else {\n                result = {\n                    [fieldName]: dotNotationToObject(rest.join('.'), relatedModel),\n                };\n            }\n            if (modelOrNonModelFields[fieldName]?.isArray) {\n                result = {\n                    [fieldName]: {\n                        items: result[fieldName],\n                    },\n                };\n            }\n            return result;\n        }\n        else {\n            const modelField = modelOrNonModelFields?.[fieldName];\n            const nonModelDefinition = modelIntrospection.nonModels[modelOrNonModelName];\n            const nonModelField = nonModelDefinition?.fields?.[fieldName];\n            if (!nonModelDefinition) {\n                const isOwnerField = resolveOwnerFields(modelOrNonModelDefinition).includes(fieldName);\n                if (!modelField && !isOwnerField) {\n                    throw Error(`${fieldName} is not a field of model ${modelOrNonModelName}`);\n                }\n            }\n            else {\n                if (!nonModelField) {\n                    throw Error(`${fieldName} is not a field of custom type ${modelOrNonModelName}`);\n                }\n            }\n            return { [fieldName]: FIELD_IR };\n        }\n    };\n    return selectionSet.reduce((resultObj, path) => deepMergeSelectionSetObjects(dotNotationToObject(path, modelName), resultObj), {});\n}\n/**\n * Stringifies selection set IR\n * * @example\n * ### Given\n * ```ts\n * {\n *   id: '',\n *   comments: {\n *     items: { post: { id: '' } }\n *   }\n * }\n * ```\n * ### Returns\n * `'id comments { items { post { id } } }'`\n */\nexport function selectionSetIRToString(obj) {\n    const res = [];\n    Object.entries(obj).forEach(([fieldName, value]) => {\n        if (value === FIELD_IR) {\n            res.push(fieldName);\n        }\n        else if (typeof value === 'object' && value !== null) {\n            if (value?.items) {\n                res.push(fieldName, '{', 'items', '{', selectionSetIRToString(value.items), '}', '}');\n            }\n            else {\n                res.push(fieldName, '{', selectionSetIRToString(value), '}');\n            }\n        }\n    });\n    return res.join(' ');\n}\n/**\n * Recursively merges selection set objects from `source` onto `target`.\n *\n * `target` will be updated. `source` will be left alone.\n *\n * @param source The object to merge into target.\n * @param target The object to be mutated.\n */\nfunction deepMergeSelectionSetObjects(source, target) {\n    const isObject = (obj) => obj && typeof obj === 'object';\n    for (const key in source) {\n        // This verification avoids 'Prototype Pollution' issue\n        if (!Object.prototype.hasOwnProperty.call(source, key))\n            continue;\n        if (Object.prototype.hasOwnProperty.call(target, key) &&\n            isObject(target[key])) {\n            deepMergeSelectionSetObjects(source[key], target[key]);\n        }\n        else {\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nexport function generateSelectionSet(modelIntrospection, modelName, selectionSet) {\n    const modelDefinition = modelIntrospection.models[modelName];\n    const selSetIr = customSelectionSetToIR(modelIntrospection, modelName, selectionSet ?? defaultSelectionSetForModel(modelDefinition));\n    const selSetString = selectionSetIRToString(selSetIr);\n    return selSetString;\n}\nexport function generateGraphQLDocument(modelIntrospection, modelName, modelOperation, listArgs, indexMeta) {\n    const modelDefinition = modelIntrospection.models[modelName];\n    const { name, pluralName, fields, primaryKeyInfo: { isCustomPrimaryKey, primaryKeyFieldName, sortKeyFieldNames, }, attributes, } = modelDefinition;\n    // Use pascal case of the model name to generate the operations and the arguments.\n    // This is required to be in sync with the resources generated by the GraphQL transformers.\n    const namePascalCase = name.charAt(0).toUpperCase() + name.slice(1);\n    const pluralNamePascalCase = pluralName.charAt(0).toUpperCase() + pluralName.slice(1);\n    const { operationPrefix, usePlural } = graphQLOperationsInfo[modelOperation];\n    const { selectionSet } = listArgs || {};\n    let graphQLFieldName;\n    let indexQueryArgs;\n    if (operationPrefix) {\n        graphQLFieldName = `${operationPrefix}${usePlural ? pluralNamePascalCase : namePascalCase}`;\n    }\n    else if (indexMeta) {\n        const { queryField, pk, sk = [] } = indexMeta;\n        graphQLFieldName = queryField;\n        /**\n         * **a. Single field SK** -> single arg where name is the field name and the type is `Model${gqlFieldType}KeyConditionInput` (nullable)\n         *  Note: string-like data types e.g.,  AWSDateTime, AWSEmail, AWSPhone, etc. should map to String. See `skGraphQlFieldTypeMap` above\n         * @example\n         * ```\n         * sk1: ModelStringKeyConditionInput\n         * ```\n         *\n         * **b. Composite SK** -> single arg where the name is camelCase concatenation of all the field names that comprise the SK\n         *  and the type is `Model${modelName}${keyAttributeName}CompositeKeyConditionInput` (nullable)\n         * @example\n         * ```\n         * sk1Sk2: ModelMyModelMyModelByPkAndSk1AndSk2CompositeKeyConditionInput\n         */\n        let skQueryArgs = {};\n        if (sk.length === 1) {\n            const [skField] = sk;\n            const type = (typeof fields[skField].type === 'string'\n                ? fields[skField].type\n                : 'String');\n            const normalizedType = skGraphQlFieldTypeMap[type];\n            skQueryArgs = {\n                [skField]: `Model${normalizedType}KeyConditionInput`,\n            };\n        }\n        else if (sk.length > 1) {\n            const compositeSkArgName = resolvedSkName(sk);\n            const keyName = attributes?.find((attr) => attr?.properties?.queryField === queryField)?.properties?.name;\n            skQueryArgs = {\n                [compositeSkArgName]: `Model${capitalize(modelName)}${capitalize(keyName)}CompositeKeyConditionInput`,\n            };\n        }\n        indexQueryArgs = {\n            [pk]: `${Object.prototype.hasOwnProperty.call(fields[pk].type, 'enum')\n                ? fields[pk].type.enum // AppSync schema sets enum type as the type of the enum fields that's used as PK\n                : fields[pk].type}!`,\n            ...skQueryArgs,\n        };\n    }\n    else {\n        throw new Error('Error generating GraphQL Document - invalid operation name');\n    }\n    let graphQLOperationType;\n    let graphQLSelectionSet;\n    let graphQLArguments;\n    const selectionSetFields = generateSelectionSet(modelIntrospection, modelName, selectionSet);\n    // default PK args for get and list operations\n    // modified below for CPK\n    const getPkArgs = {\n        [primaryKeyFieldName]: `${fields[primaryKeyFieldName].type}!`,\n    };\n    const listPkArgs = {};\n    /**\n     * Generate query field args for the SK if it's defined\n     *\n     * **1. Get queries** require each SK field to be present as a separate arg where the type is the field's GraphQL scalar type (non-nullable)\n     * @example\n     * ```\n     * sk1: String!, sk2: Int!\n     * ```\n     *\n     * **2. List queries**\n     *\n     * **a. Single field SK** -> single arg where name is the field name and the type is `Model${gqlFieldType}KeyConditionInput` (nullable)\n     *      Note: string-like data types e.g.,  AWSDateTime, AWSEmail, AWSPhone, etc. should map to String. See `skGraphQlFieldTypeMap` above\n     * @example\n     * ```\n     * sk1: ModelStringKeyConditionInput\n     * ```\n     *\n     * **b. Composite SK** -> single arg where the name is camelCase concatenation of all the field names that comprise the SK\n     *  and the type is `Model${modelName}PrimaryCompositeKeyConditionInput` (nullable)\n     * @example\n     * ```\n     * sk1Sk2: ModelMyModelPrimaryCompositeKeyConditionInput\n     * ```\n     */\n    const generateSkArgs = (op) => {\n        if (sortKeyFieldNames.length === 0)\n            return {};\n        if (op === 'get') {\n            return sortKeyFieldNames.reduce((acc, fieldName) => {\n                const fieldType = fields[fieldName].type;\n                if (op === 'get') {\n                    acc[fieldName] = `${fieldType}!`; // ! - SK args are non-nullable in Get queries\n                }\n                return acc;\n            }, {});\n        }\n        else {\n            // list SK\n            if (sortKeyFieldNames.length === 1) {\n                // Single SK\n                const [sk] = sortKeyFieldNames;\n                const type = (typeof fields[sk].type === 'string' ? fields[sk].type : 'String');\n                const normalizedType = skGraphQlFieldTypeMap[type];\n                return {\n                    [sk]: `Model${normalizedType}KeyConditionInput`,\n                };\n            }\n            else {\n                // Composite SK\n                const compositeSkArgName = resolvedSkName(sortKeyFieldNames);\n                return {\n                    [compositeSkArgName]: `Model${capitalize(modelName)}PrimaryCompositeKeyConditionInput`,\n                };\n            }\n        }\n    };\n    if (isCustomPrimaryKey) {\n        Object.assign(getPkArgs, generateSkArgs('get'));\n        Object.assign(listPkArgs, {\n            // PK is only included in list query field args in the generated GQL\n            // when explicitly specifying PK with .identifier(['fieldName']) or @primaryKey in the schema definition\n            [primaryKeyFieldName]: `${fields[primaryKeyFieldName].type}`, // PK is always a nullable arg for list (no `!` after the type)\n            sortDirection: 'ModelSortDirection',\n        }, generateSkArgs('list'));\n    }\n    switch (modelOperation) {\n        case 'CREATE':\n        case 'UPDATE':\n        case 'DELETE':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    input: `${operationPrefix.charAt(0).toLocaleUpperCase() +\n                        operationPrefix.slice(1)}${namePascalCase}Input!`,\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'mutation');\n        // TODO(Eslint): this this case clause correct without the break statement?\n        // eslint-disable-next-line no-fallthrough\n        case 'READ':\n            graphQLArguments ?? (graphQLArguments = getPkArgs);\n            graphQLSelectionSet ?? (graphQLSelectionSet = selectionSetFields);\n        // TODO(Eslint): this this case clause correct without the break statement?\n        // eslint-disable-next-line no-fallthrough\n        case 'LIST':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    ...listPkArgs,\n                    // eslint doesn't like the ts-ignore, because it thinks it's unnecessary.\n                    // But TS doesn't like the `filter: ...` because it think it will always be\n                    // overwritten. (it won't be.) so, we need to ignore the TS error and then\n                    // ignore the eslint error on the ts-ignore.\n                    // eslint-disable-next-line\n                    // @ts-ignore\n                    filter: `Model${namePascalCase}FilterInput`,\n                    limit: 'Int',\n                    nextToken: 'String',\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'query');\n            graphQLSelectionSet ??\n                (graphQLSelectionSet = `items { ${selectionSetFields} } nextToken __typename`);\n        // TODO(Eslint): this this case clause correct without the break statement?\n        // eslint-disable-next-line no-fallthrough\n        case 'INDEX_QUERY':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    ...indexQueryArgs,\n                    filter: `Model${namePascalCase}FilterInput`,\n                    sortDirection: 'ModelSortDirection',\n                    limit: 'Int',\n                    nextToken: 'String',\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'query');\n            graphQLSelectionSet ??\n                (graphQLSelectionSet = `items { ${selectionSetFields} } nextToken __typename`);\n        // TODO(Eslint): this this case clause correct without the break statement?\n        // eslint-disable-next-line no-fallthrough\n        case 'ONCREATE':\n        case 'ONUPDATE':\n        case 'ONDELETE':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    filter: `ModelSubscription${namePascalCase}FilterInput`,\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'subscription');\n            graphQLSelectionSet ?? (graphQLSelectionSet = selectionSetFields);\n            break;\n        case 'OBSERVE_QUERY':\n        default:\n            throw new Error('Internal error: Attempted to generate graphql document for observeQuery. Please report this error.');\n    }\n    const graphQLDocument = `${graphQLOperationType}${graphQLArguments\n        ? `(${Object.entries(graphQLArguments).map(([fieldName, type]) => `$${fieldName}: ${type}`)})`\n        : ''} { ${graphQLFieldName}${graphQLArguments\n        ? `(${Object.keys(graphQLArguments).map((fieldName) => `${fieldName}: $${fieldName}`)})`\n        : ''} { ${graphQLSelectionSet} } }`;\n    return graphQLDocument;\n}\nexport function buildGraphQLVariables(modelDefinition, operation, arg, modelIntrospection, indexMeta) {\n    const { fields, primaryKeyInfo: { isCustomPrimaryKey, primaryKeyFieldName, sortKeyFieldNames, }, } = modelDefinition;\n    const skName = sortKeyFieldNames?.length && resolvedSkName(sortKeyFieldNames);\n    let variables = {};\n    // TODO: process input\n    switch (operation) {\n        case 'CREATE':\n            variables = {\n                input: arg\n                    ? normalizeMutationInput(arg, modelDefinition, modelIntrospection)\n                    : {},\n            };\n            break;\n        case 'UPDATE':\n            // readonly fields are not  updated\n            variables = {\n                input: arg\n                    ? Object.fromEntries(Object.entries(normalizeMutationInput(arg, modelDefinition, modelIntrospection)).filter(([fieldName]) => {\n                        const { isReadOnly } = fields[fieldName];\n                        return !isReadOnly;\n                    }))\n                    : {},\n            };\n            break;\n        case 'READ':\n        case 'DELETE':\n            // only identifiers are sent\n            if (arg) {\n                variables = isCustomPrimaryKey\n                    ? [primaryKeyFieldName, ...sortKeyFieldNames].reduce((acc, fieldName) => {\n                        acc[fieldName] = arg[fieldName];\n                        return acc;\n                    }, {})\n                    : { [primaryKeyFieldName]: arg[primaryKeyFieldName] };\n            }\n            if (operation === 'DELETE') {\n                variables = { input: variables };\n            }\n            break;\n        case 'LIST':\n            if (arg?.filter) {\n                variables.filter = arg.filter;\n            }\n            if (arg?.sortDirection) {\n                variables.sortDirection = arg.sortDirection;\n            }\n            if (arg && arg[primaryKeyFieldName]) {\n                variables[primaryKeyFieldName] = arg[primaryKeyFieldName];\n            }\n            if (skName && arg && arg[skName]) {\n                variables[skName] = arg[skName];\n            }\n            if (arg?.nextToken) {\n                variables.nextToken = arg.nextToken;\n            }\n            if (arg?.limit) {\n                variables.limit = arg.limit;\n            }\n            break;\n        case 'INDEX_QUERY': {\n            const { pk, sk = [] } = indexMeta;\n            const indexQuerySkName = sk?.length && resolvedSkName(sk);\n            variables[pk] = arg[pk];\n            if (indexQuerySkName && arg && arg[indexQuerySkName]) {\n                variables[indexQuerySkName] = arg[indexQuerySkName];\n            }\n            if (arg?.filter) {\n                variables.filter = arg.filter;\n            }\n            if (arg?.sortDirection) {\n                variables.sortDirection = arg.sortDirection;\n            }\n            if (arg?.nextToken) {\n                variables.nextToken = arg.nextToken;\n            }\n            if (arg?.limit) {\n                variables.limit = arg.limit;\n            }\n            break;\n        }\n        case 'ONCREATE':\n        case 'ONUPDATE':\n        case 'ONDELETE':\n            if (arg?.filter) {\n                variables = { filter: arg.filter };\n            }\n            break;\n        case 'OBSERVE_QUERY':\n            throw new Error('Internal error: Attempted to build variables for observeQuery. Please report this error.');\n            break;\n        default: {\n            const exhaustiveCheck = operation;\n            throw new Error(`Unhandled operation case: ${exhaustiveCheck}`);\n        }\n    }\n    return variables;\n}\n/**\n * Iterates over mutation input values and resolves any model inputs to their corresponding join fields/values\n *\n * @example\n * ### Usage\n * ```ts\n * const result = normalizeMutationInput({ post: post }, model, modelDefinition);\n * ```\n * ### Result\n * ```ts\n * { postId: \"abc123\" }\n * ```\n *\n */\nexport function normalizeMutationInput(mutationInput, model, modelIntrospection) {\n    const { fields } = model;\n    const normalized = {};\n    Object.entries(mutationInput).forEach(([inputFieldName, inputValue]) => {\n        const fieldType = fields[inputFieldName]?.type;\n        const relatedModelName = fieldType?.model;\n        if (relatedModelName) {\n            const association = fields[inputFieldName]?.association;\n            const relatedModelDef = modelIntrospection.models[relatedModelName];\n            const relatedModelPkInfo = relatedModelDef.primaryKeyInfo;\n            if (association?.connectionType === connectionType.HAS_ONE) {\n                const associationHasOne = association;\n                associationHasOne.targetNames.forEach((targetName, idx) => {\n                    const associatedFieldName = associationHasOne.associatedWith[idx];\n                    normalized[targetName] = inputValue[associatedFieldName];\n                });\n            }\n            if (association?.connectionType === connectionType.BELONGS_TO) {\n                const associationBelongsTo = association;\n                associationBelongsTo.targetNames.forEach((targetName, idx) => {\n                    if (idx === 0) {\n                        const associatedFieldName = relatedModelPkInfo.primaryKeyFieldName;\n                        normalized[targetName] = inputValue[associatedFieldName];\n                    }\n                    else {\n                        const associatedFieldName = relatedModelPkInfo.sortKeyFieldNames[idx - 1];\n                        normalized[targetName] = inputValue[associatedFieldName];\n                    }\n                });\n            }\n        }\n        else {\n            normalized[inputFieldName] = inputValue;\n        }\n    });\n    return normalized;\n}\n/**\n * Produces a parameter object that can contains auth mode/token overrides\n * only if present in either `options` (first) or configured on the `client`\n * as a fallback.\n *\n * @param client Configured client from `generateClient`\n * @param options Args/Options object from call site.\n * @returns\n */\nexport function authModeParams(client, getInternals, options = {}) {\n    const internals = getInternals(client);\n    return {\n        authMode: options.authMode || internals.authMode,\n        authToken: options.authToken || internals.authToken,\n    };\n}\n/**\n * Retrieves custom headers from either the client or request options.\n * @param client V6Client | V6ClientSSRRequest | V6ClientSSRCookies - for extracting client headers\n * @param requestHeaders {@link CustomHeaders} - request headers\n * @returns custom headers as {@link CustomHeaders}\n */\nexport function getCustomHeaders(client, getInternals, requestHeaders) {\n    let headers = getInternals(client).headers || {};\n    // Individual request headers will take precedence over client headers.\n    // We intentionally do *not* merge client and request headers.\n    if (requestHeaders) {\n        headers = requestHeaders;\n    }\n    return headers;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// import { GraphQLFormattedError } from '@aws-amplify/data-schema-types';\n/**\n * Handle errors for list return types (list and index query operations)\n */\nexport function handleListGraphQlError(error) {\n    if (error?.errors) {\n        // graphql errors pass through\n        return {\n            ...error,\n            data: [],\n        };\n    }\n    else {\n        // non-graphql errors are re-thrown\n        throw error;\n    }\n}\n/**\n * Handle errors for singular return types (create, get, update, delete operations)\n */\nexport function handleSingularGraphQlError(error) {\n    if (error.errors) {\n        // graphql errors pass through\n        return {\n            ...error,\n            data: null,\n        };\n    }\n    else {\n        // non-graphql errors are re-thrown\n        throw error;\n    }\n}\n", "import { map } from 'rxjs';\nimport { authModeParams, getDefaultSelectionSetForNonModelWithIR, generateSelectionSet, getCustomHeaders, initializeModel, selectionSetIRToString, } from '../APIClient';\nimport { handleSingularGraphQlError } from './utils';\n/**\n * Type guard for checking whether a Custom Operation argument is a contextSpec object\n */\nconst argIsContextSpec = (arg) => {\n    return typeof arg?.token?.value === 'symbol';\n};\n/**\n * Builds an operation function, embedded with all client and context data, that\n * can be attached to a client as a custom query or mutation.\n *\n * If we have this source schema:\n *\n * ```typescript\n * a.schema({\n *   echo: a.query()\n *     .arguments({input: a.string().required()})\n *     .returns(a.string())\n * })\n * ```\n *\n * Our model intro schema will contain an entry like this:\n *\n * ```ts\n * {\n *   queries: {\n *     echo: {\n *       name: \"echo\",\n *       isArray: false,\n *       type: 'String',\n *       isRequired: false,\n *       arguments: {\n *         input: {\n *           name: 'input',\n *           isArray: false,\n *           type: String,\n *           isRequired: true\n *         }\n *       }\n *     }\n *   }\n * }\n * ```\n *\n * The `echo` object is used to build the `echo' method that goes here:\n *\n * ```typescript\n * const client = generateClent()\n * const { data } = await client.queries.echo({input: 'a string'});\n * //                                    ^\n * //                                    |\n * //                                    +-- This one right here.\n * //\n * ```\n *\n *\n * @param client The client to run graphql queries through.\n * @param modelIntrospection The model introspection schema the op comes from.\n * @param operationType The broad category of graphql operation.\n * @param operation The operation definition from the introspection schema.\n * @param useContext Whether the function needs to accept an SSR context.\n * @returns The operation function to attach to query, mutations, etc.\n */\nexport function customOpFactory(client, modelIntrospection, operationType, operation, useContext, getInternals) {\n    // .arguments() are defined for the custom operation in the schema builder\n    // and are present in the model introspection schema\n    const argsDefined = operation.arguments !== undefined;\n    const op = (...args) => {\n        // options is always the last argument\n        const options = args[args.length - 1];\n        let contextSpec;\n        let arg;\n        if (useContext) {\n            if (argIsContextSpec(args[0])) {\n                contextSpec = args[0];\n            }\n            else {\n                throw new Error(`Invalid first argument passed to ${operation.name}. Expected contextSpec`);\n            }\n        }\n        if (argsDefined) {\n            if (useContext) {\n                arg = args[1];\n            }\n            else {\n                arg = args[0];\n            }\n        }\n        if (operationType === 'subscription') {\n            return _opSubscription(\n            // subscriptions are only enabled on the clientside\n            client, modelIntrospection, operation, getInternals, arg, options);\n        }\n        return _op(client, modelIntrospection, operationType, operation, getInternals, arg, options, contextSpec);\n    };\n    return op;\n}\n/**\n * Runtime test and type guard to check whether `o[field]` is a `String`.\n *\n * ```typescript\n * if (hasStringField(o, 'prop')) {\n *   const s = o.prop;\n *   //    ^? const s: string\n * }\n * ```\n *\n * @param o Object to inspect\n * @param field Field to look for\n * @returns Boolean: `true` if the `o[field]` is a `string`\n */\nfunction hasStringField(o, field) {\n    return typeof o[field] === 'string';\n}\n/**\n * @param argDef A single argument definition from a custom operation\n * @returns A string naming the base type including the `!` if the arg is required.\n */\nfunction argumentBaseTypeString(argDef) {\n    const requiredFlag = argDef.isRequired ? '!' : '';\n    if (argDef.type instanceof Object && 'enum' in argDef.type) {\n        return argDef.type.enum + requiredFlag;\n    }\n    else {\n        return argDef.type + requiredFlag;\n    }\n}\n/**\n * Generates \"outer\" arguments string for a custom operation. For example,\n * in this operation:\n *\n * ```graphql\n * query MyQuery(InputString: String!) {\n *   echoString(InputString: $InputString)\n * }\n * ```\n *\n * This function returns the top/outer level arguments as a string:\n *\n * ```json\n * \"InputString: String!\"\n * ```\n *\n * @param operation Operation object from model introspection schema.\n * @returns \"outer\" arguments string\n */\nfunction outerArguments(operation) {\n    if (operation.arguments === undefined) {\n        return '';\n    }\n    const args = Object.entries(operation.arguments)\n        .map(([k, v]) => {\n        const baseType = argumentBaseTypeString(v);\n        const finalType = v.isArray\n            ? `[${baseType}]${v.isArrayNullable ? '' : '!'}`\n            : baseType;\n        return `$${k}: ${finalType}`;\n    })\n        .join(', ');\n    return args.length > 0 ? `(${args})` : '';\n}\n/**\n * Generates \"inner\" arguments string for a custom operation. For example,\n * in this operation:\n *\n * ```graphql\n * query MyQuery(InputString: String!) {\n *   echoString(InputString: $InputString)\n * }\n * ```\n *\n * This function returns the inner arguments as a string:\n *\n * ```json\n * \"InputString: $InputString\"\n * ```\n *\n * @param operation Operation object from model introspection schema.\n * @returns \"outer\" arguments string\n */\nfunction innerArguments(operation) {\n    if (operation.arguments === undefined) {\n        return '';\n    }\n    const args = Object.keys(operation.arguments)\n        .map((k) => `${k}: $${k}`)\n        .join(', ');\n    return args.length > 0 ? `(${args})` : '';\n}\n/**\n * Generates the selection set string for a custom operation. This is slightly\n * different than the selection set generation for models. If the custom op returns\n * a primitive or enum types, it doesn't require a selection set at all.\n *\n * E.g., the graphql might look like this:\n *\n * ```graphql\n * query MyQuery {\n *   echoString(inputString: \"whatever\")\n * }\n * #                                     ^\n * #                                     |\n * #                                     +-- no selection set\n * ```\n *\n * Non-primitive return type selection set generation will be similar to other\n * model operations.\n *\n * @param modelIntrospection The full code-generated introspection schema.\n * @param operation The operation object from the schema.\n * @returns The selection set as a string.\n */\nfunction operationSelectionSet(modelIntrospection, operation) {\n    if (hasStringField(operation, 'type') ||\n        hasStringField(operation.type, 'enum')) {\n        return '';\n    }\n    else if (hasStringField(operation.type, 'nonModel')) {\n        const nonModel = modelIntrospection.nonModels[operation.type.nonModel];\n        return `{${selectionSetIRToString(getDefaultSelectionSetForNonModelWithIR(nonModel, modelIntrospection))}}`;\n    }\n    else if (hasStringField(operation.type, 'model')) {\n        return `{${generateSelectionSet(modelIntrospection, operation.type.model)}}`;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Maps an arguments objec to graphql variables, removing superfluous args and\n * screaming loudly when required args are missing.\n *\n * @param operation The operation to construct graphql request variables for.\n * @param args The arguments to map variables from.\n * @returns The graphql variables object.\n */\nfunction operationVariables(operation, args = {}) {\n    const variables = {};\n    if (operation.arguments === undefined) {\n        return variables;\n    }\n    for (const argDef of Object.values(operation.arguments)) {\n        if (typeof args[argDef.name] !== 'undefined') {\n            variables[argDef.name] = args[argDef.name];\n        }\n        else if (argDef.isRequired) {\n            // At this point, the variable is both required and missing: We don't need\n            // to continue. The operation is expected to fail.\n            throw new Error(`${operation.name} requires arguments '${argDef.name}'`);\n        }\n    }\n    return variables;\n}\n/**\n * Executes an operation from the given model intro schema against a client, returning\n * a fully instantiated model when relevant.\n *\n * @param client The client to operate `graphql()` calls through.\n * @param modelIntrospection The model intro schema to construct requests from.\n * @param operationType The high level graphql operation type.\n * @param operation The specific operation name, args, return type details.\n * @param args The arguments to provide to the operation as variables.\n * @param options Request options like headers, etc.\n * @param context SSR context if relevant.\n * @returns Result from the graphql request, model-instantiated when relevant.\n */\nasync function _op(client, modelIntrospection, operationType, operation, getInternals, args, options, context) {\n    const { name: operationName } = operation;\n    const auth = authModeParams(client, getInternals, options);\n    const headers = getCustomHeaders(client, getInternals, options?.headers);\n    const outerArgsString = outerArguments(operation);\n    const innerArgsString = innerArguments(operation);\n    const selectionSet = operationSelectionSet(modelIntrospection, operation);\n    const returnTypeModelName = hasStringField(operation.type, 'model')\n        ? operation.type.model\n        : undefined;\n    const query = `\n    ${operationType.toLocaleLowerCase()}${outerArgsString} {\n      ${operationName}${innerArgsString} ${selectionSet}\n    }\n  `;\n    const variables = operationVariables(operation, args);\n    try {\n        const { data, extensions } = context\n            ? (await client.graphql(context, {\n                ...auth,\n                query,\n                variables,\n            }, headers))\n            : (await client.graphql({\n                ...auth,\n                query,\n                variables,\n            }, headers));\n        // flatten response\n        if (data) {\n            const [key] = Object.keys(data);\n            const isArrayResult = Array.isArray(data[key]);\n            // TODO: when adding support for custom selection set, flattening will need\n            // to occur recursively. For now, it's expected that related models are not\n            // present in the result. Only FK's are present. Any related model properties\n            // should be replaced with lazy loaders under the current implementation.\n            const flattenedResult = isArrayResult\n                ? data[key].filter((x) => x)\n                : data[key];\n            // TODO: custom selection set. current selection set is default selection set only\n            // custom selection set requires data-schema-type + runtime updates above.\n            const initialized = returnTypeModelName\n                ? initializeModel(client, returnTypeModelName, isArrayResult ? flattenedResult : [flattenedResult], modelIntrospection, auth.authMode, auth.authToken, !!context)\n                : flattenedResult;\n            return {\n                data: !isArrayResult && Array.isArray(initialized)\n                    ? initialized.shift()\n                    : initialized,\n                extensions,\n            };\n        }\n        else {\n            return { data: null, extensions };\n        }\n    }\n    catch (error) {\n        /**\n         * The `data` type returned by `error` here could be:\n         * 1) `null`\n         * 2) an empty object\n         * 3) \"populated\" but with a `null` value `{ getPost: null }`\n         * 4) an actual record `{ getPost: { id: '1', title: 'Hello, World!' } }`\n         */\n        const { data, errors } = error;\n        /**\n         * `data` is not `null`, and is not an empty object:\n         */\n        if (data && Object.keys(data).length !== 0 && errors) {\n            const [key] = Object.keys(data);\n            const isArrayResult = Array.isArray(data[key]);\n            // TODO: when adding support for custom selection set, flattening will need\n            // to occur recursively. For now, it's expected that related models are not\n            // present in the result. Only FK's are present. Any related model properties\n            // should be replaced with lazy loaders under the current implementation.\n            const flattenedResult = isArrayResult\n                ? data[key].filter((x) => x)\n                : data[key];\n            /**\n             * `flattenedResult` could be `null` here (e.g. `data: { getPost: null }`)\n             * if `flattenedResult`, result is an actual record:\n             */\n            if (flattenedResult) {\n                // TODO: custom selection set. current selection set is default selection set only\n                // custom selection set requires data-schema-type + runtime updates above.\n                const initialized = returnTypeModelName\n                    ? initializeModel(client, returnTypeModelName, isArrayResult ? flattenedResult : [flattenedResult], modelIntrospection, auth.authMode, auth.authToken, !!context)\n                    : flattenedResult;\n                return {\n                    data: !isArrayResult && Array.isArray(initialized)\n                        ? initialized.shift()\n                        : initialized,\n                    errors,\n                };\n            }\n            else {\n                // was `data: { getPost: null }`)\n                return handleSingularGraphQlError(error);\n            }\n        }\n        else {\n            // `data` is `null`:\n            return handleSingularGraphQlError(error);\n        }\n    }\n}\n/**\n * Executes an operation from the given model intro schema against a client, returning\n * a fully instantiated model when relevant.\n *\n * @param client The client to operate `graphql()` calls through.\n * @param modelIntrospection The model intro schema to construct requests from.\n * @param operation The specific operation name, args, return type details.\n * @param args The arguments to provide to the operation as variables.\n * @param options Request options like headers, etc.\n * @returns Result from the graphql request, model-instantiated when relevant.\n */\nfunction _opSubscription(client, modelIntrospection, operation, getInternals, args, options) {\n    const operationType = 'subscription';\n    const { name: operationName } = operation;\n    const auth = authModeParams(client, getInternals, options);\n    const headers = getCustomHeaders(client, getInternals, options?.headers);\n    const outerArgsString = outerArguments(operation);\n    const innerArgsString = innerArguments(operation);\n    const selectionSet = operationSelectionSet(modelIntrospection, operation);\n    const returnTypeModelName = hasStringField(operation.type, 'model')\n        ? operation.type.model\n        : undefined;\n    const query = `\n    ${operationType.toLocaleLowerCase()}${outerArgsString} {\n      ${operationName}${innerArgsString} ${selectionSet}\n    }\n  `;\n    const variables = operationVariables(operation, args);\n    const observable = client.graphql({\n        ...auth,\n        query,\n        variables,\n    }, headers);\n    return observable.pipe(map((value) => {\n        const [key] = Object.keys(value.data);\n        const data = value.data[key];\n        const [initialized] = returnTypeModelName\n            ? initializeModel(client, returnTypeModelName, [data], modelIntrospection, auth.authMode, auth.authToken)\n            : [data];\n        return initialized;\n    }));\n}\n", "import { customOpFactory } from './operations/custom';\nconst operationTypeMap = {\n    queries: 'query',\n    mutations: 'mutation',\n    subscriptions: 'subscription',\n};\nexport function generateCustomOperationsProperty(client, config, operationsType, getInternals) {\n    // some bundlers end up with `Amplify.configure` being called *after* generate client.\n    // if that occurs, we need to *not error* while we wait. handling for late configuration\n    // occurs in `generateClient()`. we do not need to subscribe to Hub events here.\n    if (!config) {\n        return {};\n    }\n    const modelIntrospection = config.modelIntrospection;\n    // model intro schema might be absent if there's not actually a configured GraphQL API\n    if (!modelIntrospection) {\n        return {};\n    }\n    // custom operations will be absent from model intro schema if no custom ops\n    // are present on the source schema.\n    const operations = modelIntrospection[operationsType];\n    if (!operations) {\n        return {};\n    }\n    const ops = {};\n    const useContext = getInternals(client).amplify === null;\n    for (const operation of Object.values(operations)) {\n        ops[operation.name] = customOpFactory(client, modelIntrospection, operationTypeMap[operationsType], operation, useContext, getInternals);\n    }\n    return ops;\n}\nexport function generateCustomMutationsProperty(client, config, getInternals) {\n    return generateCustomOperationsProperty(client, config, 'mutations', getInternals);\n}\nexport function generateCustomQueriesProperty(client, config, getInternals) {\n    return generateCustomOperationsProperty(client, config, 'queries', getInternals);\n}\nexport function generateCustomSubscriptionsProperty(client, config, getInternals) {\n    return generateCustomOperationsProperty(client, config, 'subscriptions', getInternals);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const generateEnumsProperty = (graphqlConfig) => {\n    const modelIntrospection = graphqlConfig.modelIntrospection;\n    if (!modelIntrospection) {\n        return {};\n    }\n    const enums = {};\n    for (const [_, enumData] of Object.entries(modelIntrospection.enums)) {\n        enums[enumData.name] = {\n            values: () => enumData.values,\n        };\n    }\n    return enums;\n};\n", "import { authModeParams, buildGraphQLVariables, flattenItems, generateGraphQLDocument, getCustomHeaders, initializeModel, } from '../APIClient';\nimport { handleListGraphQlError } from './utils';\nexport function listFactory(client, modelIntrospection, model, getInternals, context = false) {\n    const listWithContext = async (contextSpec, args) => {\n        return _list(client, modelIntrospection, model, getInternals, args, contextSpec);\n    };\n    const list = async (args) => {\n        return _list(client, modelIntrospection, model, getInternals, args);\n    };\n    return context ? listWithContext : list;\n}\nasync function _list(client, modelIntrospection, model, getInternals, args, contextSpec) {\n    const { name } = model;\n    const query = generateGraphQLDocument(modelIntrospection, name, 'LIST', args);\n    const variables = buildGraphQLVariables(model, 'LIST', args, modelIntrospection);\n    const auth = authModeParams(client, getInternals, args);\n    try {\n        const headers = getCustomHeaders(client, getInternals, args?.headers);\n        const { data, extensions } = contextSpec\n            ? (await client.graphql(contextSpec, {\n                ...auth,\n                query,\n                variables,\n            }, headers))\n            : (await client.graphql({\n                ...auth,\n                query,\n                variables,\n            }, headers));\n        // flatten response\n        if (data !== undefined) {\n            const [key] = Object.keys(data);\n            if (data[key].items) {\n                const flattenedResult = data[key].items.map((value) => flattenItems(modelIntrospection, name, value));\n                // don't init if custom selection set\n                if (args?.selectionSet) {\n                    return {\n                        data: flattenedResult,\n                        nextToken: data[key].nextToken,\n                        extensions,\n                    };\n                }\n                else {\n                    const initialized = initializeModel(client, name, flattenedResult, modelIntrospection, auth.authMode, auth.authToken, !!contextSpec);\n                    return {\n                        data: initialized,\n                        nextToken: data[key].nextToken,\n                        extensions,\n                    };\n                }\n            }\n            return {\n                data: data[key],\n                nextToken: data[key].nextToken,\n                extensions,\n            };\n        }\n    }\n    catch (error) {\n        /**\n         * The `data` type returned by `error` here could be:\n         * 1) `null`\n         * 2) an empty object\n         * 3) \"populated\" but with a `null` value `data: { listPosts: null }`\n         * 4) actual records `data: { listPosts: items: [{ id: '1', ...etc }] }`\n         */\n        const { data, errors } = error;\n        // `data` is not `null`, and is not an empty object:\n        if (data !== undefined &&\n            data !== null &&\n            Object.keys(data).length !== 0 &&\n            errors) {\n            const [key] = Object.keys(data);\n            if (data[key]?.items) {\n                const flattenedResult = data[key].items.map((value) => flattenItems(modelIntrospection, name, value));\n                /**\n                 * Check exists since `flattenedResult` could be `null`.\n                 * if `flattenedResult` exists, result is an actual record.\n                 */\n                if (flattenedResult) {\n                    // don't init if custom selection set\n                    if (args?.selectionSet) {\n                        return {\n                            data: flattenedResult,\n                            nextToken: data[key]?.nextToken,\n                            errors,\n                        };\n                    }\n                    else {\n                        const initialized = initializeModel(client, name, flattenedResult, modelIntrospection, auth.authMode, auth.authToken, !!contextSpec);\n                        // data is full record w/out selection set:\n                        return {\n                            data: initialized,\n                            nextToken: data[key]?.nextToken,\n                            errors,\n                        };\n                    }\n                }\n                return {\n                    data: data[key],\n                    nextToken: data[key]?.nextToken,\n                    errors,\n                };\n            }\n            else {\n                // response is of type `data: { getPost: null }`)\n                return handleListGraphQlError(error);\n            }\n        }\n        else {\n            // `data` is `null` or an empty object:\n            return handleListGraphQlError(error);\n        }\n    }\n}\n", "import { authModeParams, buildGraphQLVariables, flattenItems, generateGraphQLDocument, getCustomHeaders, initializeModel, } from '../APIClient';\nimport { handleListGraphQlError } from './utils';\nexport function indexQueryFactory(client, modelIntrospection, model, indexMeta, getInternals, context = false) {\n    const indexQueryWithContext = async (contextSpec, args, options) => {\n        return _indexQuery(client, modelIntrospection, model, indexMeta, getInternals, {\n            ...args,\n            ...options,\n        }, contextSpec);\n    };\n    const indexQuery = async (args, options) => {\n        return _indexQuery(client, modelIntrospection, model, indexMeta, getInternals, {\n            ...args,\n            ...options,\n        });\n    };\n    return context ? indexQueryWithContext : indexQuery;\n}\nfunction processGraphQlResponse(modelIntroSchema, modelName, result, selectionSet, modelInitializer) {\n    const { data, extensions } = result;\n    const [key] = Object.keys(data);\n    if (data[key].items) {\n        const flattenedResult = data[key].items.map((value) => flattenItems(modelIntroSchema, modelName, value));\n        return {\n            data: selectionSet ? flattenedResult : modelInitializer(flattenedResult),\n            nextToken: data[key].nextToken,\n            extensions,\n        };\n    }\n    // Index queries are always list queries. No `items`? No flattening needed.\n    return {\n        data: data[key],\n        nextToken: data[key].nextToken,\n        extensions,\n    };\n}\nasync function _indexQuery(client, modelIntrospection, model, indexMeta, getInternals, args, contextSpec) {\n    const { name } = model;\n    const query = generateGraphQLDocument(modelIntrospection, name, 'INDEX_QUERY', args, indexMeta);\n    const variables = buildGraphQLVariables(model, 'INDEX_QUERY', args, modelIntrospection, indexMeta);\n    const auth = authModeParams(client, getInternals, args);\n    const modelInitializer = (flattenedResult) => initializeModel(client, name, flattenedResult, modelIntrospection, auth.authMode, auth.authToken, !!contextSpec);\n    try {\n        const headers = getCustomHeaders(client, getInternals, args?.headers);\n        const graphQlParams = {\n            ...auth,\n            query,\n            variables,\n        };\n        const requestArgs = [graphQlParams, headers];\n        if (contextSpec !== undefined) {\n            requestArgs.unshift(contextSpec);\n        }\n        const response = (await client.graphql(...requestArgs));\n        if (response.data !== undefined) {\n            return processGraphQlResponse(modelIntrospection, name, response, args?.selectionSet, modelInitializer);\n        }\n    }\n    catch (error) {\n        /**\n         * The `data` type returned by `error` here could be:\n         * 1) `null`\n         * 2) an empty object\n         * 3) \"populated\" but with a `null` value:\n         *   `data: { listByExampleId: null }`\n         * 4) an actual record:\n         *   `data: { listByExampleId: items: [{ id: '1', ...etc } }]`\n         */\n        const { data, errors } = error;\n        // `data` is not `null`, and is not an empty object:\n        if (data !== undefined && Object.keys(data).length !== 0 && errors) {\n            const [key] = Object.keys(data);\n            if (data[key]?.items) {\n                const flattenedResult = data[key]?.items.map((value) => flattenItems(modelIntrospection, name, value));\n                /**\n                 * Check exists since `flattenedResult` could be `null`.\n                 * if `flattenedResult` exists, result is an actual record.\n                 */\n                if (flattenedResult) {\n                    return {\n                        data: args?.selectionSet\n                            ? flattenedResult\n                            : modelInitializer(flattenedResult),\n                        nextToken: data[key]?.nextToken,\n                    };\n                }\n            }\n            // response is of type `data: { listByExampleId: null }`\n            return {\n                data: data[key],\n                nextToken: data[key]?.nextToken,\n            };\n        }\n        else {\n            // `data` is `null` or an empty object:\n            return handleListGraphQlError(error);\n        }\n    }\n}\n", "import { authModeParams, buildGraphQLVariables, flattenItems, generateGraphQLDocument, getCustomHeaders, initializeModel, } from '../APIClient';\nimport { handleSingularGraphQlError } from './utils';\nexport function getFactory(client, modelIntrospection, model, operation, getInternals, useContext = false) {\n    const getWithContext = async (contextSpec, arg, options) => {\n        return _get(client, modelIntrospection, model, arg, options, operation, getInternals, contextSpec);\n    };\n    const get = async (arg, options) => {\n        return _get(client, modelIntrospection, model, arg, options, operation, getInternals);\n    };\n    return useContext ? getWithContext : get;\n}\nasync function _get(client, modelIntrospection, model, arg, options, operation, getInternals, context) {\n    const { name } = model;\n    const query = generateGraphQLDocument(modelIntrospection, name, operation, options);\n    const variables = buildGraphQLVariables(model, operation, arg, modelIntrospection);\n    const auth = authModeParams(client, getInternals, options);\n    try {\n        const headers = getCustomHeaders(client, getInternals, options?.headers);\n        const { data, extensions } = context\n            ? (await client.graphql(context, {\n                ...auth,\n                query,\n                variables,\n            }, headers))\n            : (await client.graphql({\n                ...auth,\n                query,\n                variables,\n            }, headers));\n        // flatten response\n        if (data) {\n            const [key] = Object.keys(data);\n            const flattenedResult = flattenItems(modelIntrospection, name, data[key]);\n            if (flattenedResult === null) {\n                return { data: null, extensions };\n            }\n            else if (options?.selectionSet) {\n                return { data: flattenedResult, extensions };\n            }\n            else {\n                // TODO: refactor to avoid destructuring here\n                const [initialized] = initializeModel(client, name, [flattenedResult], modelIntrospection, auth.authMode, auth.authToken, !!context);\n                return { data: initialized, extensions };\n            }\n        }\n        else {\n            return { data: null, extensions };\n        }\n    }\n    catch (error) {\n        /**\n         * The `data` type returned by `error` here could be:\n         * 1) `null`\n         * 2) an empty object\n         * 3) \"populated\" but with a `null` value `{ getPost: null }`\n         * 4) an actual record `{ getPost: { id: '1', title: 'Hello, World!' } }`\n         */\n        const { data, errors } = error;\n        /**\n         * `data` is not `null`, and is not an empty object:\n         */\n        if (data && Object.keys(data).length !== 0 && errors) {\n            const [key] = Object.keys(data);\n            const flattenedResult = flattenItems(modelIntrospection, name, data[key]);\n            /**\n             * `flattenedResult` could be `null` here (e.g. `data: { getPost: null }`)\n             * if `flattenedResult`, result is an actual record:\n             */\n            if (flattenedResult) {\n                if (options?.selectionSet) {\n                    return { data: flattenedResult, errors };\n                }\n                else {\n                    // TODO: refactor to avoid destructuring here\n                    const [initialized] = initializeModel(client, name, [flattenedResult], modelIntrospection, auth.authMode, auth.authToken, !!context);\n                    return { data: initialized, errors };\n                }\n            }\n            else {\n                // was `data: { getPost: null }`)\n                return handleSingularGraphQlError(error);\n            }\n        }\n        else {\n            // `data` is `null`:\n            return handleSingularGraphQlError(error);\n        }\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { map } from 'rxjs';\nimport { authModeParams, buildGraphQLVariables, generateGraphQLDocument, getCustomHeaders, initializeModel, } from '../APIClient';\nexport function subscriptionFactory(client, modelIntrospection, model, operation, getInternals) {\n    const { name } = model;\n    const subscription = (args) => {\n        const query = generateGraphQLDocument(modelIntrospection, name, operation, args);\n        const variables = buildGraphQLVariables(model, operation, args, modelIntrospection);\n        const auth = authModeParams(client, getInternals, args);\n        const headers = getCustomHeaders(client, getInternals, args?.headers);\n        const observable = client.graphql({\n            ...auth,\n            query,\n            variables,\n        }, headers);\n        return observable.pipe(map((value) => {\n            const [key] = Object.keys(value.data);\n            // Will need flattening here if/when custom selection set support is added:\n            const data = value.data[key];\n            const [initialized] = initializeModel(client, name, [data], modelIntrospection, auth.authMode, auth.authToken);\n            return initialized;\n        }));\n    };\n    return subscription;\n}\n", "/**\n * Given a SchemaModel from a ModelIntrospectionSchema, returns the primary key\n * as an array of field names.\n *\n * @param model The model object\n * @returns Array of field names\n */\nexport function resolvePKFields(model) {\n    const { primaryKeyFieldName, sortKeyFieldNames } = model.primaryKeyInfo;\n    return [primaryKeyFieldName, ...sortKeyFieldNames];\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Iterates through a collection to find a matching item and returns the index.\n *\n * @param needle The item to search for\n * @param haystack The collection to search\n * @param keyFields The fields used to indicate a match\n * @returns Index of `needle` in `haystack`, otherwise -1 if not found.\n */\nexport function findIndexByFields(needle, haystack, keyFields) {\n    const searchObject = Object.fromEntries(keyFields.map((fieldName) => [fieldName, needle[fieldName]]));\n    for (let i = 0; i < haystack.length; i++) {\n        if (Object.keys(searchObject).every((k) => searchObject[k] === haystack[i][k])) {\n            return i;\n        }\n    }\n    return -1;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Observable } from 'rxjs';\nimport { findIndexByFields, resolvePKFields } from '../../utils';\nexport function observeQueryFactory(models, model) {\n    const { name } = model;\n    const observeQuery = (arg) => new Observable((subscriber) => {\n        // what we'll be sending to our subscribers\n        const items = [];\n        // To enqueue subscription messages while we collect our initial\n        // result set.\n        const messageQueue = [];\n        // operation to take when message(s) arrive.\n        // this operation will be swapped out once initial \"sync\" is complete\n        // to immediately ingest messsages.\n        let receiveMessages = (...messages) => {\n            return messageQueue.push(...messages);\n        };\n        // start subscriptions\n        const onCreateSub = models[name].onCreate(arg).subscribe({\n            next(item) {\n                receiveMessages({ item, type: 'create' });\n            },\n            error(error) {\n                subscriber.error({ type: 'onCreate', error });\n            },\n        });\n        const onUpdateSub = models[name].onUpdate(arg).subscribe({\n            next(item) {\n                receiveMessages({ item, type: 'update' });\n            },\n            error(error) {\n                subscriber.error({ type: 'onUpdate', error });\n            },\n        });\n        const onDeleteSub = models[name].onDelete(arg).subscribe({\n            next(item) {\n                receiveMessages({ item, type: 'delete' });\n            },\n            error(error) {\n                subscriber.error({ type: 'onDelete', error });\n            },\n        });\n        // consumes a list of messages and sends a snapshot\n        function ingestMessages(messages) {\n            for (const message of messages) {\n                const idx = findIndexByFields(message.item, items, pkFields);\n                switch (message.type) {\n                    case 'create':\n                        if (idx < 0)\n                            items.push(message.item);\n                        break;\n                    case 'update':\n                        if (idx >= 0)\n                            items[idx] = message.item;\n                        break;\n                    case 'delete':\n                        if (idx >= 0)\n                            items.splice(idx, 1);\n                        break;\n                    default:\n                        console.error('Unrecognized message in observeQuery.', message);\n                }\n            }\n            subscriber.next({\n                items,\n                isSynced: true,\n            });\n        }\n        const pkFields = resolvePKFields(model);\n        // initial results\n        (async () => {\n            let firstPage = true;\n            let nextToken = null;\n            while (!subscriber.closed && (firstPage || nextToken)) {\n                firstPage = false;\n                const { data: page, errors, nextToken: _nextToken, } = await models[name].list({ ...arg, nextToken });\n                nextToken = _nextToken;\n                items.push(...page);\n                // if there are no more pages and no items we already know about\n                // that need to be merged in from sub, we're \"synced\"\n                const isSynced = messageQueue.length === 0 &&\n                    (nextToken === null || nextToken === undefined);\n                subscriber.next({\n                    items,\n                    isSynced,\n                });\n                if (Array.isArray(errors)) {\n                    for (const error of errors) {\n                        subscriber.error(error);\n                    }\n                }\n            }\n            // play through the queue\n            if (messageQueue.length > 0) {\n                ingestMessages(messageQueue);\n            }\n            // switch the queue to write directly to the items collection\n            receiveMessages = (...messages) => {\n                ingestMessages(messages);\n                return items.length;\n            };\n        })();\n        // when subscriber unsubscribes, tear down internal subs\n        return () => {\n            // 1. tear down internal subs\n            onCreateSub.unsubscribe();\n            onUpdateSub.unsubscribe();\n            onDeleteSub.unsubscribe();\n            // 2. there is no need to explicitly stop paging. instead, we\n            // just check `subscriber.closed` above before fetching each page.\n        };\n    });\n    return observeQuery;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst attributeIsSecondaryIndex = (attr) => {\n    return (attr.type === 'key' &&\n        // presence of `name` property distinguishes GSI from primary index\n        attr.properties?.name &&\n        attr.properties?.queryField &&\n        attr.properties?.fields.length > 0);\n};\nexport const getSecondaryIndexesFromSchemaModel = (model) => {\n    const idxs = model.attributes\n        ?.filter(attributeIsSecondaryIndex)\n        .map((attr) => {\n        const queryField = attr.properties.queryField;\n        const [pk, ...sk] = attr.properties.fields;\n        return {\n            queryField,\n            pk,\n            sk,\n        };\n    });\n    return idxs || [];\n};\n", "import { graphQLOperationsInfo } from '../../APIClient';\nimport { listFactory } from '../../operations/list';\nimport { indexQueryFactory } from '../../operations/indexQuery';\nimport { getFactory } from '../../operations/get';\nimport { subscriptionFactory } from '../../operations/subscription';\nimport { observeQueryFactory } from '../../operations/observeQuery';\nimport { getSecondaryIndexesFromSchemaModel } from '../../clientUtils';\nexport function generateModelsProperty(client, apiGraphQLConfig, getInternals) {\n    const models = {};\n    const modelIntrospection = apiGraphQLConfig.modelIntrospection;\n    if (!modelIntrospection) {\n        return {};\n    }\n    const SUBSCRIPTION_OPS = ['ONCREATE', 'ONUPDATE', 'ONDELETE'];\n    for (const model of Object.values(modelIntrospection.models)) {\n        const { name } = model;\n        models[name] = {};\n        Object.entries(graphQLOperationsInfo).forEach(([key, { operationPrefix }]) => {\n            const operation = key;\n            if (operation === 'LIST') {\n                models[name][operationPrefix] = listFactory(client, modelIntrospection, model, getInternals);\n            }\n            else if (SUBSCRIPTION_OPS.includes(operation)) {\n                models[name][operationPrefix] = subscriptionFactory(client, modelIntrospection, model, operation, getInternals);\n            }\n            else if (operation === 'OBSERVE_QUERY') {\n                models[name][operationPrefix] = observeQueryFactory(models, model);\n            }\n            else {\n                models[name][operationPrefix] = getFactory(client, modelIntrospection, model, operation, getInternals);\n            }\n        });\n        const secondaryIdxs = getSecondaryIndexesFromSchemaModel(model);\n        for (const idx of secondaryIdxs) {\n            models[name][idx.queryField] = indexQueryFactory(client, modelIntrospection, model, idx, getInternals);\n        }\n    }\n    return models;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { generateCustomQueriesProperty, generateCustomMutationsProperty, generateCustomSubscriptionsProperty, generateEnumsProperty, generateModelsProperty, } from './internals';\nexport function addSchemaToClient(client, apiGraphqlConfig, getInternals) {\n    client.models = generateModelsProperty(client, apiGraphqlConfig, getInternals);\n    client.enums = generateEnumsProperty(apiGraphqlConfig);\n    client.queries = generateCustomQueriesProperty(client, apiGraphqlConfig, getInternals);\n    client.mutations = generateCustomMutationsProperty(client, apiGraphqlConfig, getInternals);\n    client.subscriptions = generateCustomSubscriptionsProperty(client, apiGraphqlConfig, getInternals);\n    return client;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isApiGraphQLConfig(apiGraphQLConfig) {\n    return apiGraphQLConfig !== undefined;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isApiGraphQLConfig(apiGraphQLConfig) {\n    return apiGraphQLConfig !== undefined;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isConfigureEventWithResourceConfig(payload) {\n    return payload.event === 'configure';\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { addSchemaToClient, } from '@aws-amplify/data-schema/runtime';\nimport { __amplify, __authMode, __authToken, __headers, getInternals, } from '../types';\nimport { isApiGraphQLConfig } from './utils/runtimeTypeGuards/isApiGraphQLProviderConfig';\nimport { isConfigureEventWithResourceConfig } from './utils/runtimeTypeGuards/isConfigureEventWithResourceConfig';\nimport { cancel, graphql, isCancelError } from './v6';\n/**\n * @private\n *\n * Creates a client that can be used to make GraphQL requests, using a provided `AmplifyClassV6`\n * compatible context object for config and auth fetching.\n *\n * @param params\n * @returns\n */\nexport function generateClient(params) {\n    const client = {\n        [__amplify]: params.amplify,\n        [__authMode]: params.authMode,\n        [__authToken]: params.authToken,\n        [__headers]: params.headers,\n        graphql,\n        cancel,\n        isCancelError,\n        models: emptyProperty,\n        enums: emptyProperty,\n        queries: emptyProperty,\n        mutations: emptyProperty,\n        subscriptions: emptyProperty,\n    };\n    const apiGraphqlConfig = params.amplify.getConfig().API?.GraphQL;\n    if (isApiGraphQLConfig(apiGraphqlConfig)) {\n        addSchemaToClient(client, apiGraphqlConfig, getInternals);\n    }\n    else {\n        // This happens when the `Amplify.configure()` call gets evaluated after the `generateClient()` call.\n        //\n        // Cause: when the `generateClient()` and the `Amplify.configure()` calls are located in\n        // different source files, script bundlers may randomly arrange their orders in the production\n        // bundle.\n        //\n        // With the current implementation, the `client.models` instance created by `generateClient()`\n        // will be rebuilt on every `Amplify.configure()` call that's provided with a valid GraphQL\n        // provider configuration.\n        //\n        // TODO: revisit, and reverify this approach when enabling multiple clients for multi-endpoints\n        // configuration.\n        generateModelsPropertyOnAmplifyConfigure(client);\n    }\n    return client;\n}\nconst generateModelsPropertyOnAmplifyConfigure = (clientRef) => {\n    Hub.listen('core', coreEvent => {\n        if (!isConfigureEventWithResourceConfig(coreEvent.payload)) {\n            return;\n        }\n        const apiGraphQLConfig = coreEvent.payload.data.API?.GraphQL;\n        if (isApiGraphQLConfig(apiGraphQLConfig)) {\n            addSchemaToClient(clientRef, apiGraphQLConfig, getInternals);\n        }\n    });\n};\nconst emptyProperty = new Proxy({}, {\n    get() {\n        throw new Error('Client could not be generated. This is likely due to `Amplify.configure()` not being called prior to `generateClient()` or because the configuration passed to `Amplify.configure()` is missing GraphQL provider configuration.');\n    },\n});\n", "import { generateClient as internalGenerateClient } from '@aws-amplify/api-graphql/internals';\nimport { Amplify } from '@aws-amplify/core';\n/**\n * Generates an API client that can work with models or raw GraphQL\n *\n * @returns {@link V6Client}\n * @throws {@link Error} - Throws error when client cannot be generated due to configuration issues.\n */\nexport function generateClient(options = {}) {\n    return internalGenerateClient({\n        ...options,\n        amplify: Amplify,\n    });\n}\n"],
  "mappings": "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BG,EAAE,QAAaH,CACjB,EAuDI+B,GAAmB,OAAO,iBAAoB,WAAa,gBAAkB,SAAU1B,EAAOgC,EAAYC,EAAS,CACrH,IAAIrF,EAAI,IAAI,MAAMqF,CAAO,EACzB,OAAOrF,EAAE,KAAO,kBAAmBA,EAAE,MAAQoD,EAAOpD,EAAE,WAAaoF,EAAYpF,CACjF,EA4BON,GAAQ,CACb,UAAAhB,GACA,SAAAd,GACA,OAAAuB,GACA,WAAAb,GACA,QAAAU,GACA,WAAAD,GACA,UAAAd,GACA,YAAAU,GACA,gBAAAN,GACA,aAAAI,GACA,SAAAgB,GACA,OAAAP,GACA,SAAAI,GACA,eAAAE,GACA,cAAAD,GACA,QAAAvB,GACA,iBAAAF,GACA,iBAAAD,GACA,cAAAE,GACA,qBAAAe,GACA,aAAAD,GACA,gBAAAD,GACA,uBAAAV,GACA,uBAAAE,GACA,sBAAAD,GACA,wBAAAR,GACA,mBAAAY,EACF,iKCtXa+G,GAAA,WAAqB,GAKrBA,GAAA,cAAwB,GAKxBA,GAAA,IAAM,IAAI,YAAY,CACjC,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACD,EAKYA,GAAA,KAAO,CAClB,WACA,WACA,WACA,WACA,WACA,WACA,UACA,YAMWA,GAAA,oBAAsB,KAAA,IAAA,EAAK,EAAE,EAAG,yGCjG7C,IAAAC,GAAA,KAWAC,GAAA,UAAA,CAAA,SAAAA,GAAA,CACU,KAAA,MAAoB,WAAW,KAAKD,GAAA,IAAI,EACxC,KAAA,KAAmB,IAAI,WAAW,EAAE,EACpC,KAAA,OAAqB,IAAI,WAAW,EAAE,EACtC,KAAA,aAAuB,EACvB,KAAA,YAAsB,EA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",
  "names": ["createRequire", "path", "url", "init_cjs_shim", "__esmMin", "tslib_es6_exports", "__export", "__addDisposableResource", "__assign", "__asyncDelegator", "__asyncGenerator", "__asyncValues", "__await", "__awaiter", "__classPrivateFieldGet", "__classPrivateFieldIn", "__classPrivateFieldSet", "__createBinding", "__decorate", "__disposeResources", "__esDecorate", "__exportStar", "__extends", "__generator", "__importDefault", "__importStar", "__makeTemplateObject", "__metadata", "__param", "__propKey", "__read", "__rest", "__runInitializers", "__setFunctionName", "__spread", "__spreadArray", "__spreadArrays", "__values", "tslib_es6_default", "d", "b", "extendStatics", "__", "s", "e", "t", "p", "decorators", "target", "key", "desc", "c", "r", "i", "paramIndex", "decorator", "ctor", "descriptorIn", "contextIn", "initializers", "extraInitializers", "accept", "f", "kind", "descriptor", "_", "done", "context", "result", "thisArg", "value", "useValue", "x", "name", "prefix", "metadataKey", "metadataValue", "_arguments", "P", "generator", "adopt", "resolve", "reject", "fulfilled", "step", "rejected", "body", "y", "g", "verb", "n", "v", "op", "m", "o", "ar", "error", "il", "k", "a", "j", "jl", "to", "from", "pack", "l", "q", "awaitReturn", "resume", "settle", "fulfill", "cooked", "raw", "mod", "__setModuleDefault", "receiver", "state", "env", "async", "dispose", "inner", "fail", "_SuppressedError", "next", "init_tslib_es6", "__esmMin", "init_cjs_shim", "k2", "suppressed", "message", "exports", "constants_1", "RawSha256", "data", "position", "byteLength", "bitsHashed", "bufferView", "undecoratedLength", "out", "_a", "buffer", "state", "state0", "state1", "state2", "state3", "state4", "state5", "state6", "state7", "i", "u", "t1_1", "t2_1", "t1", "t2", "exports", "require_dist_cjs", "__commonJSMin", "exports", "module", "init_cjs_shim", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__name", "target", "value", "__export", "all", "name", "__copyProps", "to", "from", "except", "desc", "key", "__toCommonJS", "mod", "src_exports", "isArrayBuffer", "arg", "require_dist_cjs", "__commonJSMin", "exports", "module", "init_cjs_shim", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__name", "target", "value", "__export", "all", "name", "__copyProps", "to", "from", "except", "desc", "key", "__toCommonJS", "mod", "src_exports", "fromArrayBuffer", "fromString", "import_is_array_buffer", "import_buffer", "input", "offset", "length", "encoding", "require_dist_cjs", "__commonJSMin", "exports", "module", "init_cjs_shim", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__name", "target", "value", "__export", "all", "name", "__copyProps", "to", "from", "except", "desc", "key", "__toCommonJS", "mod", "src_exports", "fromUtf8", "toUint8Array", "toUtf8", "import_util_buffer_from", "input", "buf", "data", "util_utf8_1", "fromUtf8", "input", "convertToBuffer", "data", "exports", "isEmptyData", "data", "exports", "numToUint8", "num", "exports", "uint32ArrayFrom", "a_lookUpTable", "return_array", "a_index", "exports", "convertToBuffer_1", "exports", "isEmptyData_1", "numToUint8_1", "uint32ArrayFrom_1", "constants_1", "RawSha256_1", "util_1", "Sha256", "secret", "toHash", "e", "inner", "bufferFromSecret", "outer", "i", "exports", "input", "bufferHash", "buffer", "tslib_1", "exports", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "SHORT_TO_HEX", "HEX_TO_SHORT", "i", "encodedByte", "fromHex", "encoded", "out", "toHex", "bytes", "isFunction", "value", "exports", "createErrorClass", "createImpl", "_super", "instance", "ctorFunc", "exports", "createErrorClass_1", "exports", "_super", "errors", "err", "arrRemove", "arr", "item", "index", "exports", "isFunction_1", "UnsubscriptionError_1", "arrRemove_1", "Subscription", "initialTeardown", "errors", "_parentage", "_parentage_1", "__values", "_parentage_1_1", "parent_1", "initialFinalizer", "e", "_finalizers", "_finalizers_1", "_finalizers_1_1", "finalizer", "execFinalizer", "err", "__spreadArray", "__read", "teardown", "_a", "parent", "empty", "exports", "isSubscription", "value", "exports", "exports", "handler", "timeout", "args", "_i", "delegate", "__spreadArray", "__read", "handle", "config_1", "timeoutProvider_1", "reportUnhandledError", "err", "onUnhandledError", "exports", "noop", "exports", "exports", "createNotification", "errorNotification", "error", "nextNotification", "value", "kind", "config_1", "context", "errorContext", "cb", "isRoot", "_a", "errorThrown", "error", "exports", "captureError", "err", "isFunction_1", "Subscription_1", "config_1", "reportUnhandledError_1", "noop_1", "NotificationFactories_1", "timeoutProvider_1", "errorContext_1", "Subscriber", "_super", "__extends", "destination", "_this", "exports", "next", "error", "complete", "SafeSubscriber", "value", "handleStoppedNotification", "err", "_bind", "bind", "fn", "thisArg", "ConsumerObserver", "partialObserver", "handleUnhandledError", "observerOrNext", "context_1", "defaultErrorHandler", "notification", "subscriber", "onStoppedNotification", "exports", "identity", "x", "exports", "identity_1", "pipe", "fns", "_i", "pipeFromArray", "exports", "input", "prev", "fn", "Subscriber_1", "Subscription_1", "observable_1", "pipe_1", "config_1", "isFunction_1", "errorContext_1", "Observable", "subscribe", "operator", "observable", "observerOrNext", "error", "complete", "_this", "subscriber", "isSubscriber", "_a", "source", "sink", "err", "next", "promiseCtor", "getPromiseCtor", "resolve", "reject", "value", "operations", "_i", "x", "exports", "isObserver", "isFunction_1", "hasLift", "source", "exports", "operate", "init", "liftedSource", "err", "Subscriber_1", "createOperatorSubscriber", "destination", "onNext", "onComplete", "onError", "onFinalize", "OperatorSubscriber", "exports", "_super", "__extends", "shouldUnsubscribe", "_this", "value", "err", "closed_1", "_a", "lift_1", "OperatorSubscriber_1", "refCount", "source", "subscriber", "connection", "refCounter", "sharedConnection", "conn", "exports", "Observable_1", "Subscription_1", "refCount_1", "OperatorSubscriber_1", "lift_1", "ConnectableObservable", "_super", "__extends", "source", "subjectFactory", "_this", "subscriber", "subject", "_connection", "connection", "subject_1", "err", "exports", "exports", "Subscription_1", "exports", "callback", "request", "cancel", "delegate", "handle", "timestamp", "args", "_i", "__spreadArray", "__read", "Observable_1", "performanceTimestampProvider_1", "animationFrameProvider_1", "animationFrames", "timestampProvider", "animationFramesFactory", "DEFAULT_ANIMATION_FRAMES", "exports", "subscriber", "provider", "start", "id", "run", "timestamp", "now", "createErrorClass_1", "exports", "_super", "Observable_1", "Subscription_1", "ObjectUnsubscribedError_1", "arrRemove_1", "errorContext_1", "Subject", "_super", "__extends", "_this", "operator", "subject", "AnonymousSubject", "value", "_b", "__values", "_c", "observer", "err", "observers", "_a", "subscriber", "hasError", "isStopped", "thrownError", "observable", "destination", "source", "exports", "Subject_1", "BehaviorSubject", "_super", "__extends", "_value", "_this", "subscriber", "subscription", "_a", "hasError", "thrownError", "value", "exports", "exports", "Subject_1", "dateTimestampProvider_1", "ReplaySubject", "_super", "__extends", "_bufferSize", "_windowTime", "_timestampProvider", "_this", "value", "_a", "isStopped", "_buffer", "_infiniteTimeWindow", "subscriber", "subscription", "copy", "i", "adjustedBufferSize", "now", "last", "exports", "Subject_1", "AsyncSubject", "_super", "__extends", "_this", "subscriber", "_a", "hasError", "_hasValue", "_value", "thrownError", "isStopped", "_isComplete", "value", "exports", "Subscription_1", "Action", "_super", "__extends", "scheduler", "work", "state", "delay", "exports", "exports", "handler", "timeout", "args", "_i", "delegate", "__spreadArray", "__read", "handle", "Action_1", "intervalProvider_1", "arrRemove_1", "AsyncAction", "_super", "__extends", "scheduler", "work", "_this", "state", "delay", "id", "_a", "_id", "_scheduler", "error", "_delay", "errored", "errorValue", "e", "actions", "exports", "nextHandle", "resolved", "activeHandles", "findAndClearHandle", "handle", "exports", "cb", "Immediate_1", "setImmediate", "clearImmediate", "exports", "args", "_i", "delegate", "__spreadArray", "__read", "handle", "AsyncAction_1", "immediateProvider_1", "AsapAction", "_super", "__extends", "scheduler", "work", "_this", "id", "delay", "actions", "_a", "exports", "dateTimestampProvider_1", "Scheduler", "schedulerActionCtor", "now", "work", "delay", "state", "exports", "Scheduler_1", "AsyncScheduler", "_super", "__extends", "SchedulerAction", "now", "_this", "action", "actions", "error", "exports", "AsyncScheduler_1", "AsapScheduler", "_super", "__extends", "action", "flushId", "actions", "error", "exports", "AsapAction_1", "AsapScheduler_1", "exports", "AsyncAction_1", "AsyncScheduler_1", "exports", "AsyncAction_1", "QueueAction", "_super", "__extends", "scheduler", "work", "_this", "state", "delay", "id", "exports", "AsyncScheduler_1", "QueueScheduler", "_super", "__extends", "exports", "QueueAction_1", "QueueScheduler_1", "exports", "AsyncAction_1", "animationFrameProvider_1", "AnimationFrameAction", "_super", "__extends", "scheduler", "work", "_this", "id", "delay", "actions", "_a", "exports", "AsyncScheduler_1", "AnimationFrameScheduler", "_super", "__extends", "action", "flushId", "actions", "error", "exports", "AnimationFrameAction_1", "AnimationFrameScheduler_1", "exports", "AsyncAction_1", "Subscription_1", "AsyncScheduler_1", "VirtualTimeScheduler", "_super", "__extends", "schedulerActionCtor", "maxFrames", "VirtualAction", "_this", "_a", "actions", "error", "action", "exports", "scheduler", "work", "index", "state", "delay", "id", "a", "b", "Observable_1", "exports", "subscriber", "empty", "scheduler", "emptyScheduled", "isFunction_1", "isScheduler", "value", "exports", "isFunction_1", "isScheduler_1", "last", "arr", "popResultSelector", "args", "exports", "popScheduler", "popNumber", "defaultValue", "exports", "x", "isFunction_1", "isPromise", "value", "exports", "observable_1", "isFunction_1", "isInteropObservable", "input", "exports", "isFunction_1", "isAsyncIterable", "obj", "exports", "createInvalidObservableTypeError", "input", "exports", "getSymbolIterator", "exports", "iterator_1", "isFunction_1", "isIterable", "input", "exports", "isFunction_1", "readableStreamLikeToAsyncGenerator", "readableStream", "reader", "__await", "_a", "_b", "value", "done", "exports", "isReadableStreamLike", "obj", "isArrayLike_1", "isPromise_1", "Observable_1", "isInteropObservable_1", "isAsyncIterable_1", "throwUnobservableError_1", "isIterable_1", "isReadableStreamLike_1", "isFunction_1", "reportUnhandledError_1", "observable_1", "innerFrom", "input", "fromInteropObservable", "fromArrayLike", "fromPromise", "fromAsyncIterable", "fromIterable", "fromReadableStreamLike", "exports", "obj", "subscriber", "obs", "array", "i", "promise", "value", "err", "iterable", "iterable_1", "__values", "iterable_1_1", "asyncIterable", "process", "readableStream", "asyncIterable_1", "__asyncValues", "asyncIterable_1_1", "executeSchedule", "parentSubscription", "scheduler", "work", "delay", "repeat", "scheduleSubscription", "exports", "executeSchedule_1", "lift_1", "OperatorSubscriber_1", "observeOn", "scheduler", "delay", "source", "subscriber", "value", "err", "exports", "lift_1", "subscribeOn", "scheduler", "delay", "source", "subscriber", "exports", "innerFrom_1", "observeOn_1", "subscribeOn_1", "scheduleObservable", "input", "scheduler", "exports", "innerFrom_1", "observeOn_1", "subscribeOn_1", "schedulePromise", "input", "scheduler", "exports", "Observable_1", "scheduleArray", "input", "scheduler", "subscriber", "i", "exports", "Observable_1", "iterator_1", "isFunction_1", "executeSchedule_1", "scheduleIterable", "input", "scheduler", "subscriber", "iterator", "value", "done", "_a", "err", "exports", "Observable_1", "executeSchedule_1", "scheduleAsyncIterable", "input", "scheduler", "subscriber", "iterator", "result", "exports", "scheduleAsyncIterable_1", "isReadableStreamLike_1", "scheduleReadableStreamLike", "input", "scheduler", "exports", "scheduleObservable_1", "schedulePromise_1", "scheduleArray_1", "scheduleIterable_1", "scheduleAsyncIterable_1", "isInteropObservable_1", "isPromise_1", "isArrayLike_1", "isIterable_1", "isAsyncIterable_1", "throwUnobservableError_1", "isReadableStreamLike_1", "scheduleReadableStreamLike_1", "scheduled", "input", "scheduler", "exports", "scheduled_1", "innerFrom_1", "from", "input", "scheduler", "exports", "args_1", "from_1", "of", "args", "_i", "scheduler", "exports", "Observable_1", "isFunction_1", "throwError", "errorOrErrorFactory", "scheduler", "errorFactory", "init", "subscriber", "exports", "empty_1", "of_1", "throwError_1", "isFunction_1", "NotificationKind", "exports", "Notification", "kind", "value", "error", "observer", "observeNotification", "nextHandler", "errorHandler", "completeHandler", "_a", "nextOrObserver", "complete", "result", "err", "notification", "_d", "_b", "_c", "Observable_1", "isFunction_1", "isObservable", "obj", "exports", "createErrorClass_1", "exports", "_super", "EmptyError_1", "lastValueFrom", "source", "config", "hasConfig", "resolve", "reject", "_hasValue", "_value", "value", "exports", "EmptyError_1", "Subscriber_1", "firstValueFrom", "source", "config", "hasConfig", "resolve", "reject", "subscriber", "value", "exports", "createErrorClass_1", "exports", "_super", "createErrorClass_1", "exports", "_super", "message", "createErrorClass_1", "exports", "_super", "message", "isValidDate", "value", "exports", "async_1", "isDate_1", "lift_1", "innerFrom_1", "createErrorClass_1", "OperatorSubscriber_1", "executeSchedule_1", "exports", "_super", "info", "timeout", "config", "schedulerArg", "_a", "first", "each", "_b", "_with", "timeoutErrorFactory", "_c", "scheduler", "_d", "meta", "source", "subscriber", "originalSourceSubscription", "timerSubscription", "lastValue", "seen", "startTimer", "delay", "err", "value", "lift_1", "OperatorSubscriber_1", "map", "project", "thisArg", "source", "subscriber", "index", "value", "exports", "map_1", "isArray", "callOrApply", "fn", "args", "__spreadArray", "__read", "mapOneOrManyArgs", "exports", "isScheduler_1", "Observable_1", "subscribeOn_1", "mapOneOrManyArgs_1", "observeOn_1", "AsyncSubject_1", "bindCallbackInternals", "isNodeStyle", "callbackFunc", "resultSelector", "scheduler", "args", "_i", "_this", "subject", "uninitialized", "subscriber", "subs", "isAsync_1", "isComplete_1", "__spreadArray", "__read", "results", "err", "exports", "bindCallbackInternals_1", "bindCallback", "callbackFunc", "resultSelector", "scheduler", "exports", "bindCallbackInternals_1", "bindNodeCallback", "callbackFunc", "resultSelector", "scheduler", "exports", "isArray", "getPrototypeOf", "objectProto", "getKeys", "argsArgArrayOrObject", "args", "first_1", "isPOJO", "keys", "key", "exports", "obj", "createObject", "keys", "values", "result", "key", "exports", "Observable_1", "argsArgArrayOrObject_1", "from_1", "identity_1", "mapOneOrManyArgs_1", "args_1", "createObject_1", "OperatorSubscriber_1", "executeSchedule_1", "combineLatest", "args", "_i", "scheduler", "resultSelector", "_a", "observables", "keys", "result", "combineLatestInit", "values", "exports", "valueTransform", "subscriber", "maybeSchedule", "length", "active", "remainingFirstValues", "i", "source", "hasFirstValue", "value", "execute", "subscription", "innerFrom_1", "executeSchedule_1", "OperatorSubscriber_1", "mergeInternals", "source", "subscriber", "project", "concurrent", "onBeforeNext", "expand", "innerSubScheduler", "additionalFinalizer", "buffer", "active", "index", "isComplete", "checkComplete", "outerNext", "value", "doInnerSub", "innerComplete", "innerValue", "bufferedValue", "err", "exports", "map_1", "innerFrom_1", "lift_1", "mergeInternals_1", "isFunction_1", "mergeMap", "project", "resultSelector", "concurrent", "a", "b", "ii", "source", "subscriber", "exports", "mergeMap_1", "identity_1", "mergeAll", "concurrent", "exports", "mergeAll_1", "concatAll", "exports", "concatAll_1", "args_1", "from_1", "concat", "args", "_i", "exports", "Observable_1", "innerFrom_1", "defer", "observableFactory", "subscriber", "exports", "Subject_1", "Observable_1", "defer_1", "DEFAULT_CONFIG", "connectable", "source", "config", "connection", "connector", "_a", "resetOnDisconnect", "subject", "result", "subscriber", "exports", "Observable_1", "argsArgArrayOrObject_1", "innerFrom_1", "args_1", "OperatorSubscriber_1", "mapOneOrManyArgs_1", "createObject_1", "forkJoin", "args", "_i", "resultSelector", "_a", "sources", "keys", "result", "subscriber", "length", "values", "remainingCompletions", "remainingEmissions", "sourceIndex", "hasValue", "value", "exports", "innerFrom_1", "Observable_1", "mergeMap_1", "isArrayLike_1", "isFunction_1", "mapOneOrManyArgs_1", "nodeEventEmitterMethods", "eventTargetMethods", "jqueryMethods", "fromEvent", "target", "eventName", "options", "resultSelector", "_a", "__read", "isEventTarget", "methodName", "handler", "isNodeStyleEventEmitter", "toCommonHandlerRegistry", "isJQueryStyleEventEmitter", "add", "remove", "subTarget", "subscriber", "args", "_i", "exports", "Observable_1", "isFunction_1", "mapOneOrManyArgs_1", "fromEventPattern", "addHandler", "removeHandler", "resultSelector", "subscriber", "handler", "e", "_i", "retValue", "exports", "identity_1", "isScheduler_1", "defer_1", "scheduleIterable_1", "generate", "initialStateOrOptions", "condition", "iterate", "resultSelectorOrScheduler", "scheduler", "resultSelector", "initialState", "_a", "_b", "gen", "state", "exports", "defer_1", "iif", "condition", "trueResult", "falseResult", "exports", "Observable_1", "async_1", "isScheduler_1", "isDate_1", "timer", "dueTime", "intervalOrScheduler", "scheduler", "intervalDuration", "subscriber", "due", "n", "exports", "async_1", "timer_1", "interval", "period", "scheduler", "exports", "mergeAll_1", "innerFrom_1", "empty_1", "args_1", "from_1", "merge", "args", "_i", "scheduler", "concurrent", "sources", "exports", "Observable_1", "noop_1", "exports", "never", "isArray", "argsOrArgArray", "args", "exports", "Observable_1", "argsOrArgArray_1", "OperatorSubscriber_1", "noop_1", "innerFrom_1", "onErrorResumeNext", "sources", "_i", "nextSources", "subscriber", "sourceIndex", "subscribeNext", "nextSource", "innerSubscriber", "exports", "from_1", "pairs", "obj", "scheduler", "exports", "not", "pred", "thisArg", "value", "index", "exports", "lift_1", "OperatorSubscriber_1", "filter", "predicate", "thisArg", "source", "subscriber", "index", "value", "exports", "not_1", "filter_1", "innerFrom_1", "partition", "source", "predicate", "thisArg", "exports", "Observable_1", "innerFrom_1", "argsOrArgArray_1", "OperatorSubscriber_1", "race", "sources", "_i", "raceInit", "exports", "subscriber", "subscriptions", "i", "value", "Observable_1", "empty_1", "range", "start", "count", "scheduler", "end", "subscriber", "n", "exports", "Observable_1", "innerFrom_1", "empty_1", "using", "resourceFactory", "observableFactory", "subscriber", "resource", "result", "source", "exports", "Observable_1", "innerFrom_1", "argsOrArgArray_1", "empty_1", "OperatorSubscriber_1", "args_1", "zip", "args", "_i", "resultSelector", "sources", "subscriber", "buffers", "completed", "sourceIndex", "value", "buffer", "result", "__spreadArray", "__read", "i", "exports", "require_types", "__commonJSMin", "exports", "init_cjs_shim", "lift_1", "innerFrom_1", "OperatorSubscriber_1", "audit", "durationSelector", "source", "subscriber", "hasValue", "lastValue", "durationSubscriber", "isComplete", "endDuration", "value", "cleanupDuration", "exports", "async_1", "audit_1", "timer_1", "auditTime", "duration", "scheduler", "exports", "lift_1", "noop_1", "OperatorSubscriber_1", "innerFrom_1", "buffer", "closingNotifier", "source", "subscriber", "currentBuffer", "value", "b", "exports", "lift_1", "OperatorSubscriber_1", "arrRemove_1", "bufferCount", "bufferSize", "startBufferEvery", "source", "subscriber", "buffers", "count", "value", "toEmit", "buffers_1", "__values", "buffers_1_1", "buffer", "toEmit_1", "toEmit_1_1", "buffers_2", "buffers_2_1", "exports", "Subscription_1", "lift_1", "OperatorSubscriber_1", "arrRemove_1", "async_1", "args_1", "executeSchedule_1", "bufferTime", "bufferTimeSpan", "otherArgs", "_i", "scheduler", "_a", "bufferCreationInterval", "_b", "maxBufferSize", "source", "subscriber", "bufferRecords", "restartOnEmit", "emit", "record", "buffer", "subs", "startBuffer", "record_1", "bufferTimeSubscriber", "value", "recordsCopy", "recordsCopy_1", "__values", "recordsCopy_1_1", "exports", "Subscription_1", "lift_1", "innerFrom_1", "OperatorSubscriber_1", "noop_1", "arrRemove_1", "bufferToggle", "openings", "closingSelector", "source", "subscriber", "buffers", "openValue", "buffer", "closingSubscription", "emitBuffer", "value", "buffers_1", "__values", "buffers_1_1", "exports", "lift_1", "noop_1", "OperatorSubscriber_1", "innerFrom_1", "bufferWhen", "closingSelector", "source", "subscriber", "buffer", "closingSubscriber", "openBuffer", "b", "value", "exports", "innerFrom_1", "OperatorSubscriber_1", "lift_1", "catchError", "selector", "source", "subscriber", "innerSub", "syncUnsub", "handledResult", "err", "exports", "OperatorSubscriber_1", "scanInternals", "accumulator", "seed", "hasSeed", "emitOnNext", "emitBeforeComplete", "source", "subscriber", "hasState", "state", "index", "value", "i", "exports", "scanInternals_1", "lift_1", "reduce", "accumulator", "seed", "exports", "reduce_1", "lift_1", "arrReducer", "arr", "value", "toArray", "source", "subscriber", "exports", "identity_1", "mapOneOrManyArgs_1", "pipe_1", "mergeMap_1", "toArray_1", "joinAllInternals", "joinFn", "project", "sources", "exports", "combineLatest_1", "joinAllInternals_1", "combineLatestAll", "project", "exports", "combineLatestAll_1", "exports", "combineLatest_1", "lift_1", "argsOrArgArray_1", "mapOneOrManyArgs_1", "pipe_1", "args_1", "combineLatest", "args", "_i", "resultSelector", "__spreadArray", "__read", "source", "subscriber", "exports", "combineLatest_1", "combineLatestWith", "otherSources", "_i", "__spreadArray", "__read", "exports", "mergeMap_1", "isFunction_1", "concatMap", "project", "resultSelector", "exports", "concatMap_1", "isFunction_1", "concatMapTo", "innerObservable", "resultSelector", "exports", "lift_1", "concatAll_1", "args_1", "from_1", "concat", "args", "_i", "scheduler", "source", "subscriber", "__spreadArray", "__read", "exports", "concat_1", "concatWith", "otherSources", "_i", "__spreadArray", "__read", "exports", "Observable_1", "fromSubscribable", "subscribable", "subscriber", "exports", "Subject_1", "innerFrom_1", "lift_1", "fromSubscribable_1", "DEFAULT_CONFIG", "connect", "selector", "config", "connector", "source", "subscriber", "subject", "exports", "reduce_1", "count", "predicate", "total", "value", "i", "exports", "lift_1", "noop_1", "OperatorSubscriber_1", "innerFrom_1", "debounce", "durationSelector", "source", "subscriber", "hasValue", "lastValue", "durationSubscriber", "emit", "value", "exports", "async_1", "lift_1", "OperatorSubscriber_1", "debounceTime", "dueTime", "scheduler", "source", "subscriber", "activeTask", "lastValue", "lastTime", "emit", "value", "emitWhenIdle", "targetTime", "now", "exports", "lift_1", "OperatorSubscriber_1", "defaultIfEmpty", "defaultValue", "source", "subscriber", "hasValue", "value", "exports", "empty_1", "lift_1", "OperatorSubscriber_1", "take", "count", "source", "subscriber", "seen", "value", "exports", "lift_1", "OperatorSubscriber_1", "noop_1", "ignoreElements", "source", "subscriber", "exports", "map_1", "mapTo", "value", "exports", "concat_1", "take_1", "ignoreElements_1", "mapTo_1", "mergeMap_1", "innerFrom_1", "delayWhen", "delayDurationSelector", "subscriptionDelay", "source", "value", "index", "exports", "async_1", "delayWhen_1", "timer_1", "delay", "due", "scheduler", "duration", "exports", "Notification_1", "lift_1", "OperatorSubscriber_1", "dematerialize", "source", "subscriber", "notification", "exports", "lift_1", "OperatorSubscriber_1", "noop_1", "innerFrom_1", "distinct", "keySelector", "flushes", "source", "subscriber", "distinctKeys", "value", "key", "exports", "identity_1", "lift_1", "OperatorSubscriber_1", "distinctUntilChanged", "comparator", "keySelector", "defaultCompare", "source", "subscriber", "previousKey", "first", "value", "currentKey", "exports", "a", "b", "distinctUntilChanged_1", "distinctUntilKeyChanged", "key", "compare", "x", "y", "exports", "EmptyError_1", "lift_1", "OperatorSubscriber_1", "throwIfEmpty", "errorFactory", "defaultErrorFactory", "source", "subscriber", "hasValue", "value", "exports", "ArgumentOutOfRangeError_1", "filter_1", "throwIfEmpty_1", "defaultIfEmpty_1", "take_1", "elementAt", "index", "defaultValue", "hasDefaultValue", "source", "v", "i", "exports", "concat_1", "of_1", "endWith", "values", "_i", "source", "__spreadArray", "__read", "exports", "lift_1", "OperatorSubscriber_1", "every", "predicate", "thisArg", "source", "subscriber", "index", "value", "exports", "map_1", "innerFrom_1", "lift_1", "OperatorSubscriber_1", "exhaustMap", "project", "resultSelector", "source", "a", "b", "ii", "subscriber", "index", "innerSub", "isComplete", "outerValue", "exports", "exhaustMap_1", "identity_1", "exhaustAll", "exports", "exhaustAll_1", "exports", "lift_1", "mergeInternals_1", "expand", "project", "concurrent", "scheduler", "source", "subscriber", "exports", "lift_1", "finalize", "callback", "source", "subscriber", "exports", "lift_1", "OperatorSubscriber_1", "find", "predicate", "thisArg", "createFind", "exports", "emit", "findIndex", "source", "subscriber", "index", "value", "i", "lift_1", "find_1", "findIndex", "predicate", "thisArg", "exports", "EmptyError_1", "filter_1", "take_1", "defaultIfEmpty_1", "throwIfEmpty_1", "identity_1", "first", "predicate", "defaultValue", "hasDefaultValue", "source", "v", "i", "exports", "Observable_1", "innerFrom_1", "Subject_1", "lift_1", "OperatorSubscriber_1", "groupBy", "keySelector", "elementOrOptions", "duration", "connector", "source", "subscriber", "element", "groups", "notify", "cb", "handleError", "err", "consumer", "activeGroups", "teardownAttempted", "groupBySourceSubscriber", "value", "key_1", "group_1", "grouped", "createGroupedObservable", "durationSubscriber_1", "key", "groupSubject", "result", "groupSubscriber", "innerSub", "exports", "lift_1", "OperatorSubscriber_1", "isEmpty", "source", "subscriber", "exports", "empty_1", "lift_1", "OperatorSubscriber_1", "takeLast", "count", "source", "subscriber", "buffer", "value", "buffer_1", "__values", "buffer_1_1", "exports", "EmptyError_1", "filter_1", "takeLast_1", "throwIfEmpty_1", "defaultIfEmpty_1", "identity_1", "last", "predicate", "defaultValue", "hasDefaultValue", "source", "v", "i", "exports", "Notification_1", "lift_1", "OperatorSubscriber_1", "materialize", "source", "subscriber", "value", "err", "exports", "reduce_1", "isFunction_1", "max", "comparer", "x", "y", "exports", "mergeMap_1", "exports", "mergeMap_1", "isFunction_1", "mergeMapTo", "innerObservable", "resultSelector", "concurrent", "exports", "lift_1", "mergeInternals_1", "mergeScan", "accumulator", "seed", "concurrent", "source", "subscriber", "state", "value", "index", "exports", "lift_1", "argsOrArgArray_1", "mergeAll_1", "args_1", "from_1", "merge", "args", "_i", "scheduler", "concurrent", "source", "subscriber", "__spreadArray", "__read", "exports", "merge_1", "mergeWith", "otherSources", "_i", "__spreadArray", "__read", "exports", "reduce_1", "isFunction_1", "min", "comparer", "x", "y", "exports", "ConnectableObservable_1", "isFunction_1", "connect_1", "multicast", "subjectOrSubjectFactory", "selector", "subjectFactory", "source", "exports", "argsOrArgArray_1", "onErrorResumeNext_1", "onErrorResumeNextWith", "sources", "_i", "nextSources", "source", "__spreadArray", "__read", "exports", "lift_1", "OperatorSubscriber_1", "pairwise", "source", "subscriber", "prev", "hasPrev", "value", "p", "exports", "map_1", "pluck", "properties", "_i", "length", "x", "currentProp", "i", "p", "exports", "Subject_1", "multicast_1", "connect_1", "publish", "selector", "source", "exports", "BehaviorSubject_1", "ConnectableObservable_1", "publishBehavior", "initialValue", "source", "subject", "exports", "AsyncSubject_1", "ConnectableObservable_1", "publishLast", "source", "subject", "exports", "ReplaySubject_1", "multicast_1", "isFunction_1", "publishReplay", "bufferSize", "windowTime", "selectorOrScheduler", "timestampProvider", "selector", "source", "exports", "race_1", "lift_1", "identity_1", "raceWith", "otherSources", "_i", "source", "subscriber", "__spreadArray", "__read", "exports", "empty_1", "lift_1", "OperatorSubscriber_1", "innerFrom_1", "timer_1", "repeat", "countOrConfig", "count", "delay", "_a", "source", "subscriber", "soFar", "sourceSub", "resubscribe", "notifier", "notifierSubscriber_1", "subscribeToSource", "syncUnsub", "exports", "innerFrom_1", "Subject_1", "lift_1", "OperatorSubscriber_1", "repeatWhen", "notifier", "source", "subscriber", "innerSub", "syncResub", "completions$", "isNotifierComplete", "isMainComplete", "checkComplete", "getCompletionSubject", "subscribeForRepeatWhen", "exports", "lift_1", "OperatorSubscriber_1", "identity_1", "timer_1", "innerFrom_1", "retry", "configOrCount", "config", "_a", "count", "delay", "_b", "resetOnSuccess", "source", "subscriber", "soFar", "innerSub", "subscribeForRetry", "syncUnsub", "value", "err", "resub_1", "notifier", "notifierSubscriber_1", "exports", "innerFrom_1", "Subject_1", "lift_1", "OperatorSubscriber_1", "retryWhen", "notifier", "source", "subscriber", "innerSub", "syncResub", "errors$", "subscribeForRetryWhen", "err", "exports", "innerFrom_1", "lift_1", "noop_1", "OperatorSubscriber_1", "sample", "notifier", "source", "subscriber", "hasValue", "lastValue", "value", "exports", "async_1", "sample_1", "interval_1", "sampleTime", "period", "scheduler", "exports", "lift_1", "scanInternals_1", "scan", "accumulator", "seed", "exports", "lift_1", "OperatorSubscriber_1", "innerFrom_1", "sequenceEqual", "compareTo", "comparator", "a", "b", "source", "subscriber", "aState", "createState", "bState", "emit", "isEqual", "createSubscriber", "selfState", "otherState", "sequenceEqualSubscriber", "buffer", "complete", "exports", "innerFrom_1", "Subject_1", "Subscriber_1", "lift_1", "share", "options", "_a", "connector", "_b", "resetOnError", "_c", "resetOnComplete", "_d", "resetOnRefCountZero", "wrapperSource", "connection", "resetConnection", "subject", "refCount", "hasCompleted", "hasErrored", "cancelReset", "reset", "resetAndUnsubscribe", "conn", "source", "subscriber", "dest", "handleReset", "value", "err", "exports", "on", "args", "_i", "onSubscriber", "__spreadArray", "__read", "ReplaySubject_1", "share_1", "shareReplay", "configOrBufferSize", "windowTime", "scheduler", "bufferSize", "refCount", "_a", "_b", "_c", "exports", "EmptyError_1", "SequenceError_1", "NotFoundError_1", "lift_1", "OperatorSubscriber_1", "single", "predicate", "source", "subscriber", "hasValue", "singleValue", "seenValue", "index", "value", "exports", "filter_1", "skip", "count", "_", "index", "exports", "identity_1", "lift_1", "OperatorSubscriber_1", "skipLast", "skipCount", "source", "subscriber", "ring", "seen", "value", "valueIndex", "index", "oldValue", "exports", "lift_1", "OperatorSubscriber_1", "innerFrom_1", "noop_1", "skipUntil", "notifier", "source", "subscriber", "taking", "skipSubscriber", "value", "exports", "lift_1", "OperatorSubscriber_1", "skipWhile", "predicate", "source", "subscriber", "taking", "index", "value", "exports", "concat_1", "args_1", "lift_1", "startWith", "values", "_i", "scheduler", "source", "subscriber", "exports", "innerFrom_1", "lift_1", "OperatorSubscriber_1", "switchMap", "project", "resultSelector", "source", "subscriber", "innerSubscriber", "index", "isComplete", "checkComplete", "value", "innerIndex", "outerIndex", "innerValue", "exports", "switchMap_1", "identity_1", "switchAll", "exports", "switchMap_1", "isFunction_1", "switchMapTo", "innerObservable", "resultSelector", "exports", "switchMap_1", "lift_1", "switchScan", "accumulator", "seed", "source", "subscriber", "state", "value", "index", "_", "innerValue", "exports", "lift_1", "OperatorSubscriber_1", "innerFrom_1", "noop_1", "takeUntil", "notifier", "source", "subscriber", "exports", "lift_1", "OperatorSubscriber_1", "takeWhile", "predicate", "inclusive", "source", "subscriber", "index", "value", "result", "exports", "isFunction_1", "lift_1", "OperatorSubscriber_1", "identity_1", "tap", "observerOrNext", "error", "complete", "tapObserver", "source", "subscriber", "_a", "isUnsub", "value", "err", "_b", "exports", "lift_1", "OperatorSubscriber_1", "innerFrom_1", "throttle", "durationSelector", "config", "source", "subscriber", "_a", "_b", "leading", "_c", "trailing", "hasValue", "sendValue", "throttled", "isComplete", "endThrottling", "send", "cleanupThrottling", "startThrottle", "value", "exports", "async_1", "throttle_1", "timer_1", "throttleTime", "duration", "scheduler", "config", "duration$", "exports", "async_1", "lift_1", "OperatorSubscriber_1", "timeInterval", "scheduler", "source", "subscriber", "last", "value", "now", "interval", "TimeInterval", "exports", "async_1", "isDate_1", "timeout_1", "timeoutWith", "due", "withObservable", "scheduler", "first", "each", "_with", "exports", "dateTimestampProvider_1", "map_1", "timestamp", "timestampProvider", "value", "exports", "Subject_1", "lift_1", "OperatorSubscriber_1", "noop_1", "innerFrom_1", "window", "windowBoundaries", "source", "subscriber", "windowSubject", "errorHandler", "err", "value", "exports", "Subject_1", "lift_1", "OperatorSubscriber_1", "windowCount", "windowSize", "startWindowEvery", "startEvery", "source", "subscriber", "windows", "starts", "count", "value", "windows_1", "__values", "windows_1_1", "window_1", "c", "window_2", "err", "exports", "Subject_1", "async_1", "Subscription_1", "lift_1", "OperatorSubscriber_1", "arrRemove_1", "args_1", "executeSchedule_1", "windowTime", "windowTimeSpan", "otherArgs", "_i", "scheduler", "_a", "windowCreationInterval", "_b", "maxWindowSize", "source", "subscriber", "windowRecords", "restartOnClose", "closeWindow", "record", "window", "subs", "startWindow", "window_1", "record_1", "loop", "cb", "terminate", "value", "consumer", "err", "exports", "Subject_1", "Subscription_1", "lift_1", "innerFrom_1", "OperatorSubscriber_1", "noop_1", "arrRemove_1", "windowToggle", "openings", "closingSelector", "source", "subscriber", "windows", "handleError", "err", "openValue", "window", "closingSubscription", "closeWindow", "closingNotifier", "value", "windowsCopy", "windowsCopy_1", "__values", "windowsCopy_1_1", "window_1", "exports", "Subject_1", "lift_1", "OperatorSubscriber_1", "innerFrom_1", "windowWhen", "closingSelector", "source", "subscriber", "window", "closingSubscriber", "handleError", "err", "openWindow", "closingNotifier", "value", "exports", "lift_1", "OperatorSubscriber_1", "innerFrom_1", "identity_1", "noop_1", "args_1", "withLatestFrom", "inputs", "_i", "project", "source", "subscriber", "len", "otherValues", "hasValue", "ready", "i", "value", "values", "__spreadArray", "__read", "exports", "zip_1", "joinAllInternals_1", "zipAll", "project", "exports", "zip_1", "lift_1", "zip", "sources", "_i", "source", "subscriber", "__spreadArray", "__read", "exports", "zip_1", "zipWith", "otherInputs", "_i", "__spreadArray", "__read", "exports", "Observable_1", "exports", "ConnectableObservable_1", "observable_1", "animationFrames_1", "Subject_1", "BehaviorSubject_1", "ReplaySubject_1", "AsyncSubject_1", "asap_1", "async_1", "queue_1", "animationFrame_1", "VirtualTimeScheduler_1", "Scheduler_1", "Subscription_1", "Subscriber_1", "Notification_1", "pipe_1", "noop_1", "identity_1", "isObservable_1", "lastValueFrom_1", "firstValueFrom_1", "ArgumentOutOfRangeError_1", "EmptyError_1", "NotFoundError_1", "ObjectUnsubscribedError_1", "SequenceError_1", "timeout_1", "UnsubscriptionError_1", "bindCallback_1", "bindNodeCallback_1", "combineLatest_1", "concat_1", "connectable_1", "defer_1", "empty_1", "forkJoin_1", "from_1", "fromEvent_1", "fromEventPattern_1", "generate_1", "iif_1", "interval_1", "merge_1", "never_1", "of_1", "onErrorResumeNext_1", "pairs_1", "partition_1", "race_1", "range_1", "throwError_1", "timer_1", "using_1", "zip_1", "scheduled_1", "empty_2", "never_2", "__exportStar", "config_1", "audit_1", "auditTime_1", "buffer_1", "bufferCount_1", "bufferTime_1", "bufferToggle_1", "bufferWhen_1", "catchError_1", "combineAll_1", "combineLatestAll_1", "combineLatestWith_1", "concatAll_1", "concatMap_1", "concatMapTo_1", "concatWith_1", "connect_1", "count_1", "debounce_1", "debounceTime_1", "defaultIfEmpty_1", "delay_1", "delayWhen_1", "dematerialize_1", "distinct_1", "distinctUntilChanged_1", "distinctUntilKeyChanged_1", "elementAt_1", "endWith_1", "every_1", "exhaust_1", "exhaustAll_1", "exhaustMap_1", "expand_1", "filter_1", "finalize_1", "find_1", "findIndex_1", "first_1", "groupBy_1", "ignoreElements_1", "isEmpty_1", "last_1", "map_1", "mapTo_1", "materialize_1", "max_1", "mergeAll_1", "flatMap_1", "mergeMap_1", "mergeMapTo_1", "mergeScan_1", "mergeWith_1", "min_1", "multicast_1", "observeOn_1", "onErrorResumeNextWith_1", "pairwise_1", "pluck_1", "publish_1", "publishBehavior_1", "publishLast_1", "publishReplay_1", "raceWith_1", "reduce_1", "repeat_1", "repeatWhen_1", "retry_1", "retryWhen_1", "refCount_1", "sample_1", "sampleTime_1", "scan_1", "sequenceEqual_1", "share_1", "shareReplay_1", "single_1", "skip_1", "skipLast_1", "skipUntil_1", "skipWhile_1", "startWith_1", "subscribeOn_1", "switchAll_1", "switchMap_1", "switchMapTo_1", "switchScan_1", "take_1", "takeLast_1", "takeUntil_1", "takeWhile_1", "tap_1", "throttle_1", "throttleTime_1", "throwIfEmpty_1", "timeInterval_1", "timeout_2", "timeoutWith_1", "timestamp_1", "toArray_1", "window_1", "windowCount_1", "windowTime_1", "windowToggle_1", "windowWhen_1", "withLatestFrom_1", "zipAll_1", "zipWith_1", "require_version", "__commonJSMin", "exports", "init_cjs_shim", "version", "versionInfo", "require_isPromise", "__commonJSMin", "exports", "init_cjs_shim", "isPromise", "value", "require_isObjectLike", "__commonJSMin", "exports", "init_cjs_shim", "isObjectLike", "_typeof", "obj", "value", "require_symbols", "__commonJSMin", "exports", "init_cjs_shim", "SYMBOL_ITERATOR", "SYMBOL_ASYNC_ITERATOR", "SYMBOL_TO_STRING_TAG", "require_location", "__commonJSMin", "exports", "init_cjs_shim", "getLocation", "source", "position", "lineRegexp", "line", "column", "match", "require_printLocation", "__commonJSMin", "exports", "init_cjs_shim", "printLocation", "printSourceLocation", "_location", "location", "source", "sourceLocation", "firstLineColumnOffset", "body", "whitespace", "lineIndex", "lineOffset", "lineNum", "columnOffset", "columnNum", "locationStr", "lines", "locationLine", "subLineIndex", "subLineColumnNum", "subLines", "i", "printPrefixedLines", "subLine", "existingLines", "_ref", "_", "line", "padLen", "_ref2", "prefix", "_ref3", "leftPad", "len", "str", "require_GraphQLError", "__commonJSMin", "exports", "init_cjs_shim", "_typeof", "obj", "printError", "_isObjectLike", "_interopRequireDefault", "_symbols", "_location", "_printLocation", "ownKeys", "object", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread", "target", "i", "source", "key", "_defineProperty", "value", "_classCallCheck", "instance", "Constructor", "_defineProperties", "props", "descriptor", "_createClass", "protoProps", "staticProps", "_inherits", "subClass", "superClass", "_setPrototypeOf", "_createSuper", "Derived", "hasNativeReflectConstruct", "_isNativeReflectConstruct", "Super", "_getPrototypeOf", "result", "NewTarget", "_possibleConstructorReturn", "self", "call", "_assertThisInitialized", "_wrapNativeSuper", "Class", "_cache", "_isNativeFunction", "Wrapper", "_construct", "Parent", "args", "a", "fn", "o", "p", "GraphQLError", "_Error", "_super", "message", "nodes", "positions", "path", "originalError", "extensions", "_nodeLocations", "_nodeLocations2", "_nodeLocations3", "_this", "undefinedIfEmpty", "nodeLocations", "_i2", "_ref3", "_this$nodes", "_ref4", "loc", "pos", "originalExtensions", "array", "error", "output", "_i4", "_error$nodes2", "node", "_i6", "_error$locations2", "location", "require_syntaxError", "__commonJSMin", "exports", "init_cjs_shim", "syntaxError", "_GraphQLError", "source", "position", "description", "require_kinds", "__commonJSMin", "exports", "init_cjs_shim", "Kind", "require_invariant", "__commonJSMin", "exports", "init_cjs_shim", "invariant", "condition", "message", "booleanCondition", "require_nodejsCustomInspectSymbol", "__commonJSMin", "exports", "init_cjs_shim", "nodejsCustomInspectSymbol", "_default", "require_defineInspect", "__commonJSMin", "exports", "init_cjs_shim", "defineInspect", "_invariant", "_interopRequireDefault", "_nodejsCustomInspectSymbol", "obj", "classObject", "fn", "require_ast", "__commonJSMin", "exports", "init_cjs_shim", "isNode", "_defineInspect", "_interopRequireDefault", "obj", "Location", "startToken", "endToken", "source", "_proto", "Token", "kind", "start", "end", "line", "column", "prev", "value", "_proto2", "maybeNode", "require_tokenKind", "__commonJSMin", "exports", "init_cjs_shim", "TokenKind", "require_inspect", "__commonJSMin", "exports", "init_cjs_shim", "inspect", "_nodejsCustomInspectSymbol", "_interopRequireDefault", "obj", "_typeof", "MAX_ARRAY_LENGTH", "MAX_RECURSIVE_DEPTH", "value", "formatValue", "seenValues", "formatObjectValue", "previouslySeenValues", "customInspectFn", "getCustomFn", "customValue", "formatArray", "formatObject", "object", "keys", "getObjectTag", "properties", "key", "array", "len", "remaining", "items", "i", "tag", "name", "require_devAssert", "__commonJSMin", "exports", "init_cjs_shim", "devAssert", "condition", "message", "booleanCondition", "require_instanceOf", "__commonJSMin", "exports", "init_cjs_shim", "_inspect", "_interopRequireDefault", "obj", "_typeof", "_default", "value", "constructor", "_value$constructor", "className", "valueClassName", "stringifiedValue", "require_source", "__commonJSMin", "exports", "init_cjs_shim", "isSource", "_symbols", "_inspect", "_interopRequireDefault", "_devAssert", "_instanceOf", "obj", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "Constructor", "protoProps", "staticProps", "Source", "body", "name", "locationOffset", "source", "require_directiveLocation", "__commonJSMin", "exports", "init_cjs_shim", "DirectiveLocation", "require_blockString", "__commonJSMin", "exports", "init_cjs_shim", "dedentBlockStringValue", "getBlockStringIndentation", "printBlockString", "rawString", "lines", "commonIndent", "i", "startLine", "isBlank", "endLine", "str", "value", "_commonIndent", "isFirstLine", "isEmptyLine", "indent", "indentation", "preferMultipleLines", "isSingleLine", "hasLeadingSpace", "hasTrailingQuote", "hasTrailingSlash", "printAsMultipleLines", "result", "require_lexer", "__commonJSMin", "exports", "init_cjs_shim", "isPunctuatorTokenKind", "_syntaxError", "_ast", "_tokenKind", "_blockString", "Lexer", "source", "startOfFileToken", "_proto", "token", "_token$next", "readToken", "kind", "printCharCode", "code", "lexer", "prev", "body", "bodyLength", "pos", "_line", "_col", "readComment", "readBlockString", "readString", "readNumber", "readName", "unexpectedCharacterMessage", "line", "col", "start", "position", "firstCode", "isFloat", "readDigits", "isNameStart", "chunkStart", "value", "charCode", "uniCharCode", "invalidSequence", "rawValue", "a", "b", "c", "d", "char2hex", "require_parser", "__commonJSMin", "exports", "init_cjs_shim", "parse", "parseValue", "parseType", "_syntaxError", "_kinds", "_ast", "_tokenKind", "_source", "_directiveLocation", "_lexer", "source", "options", "parser", "Parser", "value", "type", "sourceObj", "_proto", "token", "start", "operation", "name", "operationToken", "nameOrAlias", "alias", "isConst", "item", "hasTypeCondition", "_this$_options", "_this", "_this2", "directives", "keywordToken", "description", "operationTypes", "interfaces", "fields", "_this$_options2", "types", "_this$_options3", "args", "defaultValue", "values", "repeatable", "locations", "startToken", "_this$_options4", "kind", "getTokenKindDesc", "getTokenDesc", "atToken", "openKind", "parseFn", "closeKind", "nodes", "delimiterKind", "require_visitor", "__commonJSMin", "exports", "init_cjs_shim", "visit", "visitInParallel", "getVisitFn", "_inspect", "_interopRequireDefault", "_ast", "obj", "QueryDocumentKeys", "BREAK", "root", "visitor", "visitorKeys", "stack", "inArray", "keys", "index", "edits", "node", "key", "parent", "path", "ancestors", "newRoot", "isLeaving", "isEdited", "clone", "_i2", "_Object$keys2", "k", "editOffset", "ii", "editKey", "editValue", "result", "visitFn", "_visitorKeys$node$kin", "visitors", "skipping", "fn", "kind", "kindVisitor", "kindSpecificVisitor", "specificVisitor", "specificKindVisitor", "require_find", "__commonJSMin", "exports", "init_cjs_shim", "find", "list", "predicate", "_i2", "value", "_default", "require_objectValues", "__commonJSMin", "exports", "init_cjs_shim", "objectValues", "obj", "key", "_default", "require_locatedError", "__commonJSMin", "exports", "init_cjs_shim", "locatedError", "_inspect", "_interopRequireDefault", "_GraphQLError", "obj", "rawOriginalError", "nodes", "path", "_nodes", "originalError", "require_assertValidName", "__commonJSMin", "exports", "init_cjs_shim", "assertValidName", "isValidNameError", "_devAssert", "_interopRequireDefault", "_GraphQLError", "obj", "NAME_RX", "name", "error", "require_objectEntries", "__commonJSMin", "exports", "init_cjs_shim", "objectEntries", "obj", "key", "_default", "require_keyMap", "__commonJSMin", "exports", "init_cjs_shim", "keyMap", "list", "keyFn", "map", "item", "require_mapValue", "__commonJSMin", "exports", "init_cjs_shim", "mapValue", "_objectEntries3", "_interopRequireDefault", "obj", "map", "fn", "result", "_i2", "_objectEntries2", "_ref2", "_key", "_value", "require_toObjMap", "__commonJSMin", "exports", "init_cjs_shim", "toObjMap", "_objectEntries3", "_interopRequireDefault", "obj", "map", "_i2", "_objectEntries2", "_ref2", "key", "value", "require_keyValMap", "__commonJSMin", "exports", "init_cjs_shim", "keyValMap", "list", "keyFn", "valFn", "map", "item", "require_didYouMean", "__commonJSMin", "exports", "init_cjs_shim", "didYouMean", "MAX_SUGGESTIONS", "firstArg", "secondArg", "_ref", "subMessage", "suggestionsArg", "message", "suggestions", "x", "selected", "lastItem", "require_identityFunc", "__commonJSMin", "exports", "init_cjs_shim", "identityFunc", "x", "require_naturalCompare", "__commonJSMin", "exports", "init_cjs_shim", "naturalCompare", "aStr", "bStr", "aIdx", "bIdx", "aChar", "bChar", "isDigit", "aNum", "DIGIT_0", "bNum", "DIGIT_9", "code", "require_suggestionList", "__commonJSMin", "exports", "init_cjs_shim", "suggestionList", "_naturalCompare", "_interopRequireDefault", "obj", "input", "options", "optionsByDistance", "lexicalDistance", "LexicalDistance", "threshold", "_i2", "option", "distance", "a", "b", "distanceDiff", "stringToArray", "_proto", "optionLowerCase", "tmp", "aLength", "bLength", "rows", "j", "i", "upRow", "currentRow", "smallestCell", "_j", "cost", "currentCell", "doubleDiagonalCell", "str", "strLength", "array", "require_printer", "__commonJSMin", "exports", "init_cjs_shim", "print", "_visitor", "_blockString", "ast", "printDocASTReducer", "MAX_LINE_LENGTH", "node", "join", "op", "name", "varDefs", "wrap", "directives", "selectionSet", "_ref", "variable", "type", "defaultValue", "_ref2", "selections", "block", "_ref3", "alias", "args", "prefix", "argsLine", "indent", "_ref4", "value", "_ref5", "_ref6", "typeCondition", "_ref7", "variableDefinitions", "_ref8", "_ref9", "_ref10", "key", "isBlockString", "_ref11", "_ref12", "_ref13", "values", "_ref14", "fields", "_ref15", "_ref16", "_ref17", "_ref18", "_ref19", "addDescription", "_ref20", "operationTypes", "_ref21", "operation", "_ref22", "_ref23", "interfaces", "_ref24", "hasMultilineItems", "_ref25", "_ref26", "_ref27", "types", "_ref28", "_ref29", "_ref30", "_ref31", "repeatable", "locations", "_ref32", "_ref33", "_ref34", "_ref35", "_ref36", "_ref37", "_ref38", "cb", "maybeArray", "_maybeArray$filter$jo", "separator", "x", "array", "start", "maybeString", "end", "str", "isMultiline", "require_valueFromASTUntyped", "__commonJSMin", "exports", "init_cjs_shim", "valueFromASTUntyped", "_inspect", "_interopRequireDefault", "_invariant", "_keyValMap", "_kinds", "obj", "valueNode", "variables", "node", "field", "require_definition", "__commonJSMin", "exports", "init_cjs_shim", "isType", "assertType", "isScalarType", "assertScalarType", "isObjectType", "assertObjectType", "isInterfaceType", "assertInterfaceType", "isUnionType", "assertUnionType", "isEnumType", "assertEnumType", "isInputObjectType", "assertInputObjectType", "isListType", "assertListType", "isNonNullType", "assertNonNullType", "isInputType", "assertInputType", "isOutputType", "assertOutputType", "isLeafType", "assertLeafType", "isCompositeType", "assertCompositeType", "isAbstractType", "assertAbstractType", "GraphQLList", "GraphQLNonNull", "isWrappingType", "assertWrappingType", "isNullableType", "assertNullableType", "getNullableType", "isNamedType", "assertNamedType", "getNamedType", "argsToArgsConfig", "isRequiredArgument", "isRequiredInputField", "_objectEntries", "_interopRequireDefault", "_symbols", "_inspect", "_keyMap", "_mapValue", "_toObjMap", "_devAssert", "_keyValMap", "_instanceOf", "_didYouMean", "_isObjectLike", "_identityFunc", "_defineInspect", "_suggestionList", "_GraphQLError", "_kinds", "_printer", "_valueFromASTUntyped", "obj", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "Constructor", "protoProps", "staticProps", "type", "GraphQLScalarType", "GraphQLObjectType", "GraphQLInterfaceType", "GraphQLUnionType", "GraphQLEnumType", "GraphQLInputObjectType", "ofType", "unwrappedType", "resolveThunk", "thunk", "undefineIfEmpty", "arr", "config", "_config$parseValue", "_config$serialize", "_config$parseLiteral", "parseValue", "node", "variables", "_proto", "_this$extensionASTNod", "defineFieldMap", "defineInterfaces", "_proto2", "fieldsToFieldsConfig", "_resolveThunk", "interfaces", "fieldMap", "isPlainObj", "fieldConfig", "fieldName", "_fieldConfig$args", "argsConfig", "args", "_ref", "argName", "argConfig", "fields", "field", "arg", "_proto3", "_this$extensionASTNod2", "defineTypes", "_proto4", "_this$extensionASTNod3", "types", "defineEnumValues", "enumValue", "value", "_proto5", "name", "outputValue", "inputValue", "valueStr", "didYouMeanEnumValue", "valueNode", "_variables", "_valueStr", "_this$extensionASTNod4", "values", "enumType", "unknownValueStr", "allNames", "suggestedValues", "typeName", "valueMap", "_ref2", "valueName", "valueConfig", "defineInputFieldMap", "_proto6", "_this$extensionASTNod5", "require_typeComparators", "__commonJSMin", "exports", "init_cjs_shim", "isEqualType", "isTypeSubTypeOf", "doTypesOverlap", "_definition", "typeA", "typeB", "schema", "maybeSubType", "superType", "type", "require_arrayFrom", "__commonJSMin", "exports", "init_cjs_shim", "_symbols", "arrayFrom", "obj", "mapFn", "thisArg", "iteratorMethod", "iterator", "result", "step", "i", "length", "_result", "_i", "_default", "require_isFinite", "__commonJSMin", "exports", "init_cjs_shim", "isFinitePolyfill", "value", "_default", "require_safeArrayFrom", "__commonJSMin", "exports", "init_cjs_shim", "safeArrayFrom", "_symbols", "_typeof", "obj", "collection", "mapFn", "item", "iteratorMethod", "iterator", "result", "step", "i", "length", "_result", "_i", "require_isInteger", "__commonJSMin", "exports", "init_cjs_shim", "isInteger", "value", "_default", "require_scalars", "__commonJSMin", "exports", "init_cjs_shim", "isSpecifiedScalarType", "_isFinite", "_interopRequireDefault", "_isInteger", "_inspect", "_isObjectLike", "_kinds", "_printer", "_GraphQLError", "_definition", "obj", "MAX_INT", "MIN_INT", "serializeInt", "outputValue", "coercedValue", "serializeObject", "num", "coerceInt", "inputValue", "GraphQLInt", "valueNode", "serializeFloat", "coerceFloat", "GraphQLFloat", "valueOfResult", "serializeString", "coerceString", "GraphQLString", "serializeBoolean", "coerceBoolean", "GraphQLBoolean", "serializeID", "coerceID", "GraphQLID", "specifiedScalarTypes", "type", "_ref", "name", "require_astFromValue", "__commonJSMin", "exports", "init_cjs_shim", "astFromValue", "_isFinite", "_interopRequireDefault", "_objectValues3", "_inspect", "_invariant", "_isObjectLike", "_safeArrayFrom", "_kinds", "_scalars", "_definition", "obj", "value", "type", "astValue", "itemType", "items", "valuesNodes", "_i2", "item", "itemNode", "fieldNodes", "_i4", "_objectValues2", "field", "fieldValue", "serialized", "stringNum", "integerStringRegExp", "require_introspection", "__commonJSMin", "exports", "init_cjs_shim", "isIntrospectionType", "_objectValues", "_interopRequireDefault", "_inspect", "_invariant", "_printer", "_directiveLocation", "_astFromValue", "_scalars", "_definition", "obj", "__Schema", "schema", "__Type", "__Directive", "directive", "__DirectiveLocation", "__InputValue", "field", "_ref", "includeDeprecated", "arg", "__TypeKind", "type", "TypeKind", "__Field", "_ref2", "fields", "_args", "_context", "_ref3", "__EnumValue", "_ref4", "values", "_ref5", "_ref6", "inputValue", "defaultValue", "valueAST", "enumValue", "SchemaMetaFieldDef", "_source", "_ref7", "TypeMetaFieldDef", "_ref8", "_ref9", "name", "TypeNameMetaFieldDef", "_ref10", "parentType", "introspectionTypes", "_ref11", "require_directives", "__commonJSMin", "exports", "init_cjs_shim", "isDirective", "assertDirective", "isSpecifiedDirective", "_objectEntries", "_interopRequireDefault", "_symbols", "_inspect", "_toObjMap", "_devAssert", "_instanceOf", "_isObjectLike", "_defineInspect", "_directiveLocation", "_scalars", "_definition", "obj", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "Constructor", "protoProps", "staticProps", "directive", "GraphQLDirective", "config", "_config$isRepeatable", "_config$args", "args", "_ref", "argName", "argConfig", "_proto", "GraphQLIncludeDirective", "GraphQLSkipDirective", "DEFAULT_DEPRECATION_REASON", "GraphQLDeprecatedDirective", "GraphQLSpecifiedByDirective", "specifiedDirectives", "_ref2", "name", "require_schema", "__commonJSMin", "exports", "init_cjs_shim", "isSchema", "assertSchema", "_find", "_interopRequireDefault", "_arrayFrom3", "_objectValues5", "_symbols", "_inspect", "_toObjMap", "_devAssert", "_instanceOf", "_isObjectLike", "_introspection", "_directives", "_definition", "obj", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "Constructor", "protoProps", "staticProps", "schema", "GraphQLSchema", "config", "_config$directives", "allReferencedTypes", "_i2", "_config$types2", "type", "collectReferencedTypes", "_i4", "_this$_directives2", "directive", "_i6", "_directive$args2", "arg", "_i8", "_arrayFrom2", "namedType", "typeName", "_i10", "_namedType$getInterfa2", "iface", "implementations", "_i12", "_namedType$getInterfa4", "_iface", "_implementations", "_proto", "name", "abstractType", "interfaceType", "possibleType", "maybeSubType", "map", "_i14", "_abstractType$getType2", "_i16", "_implementations$obje2", "_type", "_i18", "_implementations$inte2", "_type2", "_this$extensionASTNod", "typeSet", "_i20", "_namedType$getTypes2", "memberType", "_i22", "_namedType$getInterfa6", "_i24", "_objectValues2", "field", "_i26", "_field$args2", "_i28", "_objectValues4", "_field", "require_validate", "__commonJSMin", "exports", "init_cjs_shim", "validateSchema", "assertValidSchema", "_find", "_interopRequireDefault", "_objectValues5", "_inspect", "_GraphQLError", "_locatedError", "_assertValidName", "_typeComparators", "_schema", "_introspection", "_directives", "_definition", "obj", "schema", "context", "SchemaValidationContext", "validateRootTypes", "validateDirectives", "validateTypes", "errors", "error", "_proto", "message", "nodes", "_nodes", "queryType", "_getOperationTypeNode", "getOperationTypeNode", "mutationType", "_getOperationTypeNode2", "subscriptionType", "_getOperationTypeNode3", "operation", "operationNodes", "getAllSubNodes", "node", "_i2", "_i4", "_context$schema$getDi2", "directive", "validateName", "_i6", "_directive$args2", "arg", "_arg$astNode", "getDeprecatedDirectiveNode", "validateInputObjectCircularRefs", "createInputObjectCircularRefsValidator", "typeMap", "_i8", "_objectValues2", "type", "validateFields", "validateInterfaces", "validateUnionMembers", "validateEnumValues", "validateInputFields", "fields", "getAllNodes", "_i10", "field", "_field$astNode", "_i12", "_field$args2", "argName", "_arg$astNode2", "_arg$astNode3", "ifaceTypeNames", "_i14", "_type$getInterfaces2", "iface", "getAllImplementsInterfaceNodes", "validateTypeImplementsAncestors", "validateTypeImplementsInterface", "typeFieldMap", "_i16", "_objectValues4", "ifaceField", "fieldName", "typeField", "_ifaceField$astNode", "_typeField$astNode", "_loop", "_i18", "_ifaceField$args2", "ifaceArg", "typeArg", "_ifaceArg$astNode", "_typeArg$astNode", "_ret", "_loop2", "_i20", "_typeField$args2", "ifaceInterfaces", "_i22", "_iface$getInterfaces2", "transitive", "union", "memberTypes", "includedTypeNames", "_i24", "memberType", "getUnionMemberTypeNodes", "enumType", "enumValues", "_i26", "enumValue", "valueName", "inputObj", "_i28", "_field$astNode2", "_field$astNode3", "visitedTypes", "fieldPath", "fieldPathIndexByTypeName", "detectCycleRecursive", "_i30", "fieldType", "cycleIndex", "cyclePath", "pathStr", "fieldObj", "object", "astNode", "extensionASTNodes", "getter", "subNodes", "_i32", "_getAllNodes2", "_getter", "typeNode", "ifaceNode", "typeName", "unionNode", "definitionNode", "_definitionNode$direc", "require_typeFromAST", "__commonJSMin", "exports", "init_cjs_shim", "typeFromAST", "_inspect", "_interopRequireDefault", "_invariant", "_kinds", "_definition", "obj", "schema", "typeNode", "innerType", "require_TypeInfo", "__commonJSMin", "exports", "init_cjs_shim", "visitWithTypeInfo", "_find", "_interopRequireDefault", "_kinds", "_ast", "_visitor", "_definition", "_introspection", "_typeFromAST", "obj", "TypeInfo", "schema", "getFieldDefFn", "initialType", "getFieldDef", "_proto", "node", "namedType", "parentType", "fieldDef", "fieldType", "type", "typeConditionAST", "outputType", "inputType", "_this$getDirective", "argDef", "argType", "fieldOrDirective", "arg", "listType", "itemType", "objectType", "inputFieldType", "inputField", "enumType", "enumValue", "fieldNode", "name", "typeInfo", "visitor", "fn", "result", "require_predicates", "__commonJSMin", "exports", "init_cjs_shim", "isDefinitionNode", "isExecutableDefinitionNode", "isSelectionNode", "isValueNode", "isTypeNode", "isTypeSystemDefinitionNode", "isTypeDefinitionNode", "isTypeSystemExtensionNode", "isTypeExtensionNode", "_kinds", "node", "require_ExecutableDefinitionsRule", "__commonJSMin", "exports", "init_cjs_shim", "ExecutableDefinitionsRule", "_GraphQLError", "_kinds", "_predicates", "context", "node", "_i2", "_node$definitions2", "definition", "defName", "require_UniqueOperationNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "UniqueOperationNamesRule", "_GraphQLError", "context", "knownOperationNames", "node", "operationName", "require_LoneAnonymousOperationRule", "__commonJSMin", "exports", "init_cjs_shim", "LoneAnonymousOperationRule", "_GraphQLError", "_kinds", "context", "operationCount", "node", "definition", "require_SingleFieldSubscriptionsRule", "__commonJSMin", "exports", "init_cjs_shim", "SingleFieldSubscriptionsRule", "_GraphQLError", "context", "node", "require_KnownTypeNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "KnownTypeNamesRule", "_didYouMean", "_interopRequireDefault", "_suggestionList", "_GraphQLError", "_predicates", "_scalars", "_introspection", "obj", "context", "schema", "existingTypesMap", "definedTypes", "_i2", "_context$getDocument$2", "def", "typeNames", "node", "_1", "parent", "_2", "ancestors", "typeName", "_ancestors$", "definitionNode", "isSDL", "isSDLNode", "isStandardTypeName", "suggestedTypes", "standardTypeNames", "type", "value", "require_FragmentsOnCompositeTypesRule", "__commonJSMin", "exports", "init_cjs_shim", "FragmentsOnCompositeTypesRule", "_GraphQLError", "_printer", "_definition", "_typeFromAST", "context", "node", "typeCondition", "type", "typeStr", "require_VariablesAreInputTypesRule", "__commonJSMin", "exports", "init_cjs_shim", "VariablesAreInputTypesRule", "_GraphQLError", "_printer", "_definition", "_typeFromAST", "context", "node", "type", "variableName", "typeName", "require_ScalarLeafsRule", "__commonJSMin", "exports", "init_cjs_shim", "ScalarLeafsRule", "_inspect", "_interopRequireDefault", "_GraphQLError", "_definition", "obj", "context", "node", "type", "selectionSet", "fieldName", "typeStr", "_fieldName", "_typeStr", "require_FieldsOnCorrectTypeRule", "__commonJSMin", "exports", "init_cjs_shim", "FieldsOnCorrectTypeRule", "_arrayFrom", "_interopRequireDefault", "_didYouMean", "_suggestionList", "_naturalCompare", "_GraphQLError", "_definition", "obj", "context", "node", "type", "fieldDef", "schema", "fieldName", "suggestion", "getSuggestedTypeNames", "getSuggestedFieldNames", "suggestedTypes", "usageCount", "_i2", "_schema$getPossibleTy2", "possibleType", "_i4", "_possibleType$getInte2", "_usageCount$possibleI", "possibleInterface", "typeA", "typeB", "usageCountDiff", "x", "possibleFieldNames", "require_UniqueFragmentNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "UniqueFragmentNamesRule", "_GraphQLError", "context", "knownFragmentNames", "node", "fragmentName", "require_KnownFragmentNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "KnownFragmentNamesRule", "_GraphQLError", "context", "node", "fragmentName", "fragment", "require_NoUnusedFragmentsRule", "__commonJSMin", "exports", "init_cjs_shim", "NoUnusedFragmentsRule", "_GraphQLError", "context", "operationDefs", "fragmentDefs", "node", "fragmentNameUsed", "_i2", "operation", "_i4", "_context$getRecursive2", "fragment", "_i6", "fragmentDef", "fragName", "require_PossibleFragmentSpreadsRule", "__commonJSMin", "exports", "init_cjs_shim", "PossibleFragmentSpreadsRule", "_inspect", "_interopRequireDefault", "_GraphQLError", "_definition", "_typeFromAST", "_typeComparators", "obj", "context", "node", "fragType", "parentType", "parentTypeStr", "fragTypeStr", "fragName", "getFragmentType", "name", "frag", "type", "require_NoFragmentCyclesRule", "__commonJSMin", "exports", "init_cjs_shim", "NoFragmentCyclesRule", "_GraphQLError", "context", "visitedFrags", "spreadPath", "spreadPathIndexByName", "node", "detectCycleRecursive", "fragment", "fragmentName", "spreadNodes", "_i2", "spreadNode", "spreadName", "cycleIndex", "spreadFragment", "cyclePath", "viaPath", "s", "require_UniqueVariableNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "UniqueVariableNamesRule", "_GraphQLError", "context", "knownVariableNames", "node", "variableName", "require_NoUndefinedVariablesRule", "__commonJSMin", "exports", "init_cjs_shim", "NoUndefinedVariablesRule", "_GraphQLError", "context", "variableNameDefined", "operation", "usages", "_i2", "_ref2", "node", "varName", "require_NoUnusedVariablesRule", "__commonJSMin", "exports", "init_cjs_shim", "NoUnusedVariablesRule", "_GraphQLError", "context", "variableDefs", "operation", "variableNameUsed", "usages", "_i2", "_ref2", "node", "_i4", "_variableDefs2", "variableDef", "variableName", "def", "require_KnownDirectivesRule", "__commonJSMin", "exports", "init_cjs_shim", "KnownDirectivesRule", "_inspect", "_interopRequireDefault", "_invariant", "_GraphQLError", "_kinds", "_directiveLocation", "_directives", "obj", "context", "locationsMap", "schema", "definedDirectives", "_i2", "directive", "astDefinitions", "_i4", "def", "name", "node", "_key", "_parent", "_path", "ancestors", "locations", "candidateLocation", "getDirectiveLocationForASTPath", "appliedTo", "getDirectiveLocationForOperation", "parentNode", "operation", "require_UniqueDirectivesPerLocationRule", "__commonJSMin", "exports", "init_cjs_shim", "UniqueDirectivesPerLocationRule", "_GraphQLError", "_kinds", "_predicates", "_directives", "context", "uniqueDirectiveMap", "schema", "definedDirectives", "_i2", "directive", "astDefinitions", "_i4", "def", "schemaDirectives", "typeDirectivesMap", "node", "seenDirectives", "typeName", "_i6", "_node$directives2", "_directive", "directiveName", "require_KnownArgumentNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "KnownArgumentNamesRule", "KnownArgumentNamesOnDirectivesRule", "_didYouMean", "_interopRequireDefault", "_suggestionList", "_GraphQLError", "_kinds", "_directives", "obj", "ownKeys", "object", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread", "target", "i", "source", "key", "_defineProperty", "value", "context", "argNode", "argDef", "fieldDef", "parentType", "argName", "knownArgsNames", "arg", "suggestions", "directiveArgs", "schema", "definedDirectives", "_i2", "directive", "astDefinitions", "_i4", "def", "_def$arguments", "argsNodes", "directiveNode", "directiveName", "knownArgs", "_i6", "_directiveNode$argume2", "require_UniqueArgumentNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "UniqueArgumentNamesRule", "_GraphQLError", "context", "knownArgNames", "node", "argName", "require_ValuesOfCorrectTypeRule", "__commonJSMin", "exports", "init_cjs_shim", "ValuesOfCorrectTypeRule", "_objectValues3", "_interopRequireDefault", "_keyMap", "_inspect", "_didYouMean", "_suggestionList", "_GraphQLError", "_printer", "_definition", "obj", "context", "node", "type", "isValidValueNode", "fieldNodeMap", "field", "_i2", "_objectValues2", "fieldDef", "fieldNode", "typeStr", "parentType", "fieldType", "suggestions", "locationType", "parseResult", "_typeStr", "error", "_typeStr2", "require_ProvidedRequiredArgumentsRule", "__commonJSMin", "exports", "init_cjs_shim", "ProvidedRequiredArgumentsRule", "ProvidedRequiredArgumentsOnDirectivesRule", "_inspect", "_interopRequireDefault", "_keyMap", "_GraphQLError", "_kinds", "_printer", "_directives", "_definition", "obj", "ownKeys", "object", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread", "target", "i", "source", "key", "_defineProperty", "value", "context", "fieldNode", "_fieldNode$arguments", "fieldDef", "argNodes", "argNodeMap", "arg", "_i2", "_fieldDef$args2", "argDef", "argNode", "argTypeStr", "requiredArgsMap", "schema", "definedDirectives", "_i4", "directive", "astDefinitions", "_i6", "def", "_def$arguments", "isRequiredArgumentNode", "directiveNode", "directiveName", "requiredArgs", "_directiveNode$argume", "_argNodes", "_i8", "_Object$keys2", "argName", "argType", "require_VariablesInAllowedPositionRule", "__commonJSMin", "exports", "init_cjs_shim", "VariablesInAllowedPositionRule", "_inspect", "_interopRequireDefault", "_GraphQLError", "_kinds", "_definition", "_typeFromAST", "_typeComparators", "obj", "context", "varDefMap", "operation", "usages", "_i2", "_ref2", "node", "type", "defaultValue", "varName", "varDef", "schema", "varType", "allowedVariableUsage", "varTypeStr", "typeStr", "varDefaultValue", "locationType", "locationDefaultValue", "hasNonNullVariableDefaultValue", "hasLocationDefaultValue", "nullableLocationType", "require_OverlappingFieldsCanBeMergedRule", "__commonJSMin", "exports", "init_cjs_shim", "OverlappingFieldsCanBeMergedRule", "_find", "_interopRequireDefault", "_objectEntries3", "_inspect", "_GraphQLError", "_kinds", "_printer", "_definition", "_typeFromAST", "obj", "reasonMessage", "reason", "_ref", "responseName", "subReason", "context", "comparedFragmentPairs", "PairSet", "cachedFieldsAndFragmentNames", "selectionSet", "conflicts", "findConflictsWithinSelectionSet", "_i2", "_ref3", "_ref2$", "fields1", "fields2", "reasonMsg", "parentType", "_getFieldsAndFragment", "getFieldsAndFragmentNames", "fieldMap", "fragmentNames", "collectConflictsWithin", "i", "collectConflictsBetweenFieldsAndFragment", "j", "collectConflictsBetweenFragments", "areMutuallyExclusive", "fragmentName", "fragment", "_getReferencedFieldsA", "getReferencedFieldsAndFragmentNames", "fieldMap2", "fragmentNames2", "collectConflictsBetween", "fragmentName1", "fragmentName2", "fragment1", "fragment2", "_getReferencedFieldsA2", "fieldMap1", "fragmentNames1", "_getReferencedFieldsA3", "findConflictsBetweenSubSelectionSets", "parentType1", "selectionSet1", "parentType2", "selectionSet2", "_getFieldsAndFragment2", "_getFieldsAndFragment3", "_i3", "_j", "_i5", "_objectEntries2", "_ref5", "fields", "conflict", "findConflict", "parentFieldsAreMutuallyExclusive", "_i7", "_Object$keys2", "field1", "field2", "node1", "def1", "node2", "def2", "_node1$arguments", "_node2$arguments", "name1", "name2", "args1", "args2", "sameArguments", "type1", "type2", "doTypesConflict", "subfieldConflicts", "arguments1", "arguments2", "argument1", "argument2", "argument", "sameValue", "value1", "value2", "cached", "nodeAndDefs", "_collectFieldsAndFragmentNames", "fragmentType", "_i9", "_selectionSet$selecti2", "selection", "fieldName", "fieldDef", "typeCondition", "inlineFragmentType", "_ref6", "allFields", "_ref7", "_ref8", "_proto", "a", "b", "first", "result", "map", "require_UniqueInputFieldNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "UniqueInputFieldNamesRule", "_GraphQLError", "context", "knownNameStack", "knownNames", "node", "fieldName", "require_LoneSchemaDefinitionRule", "__commonJSMin", "exports", "init_cjs_shim", "LoneSchemaDefinitionRule", "_GraphQLError", "context", "_ref", "_ref2", "_oldSchema$astNode", "oldSchema", "alreadyDefined", "schemaDefinitionsCount", "node", "require_UniqueOperationTypesRule", "__commonJSMin", "exports", "init_cjs_shim", "UniqueOperationTypesRule", "_GraphQLError", "context", "schema", "definedOperationTypes", "existingOperationTypes", "checkOperationTypes", "node", "_node$operationTypes", "operationTypesNodes", "_i2", "operationType", "operation", "alreadyDefinedOperationType", "require_UniqueTypeNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "UniqueTypeNamesRule", "_GraphQLError", "context", "knownTypeNames", "schema", "checkTypeName", "node", "typeName", "require_UniqueEnumValueNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "UniqueEnumValueNamesRule", "_GraphQLError", "_definition", "context", "schema", "existingTypeMap", "knownValueNames", "checkValueUniqueness", "node", "_node$values", "typeName", "valueNodes", "valueNames", "_i2", "valueDef", "valueName", "existingType", "require_UniqueFieldDefinitionNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "UniqueFieldDefinitionNamesRule", "_GraphQLError", "_definition", "context", "schema", "existingTypeMap", "knownFieldNames", "checkFieldUniqueness", "node", "_node$fields", "typeName", "fieldNodes", "fieldNames", "_i2", "fieldDef", "fieldName", "hasField", "type", "require_UniqueDirectiveNamesRule", "__commonJSMin", "exports", "init_cjs_shim", "UniqueDirectiveNamesRule", "_GraphQLError", "context", "knownDirectiveNames", "schema", "node", "directiveName", "require_PossibleTypeExtensionsRule", "__commonJSMin", "exports", "init_cjs_shim", "PossibleTypeExtensionsRule", "_inspect", "_interopRequireDefault", "_invariant", "_didYouMean", "_suggestionList", "_GraphQLError", "_kinds", "_predicates", "_definition", "_defKindToExtKind", "obj", "_defineProperty", "key", "value", "context", "schema", "definedTypes", "_i2", "_context$getDocument$2", "def", "checkExtension", "node", "typeName", "defNode", "existingType", "expectedKind", "defKindToExtKind", "typeToExtKind", "kindStr", "extensionKindToTypeName", "allTypeNames", "suggestedTypes", "type", "kind", "require_specifiedRules", "__commonJSMin", "exports", "init_cjs_shim", "_ExecutableDefinitionsRule", "_UniqueOperationNamesRule", "_LoneAnonymousOperationRule", "_SingleFieldSubscriptionsRule", "_KnownTypeNamesRule", "_FragmentsOnCompositeTypesRule", "_VariablesAreInputTypesRule", "_ScalarLeafsRule", "_FieldsOnCorrectTypeRule", "_UniqueFragmentNamesRule", "_KnownFragmentNamesRule", "_NoUnusedFragmentsRule", "_PossibleFragmentSpreadsRule", "_NoFragmentCyclesRule", "_UniqueVariableNamesRule", "_NoUndefinedVariablesRule", "_NoUnusedVariablesRule", "_KnownDirectivesRule", "_UniqueDirectivesPerLocationRule", "_KnownArgumentNamesRule", "_UniqueArgumentNamesRule", "_ValuesOfCorrectTypeRule", "_ProvidedRequiredArgumentsRule", "_VariablesInAllowedPositionRule", "_OverlappingFieldsCanBeMergedRule", "_UniqueInputFieldNamesRule", "_LoneSchemaDefinitionRule", "_UniqueOperationTypesRule", "_UniqueTypeNamesRule", "_UniqueEnumValueNamesRule", "_UniqueFieldDefinitionNamesRule", "_UniqueDirectiveNamesRule", "_PossibleTypeExtensionsRule", "specifiedRules", "specifiedSDLRules", "require_ValidationContext", "__commonJSMin", "exports", "init_cjs_shim", "_kinds", "_visitor", "_TypeInfo", "_inheritsLoose", "subClass", "superClass", "ASTValidationContext", "ast", "onError", "_proto", "error", "name", "fragments", "frags", "statement", "node", "spreads", "setsToVisit", "set", "_i2", "_set$selections2", "selection", "operation", "collectedNames", "nodesToVisit", "_i4", "_this$getFragmentSpre2", "spread", "fragName", "fragment", "SDLValidationContext", "_ASTValidationContext", "schema", "_this", "_proto2", "ValidationContext", "_ASTValidationContext2", "typeInfo", "_this2", "_proto3", "usages", "newUsages", "variable", "_i6", "_this$getRecursivelyR2", "frag", "require_validate", "__commonJSMin", "exports", "init_cjs_shim", "validate", "validateSDL", "assertValidSDL", "assertValidSDLExtension", "_devAssert", "_interopRequireDefault", "_GraphQLError", "_visitor", "_validate", "_TypeInfo", "_specifiedRules", "_ValidationContext", "obj", "schema", "documentAST", "rules", "typeInfo", "options", "abortObj", "errors", "context", "error", "visitor", "rule", "e", "schemaToExtend", "visitors", "require_memoize3", "__commonJSMin", "exports", "init_cjs_shim", "memoize3", "fn", "cache0", "a1", "a2", "a3", "cache1", "cache2", "cachedValue", "newValue", "require_promiseReduce", "__commonJSMin", "exports", "init_cjs_shim", "promiseReduce", "_isPromise", "_interopRequireDefault", "obj", "values", "callback", "initialValue", "previous", "value", "resolved", "require_promiseForObject", "__commonJSMin", "exports", "init_cjs_shim", "promiseForObject", "object", "keys", "valuesAndPromises", "name", "values", "resolvedObject", "value", "i", "require_Path", "__commonJSMin", "exports", "init_cjs_shim", "addPath", "pathToArray", "prev", "key", "typename", "path", "flattened", "curr", "require_getOperationRootType", "__commonJSMin", "exports", "init_cjs_shim", "getOperationRootType", "_GraphQLError", "schema", "operation", "queryType", "mutationType", "subscriptionType", "require_printPathArray", "__commonJSMin", "exports", "init_cjs_shim", "printPathArray", "path", "key", "require_valueFromAST", "__commonJSMin", "exports", "init_cjs_shim", "valueFromAST", "_objectValues3", "_interopRequireDefault", "_keyMap", "_inspect", "_invariant", "_kinds", "_definition", "obj", "valueNode", "type", "variables", "variableName", "variableValue", "itemType", "coercedValues", "_i2", "_valueNode$values2", "itemNode", "isMissingVariable", "itemValue", "coercedValue", "coercedObj", "fieldNodes", "field", "_i4", "_objectValues2", "fieldNode", "fieldValue", "result", "require_coerceInputValue", "__commonJSMin", "exports", "init_cjs_shim", "coerceInputValue", "_objectValues3", "_interopRequireDefault", "_inspect", "_invariant", "_didYouMean", "_isObjectLike", "_safeArrayFrom", "_suggestionList", "_printPathArray", "_Path", "_GraphQLError", "_definition", "obj", "inputValue", "type", "onError", "defaultOnError", "coerceInputValueImpl", "path", "invalidValue", "error", "errorPrefix", "itemType", "coercedList", "itemValue", "index", "itemPath", "coercedValue", "fieldDefs", "_i2", "_objectValues2", "field", "fieldValue", "typeStr", "_i4", "_Object$keys2", "fieldName", "suggestions", "parseResult", "require_values", "__commonJSMin", "exports", "init_cjs_shim", "getVariableValues", "getArgumentValues", "getDirectiveValues", "_find", "_interopRequireDefault", "_keyMap", "_inspect", "_printPathArray", "_GraphQLError", "_kinds", "_printer", "_definition", "_typeFromAST", "_valueFromAST", "_coerceInputValue", "obj", "schema", "varDefNodes", "inputs", "options", "errors", "maxErrors", "coerced", "coerceVariableValues", "error", "onError", "coercedValues", "_loop", "_i2", "varDefNode", "varName", "varType", "varTypeStr", "hasOwnProperty", "_varTypeStr", "value", "_varTypeStr2", "path", "invalidValue", "prefix", "_ret", "def", "node", "variableValues", "_node$arguments", "argumentNodes", "argNodeMap", "arg", "_i4", "_def$args2", "argDef", "name", "argType", "argumentNode", "valueNode", "isNull", "variableName", "coercedValue", "directiveDef", "directiveNode", "directive", "prop", "require_execute", "__commonJSMin", "exports", "init_cjs_shim", "execute", "executeSync", "assertValidExecutionArguments", "buildExecutionContext", "collectFields", "buildResolveInfo", "getFieldDef", "_inspect", "_interopRequireDefault", "_memoize", "_invariant", "_devAssert", "_isPromise", "_isObjectLike", "_safeArrayFrom", "_promiseReduce", "_promiseForObject", "_Path", "_GraphQLError", "_locatedError", "_kinds", "_validate", "_introspection", "_directives", "_definition", "_typeFromAST", "_getOperationRootType", "_values", "obj", "argsOrSchema", "document", "rootValue", "contextValue", "variableValues", "operationName", "fieldResolver", "typeResolver", "executeImpl", "args", "result", "schema", "exeContext", "data", "executeOperation", "buildResponse", "resolved", "rawVariableValues", "_definition$name", "_operation$variableDe", "operation", "fragments", "_i2", "_document$definitions2", "definition", "variableDefinitions", "coercedVariableValues", "defaultFieldResolver", "defaultTypeResolver", "type", "fields", "path", "executeFieldsSerially", "executeFields", "error", "parentType", "sourceValue", "results", "responseName", "fieldNodes", "fieldPath", "resolveField", "resolvedResult", "containsPromise", "_i4", "_Object$keys2", "runtimeType", "selectionSet", "visitedFragmentNames", "_i6", "_selectionSet$selecti2", "selection", "shouldIncludeNode", "name", "getFieldEntryKey", "doesFragmentConditionMatch", "fragName", "fragment", "node", "skip", "include", "typeConditionNode", "conditionalType", "source", "_fieldDef$resolve", "fieldNode", "fieldName", "fieldDef", "returnType", "resolveFn", "info", "_contextValue", "completed", "completeValue", "rawError", "handleFieldError", "completeListValue", "completeLeafValue", "completeAbstractValue", "completeObjectValue", "itemType", "completedResults", "item", "index", "itemPath", "completedItem", "serializedResult", "_returnType$resolveTy", "resolveTypeFn", "resolvedRuntimeType", "ensureValidRuntimeType", "runtimeTypeOrName", "runtimeTypeName", "isTypeOf", "resolvedIsTypeOf", "invalidReturnTypeError", "collectAndExecuteSubfields", "subFieldNodes", "collectSubfields", "_collectSubfields", "_i8", "value", "abstractType", "possibleTypes", "promisedIsTypeOfResults", "i", "isTypeOfResult", "isTypeOfResults", "_i9", "property", "require_graphql", "__commonJSMin", "exports", "init_cjs_shim", "graphql", "graphqlSync", "_isPromise", "_interopRequireDefault", "_parser", "_validate", "_validate2", "_execute", "obj", "argsOrSchema", "source", "rootValue", "contextValue", "variableValues", "operationName", "fieldResolver", "typeResolver", "_arguments", "resolve", "graphqlImpl", "result", "args", "schema", "schemaValidationErrors", "document", "syntaxError", "validationErrors", "require_type", "__commonJSMin", "exports", "init_cjs_shim", "_schema", "_definition", "_directives", "_scalars", "_introspection", "_validate", "require_language", "__commonJSMin", "exports", "init_cjs_shim", "_source", "_location", "_printLocation", "_kinds", "_tokenKind", "_lexer", "_parser", "_printer", "_visitor", "_ast", "_predicates", "_directiveLocation", "require_execution", "__commonJSMin", "exports", "init_cjs_shim", "_Path", "_execute", "_values", "require_isAsyncIterable", "__commonJSMin", "exports", "init_cjs_shim", "isAsyncIterable", "_symbols", "maybeAsyncIterable", "require_mapAsyncIterator", "__commonJSMin", "exports", "init_cjs_shim", "mapAsyncIterator", "_symbols", "_defineProperty", "obj", "key", "value", "iterable", "callback", "rejectCallback", "iteratorMethod", "iterator", "$return", "abruptClose", "error", "rethrow", "mapResult", "result", "asyncMapValue", "iteratorResult", "mapReject", "reject", "resolve", "require_subscribe", "__commonJSMin", "exports", "init_cjs_shim", "subscribe", "createSourceEventStream", "_inspect", "_interopRequireDefault", "_isAsyncIterable", "_Path", "_GraphQLError", "_locatedError", "_values", "_execute", "_getOperationRootType", "_mapAsyncIterator", "obj", "argsOrSchema", "document", "rootValue", "contextValue", "variableValues", "operationName", "fieldResolver", "subscribeFieldResolver", "subscribeImpl", "reportGraphQLError", "error", "args", "schema", "sourcePromise", "mapSourceToResponse", "payload", "resultOrStream", "resolve", "exeContext", "executeSubscription", "operation", "type", "fields", "responseNames", "responseName", "fieldNodes", "fieldNode", "fieldName", "fieldDef", "path", "info", "resolveResult", "_fieldDef$subscribe", "resolveFn", "eventStream", "require_subscription", "__commonJSMin", "exports", "init_cjs_shim", "_subscribe", "require_NoDeprecatedCustomRule", "__commonJSMin", "exports", "init_cjs_shim", "NoDeprecatedCustomRule", "_invariant", "_interopRequireDefault", "_GraphQLError", "_definition", "obj", "context", "node", "fieldDef", "deprecationReason", "parentType", "argDef", "directiveDef", "inputObjectDef", "inputFieldDef", "enumValueDef", "enumTypeDef", "require_NoSchemaIntrospectionCustomRule", "__commonJSMin", "exports", "init_cjs_shim", "NoSchemaIntrospectionCustomRule", "_GraphQLError", "_definition", "_introspection", "context", "node", "type", "require_validation", "__commonJSMin", "exports", "init_cjs_shim", "_validate", "_ValidationContext", "_specifiedRules", "_ExecutableDefinitionsRule", "_FieldsOnCorrectTypeRule", "_FragmentsOnCompositeTypesRule", "_KnownArgumentNamesRule", "_KnownDirectivesRule", "_KnownFragmentNamesRule", "_KnownTypeNamesRule", "_LoneAnonymousOperationRule", "_NoFragmentCyclesRule", "_NoUndefinedVariablesRule", "_NoUnusedFragmentsRule", "_NoUnusedVariablesRule", "_OverlappingFieldsCanBeMergedRule", "_PossibleFragmentSpreadsRule", "_ProvidedRequiredArgumentsRule", "_ScalarLeafsRule", "_SingleFieldSubscriptionsRule", "_UniqueArgumentNamesRule", "_UniqueDirectivesPerLocationRule", "_UniqueFragmentNamesRule", "_UniqueInputFieldNamesRule", "_UniqueOperationNamesRule", "_UniqueVariableNamesRule", "_ValuesOfCorrectTypeRule", "_VariablesAreInputTypesRule", "_VariablesInAllowedPositionRule", "_LoneSchemaDefinitionRule", "_UniqueOperationTypesRule", "_UniqueTypeNamesRule", "_UniqueEnumValueNamesRule", "_UniqueFieldDefinitionNamesRule", "_UniqueDirectiveNamesRule", "_PossibleTypeExtensionsRule", "_NoDeprecatedCustomRule", "_NoSchemaIntrospectionCustomRule", "require_formatError", "__commonJSMin", "exports", "init_cjs_shim", "formatError", "_devAssert", "_interopRequireDefault", "obj", "error", "_error$message", "message", "locations", "path", "extensions", "require_error", "__commonJSMin", "exports", "init_cjs_shim", "_GraphQLError", "_syntaxError", "_locatedError", "_formatError", "require_getIntrospectionQuery", "__commonJSMin", "exports", "init_cjs_shim", "getIntrospectionQuery", "ownKeys", "object", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread", "target", "i", "source", "key", "_defineProperty", "obj", "value", "options", "optionsWithDefault", "descriptions", "specifiedByUrl", "directiveIsRepeatable", "schemaDescription", "inputDeprecation", "str", "require_getOperationAST", "__commonJSMin", "exports", "init_cjs_shim", "getOperationAST", "_kinds", "documentAST", "operationName", "operation", "_i2", "_documentAST$definiti2", "definition", "_definition$name", "require_introspectionFromSchema", "__commonJSMin", "exports", "init_cjs_shim", "introspectionFromSchema", "_invariant", "_interopRequireDefault", "_parser", "_execute", "_getIntrospectionQuery", "obj", "ownKeys", "object", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread", "target", "i", "source", "key", "_defineProperty", "value", "schema", "options", "optionsWithDefaults", "document", "result", "require_buildClientSchema", "__commonJSMin", "exports", "init_cjs_shim", "buildClientSchema", "_objectValues", "_interopRequireDefault", "_inspect", "_devAssert", "_keyValMap", "_isObjectLike", "_parser", "_schema", "_directives", "_scalars", "_introspection", "_definition", "_valueFromAST", "obj", "introspection", "options", "schemaIntrospection", "typeMap", "typeIntrospection", "buildType", "_i2", "_ref2", "stdType", "queryType", "getObjectType", "mutationType", "subscriptionType", "directives", "buildDirective", "getType", "typeRef", "itemRef", "nullableRef", "nullableType", "getNamedType", "typeName", "type", "getInterfaceType", "buildScalarDef", "buildObjectDef", "buildInterfaceDef", "buildUnionDef", "buildEnumDef", "buildInputObjectDef", "typeStr", "scalarIntrospection", "buildImplementationsList", "implementingIntrospection", "implementingIntrospectionStr", "objectIntrospection", "buildFieldDefMap", "interfaceIntrospection", "unionIntrospection", "unionIntrospectionStr", "enumIntrospection", "enumIntrospectionStr", "valueIntrospection", "inputObjectIntrospection", "inputObjectIntrospectionStr", "buildInputValueDefMap", "fieldIntrospection", "buildField", "fieldIntrospectionStr", "inputValueIntrospections", "inputValue", "buildInputValue", "inputValueIntrospection", "defaultValue", "directiveIntrospection", "directiveIntrospectionStr", "_directiveIntrospectionStr", "require_extendSchema", "__commonJSMin", "exports", "init_cjs_shim", "extendSchema", "extendSchemaImpl", "getDescription", "_objectValues", "_interopRequireDefault", "_keyMap", "_inspect", "_mapValue", "_invariant", "_devAssert", "_kinds", "_tokenKind", "_blockString", "_predicates", "_validate", "_values", "_schema", "_scalars", "_introspection", "_directives", "_definition", "_valueFromAST", "obj", "ownKeys", "object", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread", "target", "i", "source", "key", "_defineProperty", "value", "schema", "documentAST", "options", "schemaConfig", "extendedConfig", "_schemaDef", "_schemaDef$descriptio", "_schemaDef2", "_options$assumeValid", "typeDefs", "typeExtensionsMap", "directiveDefs", "schemaDef", "schemaExtensions", "_i2", "_documentAST$definiti2", "def", "extendedTypeName", "existingTypeExtensions", "typeMap", "_i4", "_schemaConfig$types2", "existingType", "extendNamedType", "_i6", "_stdTypeMap$name", "typeNode", "name", "stdTypeMap", "buildType", "operationTypes", "replaceNamedType", "getOperationTypes", "replaceDirective", "buildDirective", "replaceType", "type", "directive", "config", "extendArg", "extendScalarType", "extendObjectType", "extendInterfaceType", "extendUnionType", "extendEnumType", "extendInputObjectType", "_typeExtensionsMap$co", "extensions", "field", "buildInputFieldMap", "_typeExtensionsMap$ty", "buildEnumValueMap", "_typeExtensionsMap$co2", "specifiedByUrl", "_i8", "_getSpecifiedByUrl", "extensionNode", "getSpecifiedByUrl", "_typeExtensionsMap$co3", "buildInterfaces", "extendField", "buildFieldMap", "_typeExtensionsMap$co4", "_typeExtensionsMap$co5", "buildUnionTypes", "arg", "nodes", "opTypes", "_i10", "_node$operationTypes", "node", "operationTypesNodes", "_i12", "operationType", "getNamedType", "_stdTypeMap$name2", "getWrappedType", "locations", "_ref", "buildArgumentMap", "fieldConfigMap", "_i14", "_node$fields", "nodeFields", "_i16", "getDeprecationReason", "args", "argsNodes", "argConfigMap", "_i18", "inputFieldMap", "_i20", "_node$fields2", "fieldsNodes", "_i22", "enumValueMap", "_i24", "_node$values", "valuesNodes", "_i26", "interfaces", "_i28", "_node$interfaces", "interfacesNodes", "_i30", "types", "_i32", "_node$types", "typeNodes", "_i34", "astNode", "_typeExtensionsMap$na", "description", "extensionNodes", "extensionASTNodes", "allNodes", "_extensionASTNodes", "_allNodes", "_extensionASTNodes2", "_allNodes2", "_extensionASTNodes3", "_allNodes3", "_extensionASTNodes4", "_extensionASTNodes5", "_allNodes4", "deprecated", "specifiedBy", "rawValue", "getLeadingCommentBlock", "loc", "comments", "token", "require_buildASTSchema", "__commonJSMin", "exports", "init_cjs_shim", "buildASTSchema", "buildSchema", "_devAssert", "_interopRequireDefault", "_kinds", "_parser", "_validate", "_schema", "_directives", "_extendSchema", "obj", "documentAST", "options", "emptySchemaConfig", "config", "_i2", "_config$types2", "type", "directives", "_loop", "_i4", "stdDirective", "directive", "source", "document", "require_lexicographicSortSchema", "__commonJSMin", "exports", "init_cjs_shim", "lexicographicSortSchema", "_objectValues", "_interopRequireDefault", "_inspect", "_invariant", "_keyValMap", "_naturalCompare", "_schema", "_directives", "_introspection", "_definition", "obj", "ownKeys", "object", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread", "target", "i", "source", "key", "_defineProperty", "value", "schema", "schemaConfig", "typeMap", "sortByName", "type", "sortNamedType", "sortDirective", "replaceMaybeType", "replaceType", "replaceNamedType", "maybeType", "directive", "config", "sortBy", "x", "sortArgs", "args", "sortObjMap", "arg", "sortFields", "fieldsMap", "field", "sortInputFields", "sortTypes", "arr", "_config", "_config2", "_config3", "_config4", "map", "sortValueFn", "sortedMap", "sortedKeys", "_i2", "array", "mapToKey", "obj1", "obj2", "key1", "key2", "require_printSchema", "__commonJSMin", "exports", "init_cjs_shim", "printSchema", "printIntrospectionSchema", "printType", "_objectValues", "_interopRequireDefault", "_inspect", "_invariant", "_printer", "_blockString", "_introspection", "_scalars", "_directives", "_definition", "_astFromValue", "obj", "schema", "options", "printFilteredSchema", "n", "isDefinedType", "type", "directiveFilter", "typeFilter", "directives", "types", "printSchemaDefinition", "directive", "printDirective", "isSchemaOfCommonNames", "operationTypes", "queryType", "mutationType", "subscriptionType", "printDescription", "printScalar", "printObject", "printInterface", "printUnion", "printEnum", "printInputObject", "printSpecifiedByUrl", "printImplementedInterfaces", "interfaces", "i", "printFields", "possibleTypes", "values", "value", "printDeprecated", "printBlock", "fields", "f", "printInputValue", "printArgs", "items", "args", "indentation", "arg", "defaultAST", "argDecl", "reason", "reasonAST", "scalar", "url", "urlAST", "def", "firstInBlock", "description", "printDescriptionWithComments", "preferMultipleLines", "blockString", "prefix", "comment", "line", "require_concatAST", "__commonJSMin", "exports", "init_cjs_shim", "concatAST", "documents", "definitions", "_i2", "doc", "require_separateOperations", "__commonJSMin", "exports", "init_cjs_shim", "separateOperations", "_kinds", "_visitor", "documentAST", "operations", "depGraph", "_i2", "_documentAST$definiti2", "definitionNode", "collectDependencies", "separatedDocumentASTs", "_loop", "_i4", "operation", "dependencies", "_i6", "_collectDependencies2", "fragmentName", "collectTransitiveDependencies", "operationName", "node", "collected", "fromName", "immediateDeps", "_i8", "toName", "selectionSet", "require_stripIgnoredCharacters", "__commonJSMin", "exports", "init_cjs_shim", "stripIgnoredCharacters", "_source", "_tokenKind", "_lexer", "_blockString", "source", "sourceObj", "body", "lexer", "strippedBody", "wasLastAddedTokenNonPunctuator", "currentToken", "tokenKind", "isNonPunctuator", "tokenBody", "dedentBlockString", "blockStr", "rawStr", "lastChar", "hasTrailingQuote", "require_findBreakingChanges", "__commonJSMin", "exports", "init_cjs_shim", "findBreakingChanges", "findDangerousChanges", "_objectValues", "_interopRequireDefault", "_keyMap", "_inspect", "_invariant", "_naturalCompare", "_printer", "_visitor", "_scalars", "_definition", "_astFromValue", "obj", "ownKeys", "object", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread", "target", "i", "source", "key", "_defineProperty", "value", "BreakingChangeType", "DangerousChangeType", "oldSchema", "newSchema", "breakingChanges", "findSchemaChanges", "change", "dangerousChanges", "findTypeChanges", "findDirectiveChanges", "schemaChanges", "directivesDiff", "diff", "_i2", "_directivesDiff$remov2", "oldDirective", "_i4", "_directivesDiff$persi2", "_ref2", "_oldDirective", "newDirective", "argsDiff", "_i6", "_argsDiff$added2", "newArg", "_i8", "_argsDiff$removed2", "oldArg", "_i10", "_oldDirective$locatio2", "location", "typesDiff", "_i12", "_typesDiff$removed2", "oldType", "_i14", "_typesDiff$persisted2", "_ref4", "_oldType", "newType", "findEnumTypeChanges", "findUnionTypeChanges", "findInputObjectTypeChanges", "findFieldChanges", "findImplementedInterfacesChanges", "typeKindName", "fieldsDiff", "_i16", "_fieldsDiff$added2", "newField", "_i18", "_fieldsDiff$removed2", "oldField", "_i20", "_fieldsDiff$persisted2", "_ref6", "_oldField", "_newField", "isSafe", "isChangeSafeForInputObjectFieldOrFieldArg", "possibleTypesDiff", "_i22", "_possibleTypesDiff$ad2", "newPossibleType", "_i24", "_possibleTypesDiff$re2", "oldPossibleType", "valuesDiff", "_i26", "_valuesDiff$added2", "newValue", "_i28", "_valuesDiff$removed2", "oldValue", "interfacesDiff", "_i30", "_interfacesDiff$added2", "newInterface", "_i32", "_interfacesDiff$remov2", "oldInterface", "_i34", "_fieldsDiff$removed4", "_i36", "_fieldsDiff$persisted4", "_ref8", "_oldField2", "findArgChanges", "isChangeSafeForObjectOrInterfaceField", "_i38", "_argsDiff$removed4", "_i40", "_argsDiff$persisted2", "_ref10", "_oldArg", "oldValueStr", "stringifyValue", "newValueStr", "_i42", "_argsDiff$added4", "_newArg", "type", "ast", "sortedAST", "objectNode", "fields", "fieldA", "fieldB", "oldArray", "newArray", "added", "removed", "persisted", "oldMap", "_ref11", "name", "newMap", "_ref12", "_i44", "oldItem", "newItem", "_i46", "_newItem", "require_findDeprecatedUsages", "__commonJSMin", "exports", "init_cjs_shim", "findDeprecatedUsages", "_validate", "_NoDeprecatedCustomRule", "schema", "ast", "require_utilities", "__commonJSMin", "exports", "init_cjs_shim", "_getIntrospectionQuery", "_getOperationAST", "_getOperationRootType", "_introspectionFromSchema", "_buildClientSchema", "_buildASTSchema", "_extendSchema", "_lexicographicSortSchema", "_printSchema", "_typeFromAST", "_valueFromAST", "_valueFromASTUntyped", "_astFromValue", "_TypeInfo", "_coerceInputValue", "_concatAST", "_separateOperations", "_stripIgnoredCharacters", "_typeComparators", "_assertValidName", "_findBreakingChanges", "_findDeprecatedUsages", "require_graphql", "__commonJSMin", "exports", "init_cjs_shim", "_version", "_graphql", "_index", "_index2", "_index3", "_index4", "_index5", "_index6", "_index7", "init_cjs_shim", "init_cjs_shim", "publish", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "AWS_CLOUDWATCH_CATEGORY", "USER_AGENT_HEADER", "NO_HUBCALLBACK_PROVIDED_EXCEPTION", "init_cjs_shim", "LogType", "LOG_LEVELS", "ConsoleLogger", "_ConsoleLogger", "name", "level", "LogType", "n", "dt", "config", "type", "msg", "loggerLevelName", "loggerLevel", "log", "prefix", "message", "obj", "plugin", "logEvent", "pluggable", "AWS_CLOUDWATCH_CATEGORY", "init_cjs_shim", "AmplifyError", "_AmplifyError", "message", "name", "recoverySuggestion", "underlyingError", "init_cjs_shim", "AmplifyErrorCode", "createAssertionFunction", "errorMap", "AssertionError", "AmplifyError", "assertion", "name", "additionalContext", "message", "recoverySuggestion", "AMPLIFY_SYMBOL", "logger", "ConsoleLogger", "HubClass", "name", "channel", "listener", "holder", "callback", "payload", "source", "ampSymbol", "capsule", "e", "listenerName", "cb", "AmplifyError", "NO_HUBCALLBACK_PROVIDED_EXCEPTION", "Hub", "HubInternal", "getBtoa", "AmplifyError", "getAtob", "base64Decoder", "input", "getAtob", "AuthConfigurationErrorCode", "authConfigurationErrorMap", "assert", "createAssertionFunction", "assertTokenProviderConfig", "cognitoConfig", "assertionValid", "assert", "AuthConfigurationErrorCode", "assertOAuthConfig", "validOAuthConfig", "assertIdentityPoolIdConfig", "validConfig", "decodeJWT", "token", "tokenParts", "base64", "jsonStr", "base64Decoder", "char", "payload", "init_cjs_shim", "isNonRetryableError", "obj", "logger", "ConsoleLogger", "retry", "functionToRetry", "args", "delayFn", "onTerminate", "resolve", "reject", "attempt", "terminated", "timeout", "wakeUp", "lastError", "err", "isNonRetryableError", "retryIn", "_resolve", "init_cjs_shim", "deepFreeze", "object", "propNames", "name", "value", "logger", "ConsoleLogger", "authTypeMapping", "parseAWSExports", "config", "AmplifyError", "aws_appsync_apiKey", "aws_appsync_authenticationType", "aws_appsync_graphqlEndpoint", "aws_appsync_region", "aws_bots_config", "aws_cognito_identity_pool_id", "aws_cognito_sign_up_verification_method", "aws_cognito_mfa_configuration", "aws_cognito_mfa_types", "aws_cognito_password_protection_settings", "aws_cognito_verification_mechanisms", "aws_cognito_signup_attributes", "aws_cognito_social_providers", "aws_cognito_username_attributes", "aws_mandatory_sign_in", "aws_mobile_analytics_app_id", "aws_mobile_analytics_app_region", "aws_user_files_s3_bucket", "aws_user_files_s3_bucket_region", "aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing", "aws_user_pools_id", "aws_user_pools_web_client_id", "geo", "oauth", "predictions", "aws_cloud_logic_custom", "Notifications", "modelIntrospection", "amplifyConfig", "InAppMessaging", "Push", "appId", "region", "bot", "defaultAuthMode", "mfaConfig", "passwordFormatConfig", "userAttributes", "attributes", "key", "loginWithEmailEnabled", "loginWithPhoneEnabled", "hasOAuthConfig", "hasSocialProviderConfig", "getOAuthConfig", "parseSocialProviders", "amazon_location_service", "acc", "api", "name", "endpoint", "service", "voiceId", "getRedirectUrl", "redirectStr", "domain", "scope", "redirectSignIn", "redirectSignOut", "responseType", "provider", "updatedProvider", "init_cjs_shim", "ADD_OAUTH_LISTENER", "init_cjs_shim", "init_cjs_shim", "crypto", "rnds8Pool", "poolPtr", "rng", "init_cjs_shim", "byteToHex", "i", "unsafeStringify", "arr", "offset", "init_cjs_shim", "init_cjs_shim", "crypto", "native_default", "v4", "options", "buf", "offset", "native_default", "rnds", "rng", "unsafeStringify", "v4_default", "init_cjs_shim", "isAmplifyOutputs", "config", "version", "parseStorage", "amplifyOutputsStorageProperties", "bucket_name", "aws_region", "buckets", "createBucketInfoMap", "parseAuth", "amplifyOutputsAuthProperties", "user_pool_id", "user_pool_client_id", "identity_pool_id", "password_policy", "mfa_configuration", "mfa_methods", "unauthenticated_identities_enabled", "oauth", "username_attributes", "standard_required_attributes", "authConfig", "getMfaStatus", "getOAuthProviders", "acc", "curr", "parseAnalytics", "amplifyOutputsAnalyticsProperties", "amazon_pinpoint", "parseGeo", "geofence_collections", "maps", "search_indices", "parseData", "amplifyOutputsDataProperties", "default_authorization_type", "url", "api_key", "model_introspection", "getGraphQLAuthMode", "parseNotifications", "amplifyOutputsNotificationsProperties", "channels", "amazon_pinpoint_app_id", "hasInAppMessaging", "hasPushNotification", "notificationsConfig", "parseAmplifyOutputs", "amplifyOutputs", "resourcesConfig", "authModeNames", "authType", "providerNames", "providers", "oAuthProviders", "provider", "mfaConfiguration", "mappedBuckets", "name", "bucketName", "region", "parseAmplifyConfig", "amplifyConfig", "key", "parseAWSExports", "isAmplifyOutputs", "parseAmplifyOutputs", "init_cjs_shim", "isTokenExpired", "expiresAt", "clockDrift", "AuthClass", "authResourcesConfig", "authOptions", "options", "credentialsAndIdentityId", "userSub", "tokens", "init_cjs_shim", "Framework", "Category", "AnalyticsAction", "ApiAction", "AuthAction", "DataStoreAction", "GeoAction", "InAppMessagingAction", "InteractionsAction", "PredictionsAction", "PubSubAction", "PushNotificationAction", "StorageAction", "init_cjs_shim", "globalExists", "windowExists", "documentExists", "processExists", "keyPrefixMatch", "object", "prefix", "key", "reactWebDetect", "elementKeyPrefixedWithReact", "key", "elementIsReactEnabled", "element", "allElementsWithId", "documentExists", "reactSSRDetect", "processExists", "vueWebDetect", "windowExists", "keyPrefixMatch", "vueSSRDetect", "globalExists", "svelteWebDetect", "windowExists", "keyPrefixMatch", "svelteSSRDetect", "processExists", "key", "nextWebDetect", "windowExists", "nextSSRDetect", "globalExists", "keyPrefixMatch", "nuxtWebDetect", "windowExists", "nuxtSSRDetect", "globalExists", "angularWebDetect", "angularVersionSetInDocument", "documentExists", "angularContentSetInWindow", "windowExists", "angularSSRDetect", "processExists", "init_cjs_shim", "reactNativeDetect", "expoDetect", "globalExists", "webDetect", "windowExists", "detectionMap", "Framework", "expoDetect", "reactNativeDetect", "nextWebDetect", "nuxtWebDetect", "angularWebDetect", "reactWebDetect", "vueWebDetect", "svelteWebDetect", "webDetect", "nextSSRDetect", "nuxtSSRDetect", "reactSSRDetect", "vueSSRDetect", "angularSSRDetect", "svelteSSRDetect", "detect", "detectionEntry", "init_cjs_shim", "isWebWorker", "selfContext", "Reachability", "_Reachability", "_", "globalObj", "isWebWorker", "observer", "notifyOnline", "notifyOffline", "_observer", "status", "init_cjs_shim", "isBrowser", "AmplifyClass", "AuthClass", "resourcesConfig", "libraryOptions", "resolvedResourceConfig", "parseAmplifyConfig", "deepFreeze", "Hub", "AMPLIFY_SYMBOL", "ADD_OAUTH_LISTENER", "listener", "Amplify", "init_cjs_shim", "fetchAuthSession", "amplify", "options", "fetchAuthSession", "options", "fetchAuthSessionInternal", "Amplify", "init_cjs_shim", "parseMetadata", "response", "headers", "statusCode", "isMetadataBearer", "parseJsonError", "response", "body", "parseJsonBody", "code", "rawValue", "cleanValue", "message", "error", "parseMetadata", "output", "init_cjs_shim", "composeServiceApi", "transferHandler", "serializer", "deserializer", "defaultConfig", "config", "input", "resolvedConfig", "endpoint", "request", "response", "init_cjs_shim", "defaultPartition", "partitionsInfo", "getDnsSuffix", "region", "partitions", "partitionsInfo", "regions", "outputs", "regionRegex", "regex", "defaultPartition", "init_cjs_shim", "retryMiddlewareFactory", "maxAttempts", "retryDecider", "computeDelay", "abortSignal", "next", "context", "request", "error", "attemptsCount", "response", "handleTerminalErrorOrResponse", "addOrIncrementMetadataAttempts", "e", "delay", "cancellableSleep", "timeoutMs", "timeoutId", "sleepPromiseResolveFn", "sleepPromise", "resolve", "cancelSleep", "_", "nextHandlerOutput", "attempts", "init_cjs_shim", "userAgentMiddlewareFactory", "userAgentHeader", "userAgentValue", "next", "request", "headerName", "init_cjs_shim", "composeTransferHandler", "coreHandler", "middleware", "request", "options", "context", "composedHandler", "composeHandlerRequest", "i", "m", "init_cjs_shim", "withMemoization", "payloadAccessor", "cached", "shouldSendBody", "method", "fetchTransferHandler", "url", "headers", "body", "abortSignal", "cache", "withCrossDomainCredentials", "resp", "e", "AmplifyError", "AmplifyErrorCode", "responseHeaders", "value", "key", "httpResponse", "bodyWithMixin", "withMemoization", "unauthenticatedHandler", "composeTransferHandler", "fetchTransferHandler", "userAgentMiddlewareFactory", "retryMiddlewareFactory", "jitteredBackoff", "maxDelayMs", "attempt", "delay", "DEFAULT_MAX_DELAY_MS", "jitteredBackoff", "attempt", "delay", "jitteredBackoffUtil", "init_cjs_shim", "CLOCK_SKEW_ERROR_CODES", "isClockSkewError", "errorCode", "getRetryDecider", "errorParser", "response", "error", "parsedError", "errorCode", "statusCode", "isConnectionError", "isThrottlingError", "isClockSkewError", "isServerSideError", "THROTTLING_ERROR_CODES", "TIMEOUT_ERROR_CODES", "init_cjs_shim", "AmplifyUrl", "init_cjs_shim", "version", "frameworkCache", "frameworkChangeObservers", "resetTriggered", "SSR_RESET_TIMEOUT", "WEB_RESET_TIMEOUT", "PRIME_FRAMEWORK_DELAY", "detectFramework", "detect", "fcn", "resetTimeout", "Framework", "observeFrameworkChanges", "clearCache", "framework", "delay", "init_cjs_shim", "customUserAgentState", "getCustomUserAgent", "category", "api", "customUserAgentState", "BASE_USER_AGENT", "PlatformBuilder", "version", "detectFramework", "Framework", "fcn", "observeFrameworkChanges", "Platform", "getAmplifyUserAgentObject", "category", "action", "userAgent", "customState", "getCustomUserAgent", "state", "getAmplifyUserAgent", "customUserAgentDetails", "agentKey", "agentValue", "SERVICE_NAME", "endpointResolver", "region", "AmplifyUrl", "getDnsSuffix", "disableCacheMiddlewareFactory", "next", "request", "cognitoIdentityTransferHandler", "composeTransferHandler", "unauthenticatedHandler", "defaultConfig", "getRetryDecider", "parseJsonError", "jitteredBackoff", "getAmplifyUserAgent", "observeFrameworkChanges", "getSharedHeaders", "operation", "buildHttpRpcRequest", "url", "headers", "body", "getIdSerializer", "input", "endpoint", "headers", "getSharedHeaders", "body", "buildHttpRpcRequest", "getIdDeserializer", "response", "parseJsonError", "parseJsonBody", "parseMetadata", "getId", "composeServiceApi", "cognitoIdentityTransferHandler", "defaultConfig", "getCredentialsForIdentitySerializer", "input", "endpoint", "headers", "getSharedHeaders", "body", "buildHttpRpcRequest", "getCredentialsForIdentityDeserializer", "response", "parseJsonError", "parseJsonBody", "deserializeCredentials", "parseMetadata", "AccessKeyId", "SecretKey", "SessionToken", "Expiration", "getCredentialsForIdentity", "composeServiceApi", "cognitoIdentityTransferHandler", "defaultConfig", "PlatformNotSupportedError", "AmplifyError", "AmplifyErrorCode", "KeyValueStorage", "storage", "key", "value", "PlatformNotSupportedError", "init_cjs_shim", "InMemoryStorage", "index", "key", "value", "getLocalStorageWithFallback", "InMemoryStorage", "getSessionStorageWithFallback", "DefaultStorage", "KeyValueStorage", "getLocalStorageWithFallback", "SessionStorage", "KeyValueStorage", "getSessionStorageWithFallback", "init_cjs_shim", "assign", "target", "i", "source", "key", "defaultConverter", "value", "init", "converter", "defaultAttributes", "set", "name", "attributes", "stringifiedAttributes", "attributeName", "get", "cookies", "jar", "parts", "found", "api", "CookieStorage", "data", "path", "domain", "expires", "sameSite", "secure", "key", "value", "api", "cookie", "promises", "defaultStorage", "DefaultStorage", "sessionStorage", "SessionStorage", "sharedInMemoryStorage", "KeyValueStorage", "InMemoryStorage", "init_cjs_shim", "defaultConfig", "currentSizeKey", "getByteLength", "str", "ret", "i", "charCode", "getCurrentTime", "getCurrentSizeKey", "keyPrefix", "currentSizeKey", "CacheErrorCode", "cacheErrorMap", "assert", "createAssertionFunction", "logger", "ConsoleLogger", "StorageCacheCommon", "config", "keyValueStorage", "defaultConfig", "size", "getCurrentSizeKey", "key", "value", "options", "currentSizeKey", "cacheItemOptions", "getCurrentTime", "prefixedKey", "item", "val", "validKeys", "sizeToPop", "e", "cached", "text", "assert", "CacheErrorCode", "itemSize", "removeItemError", "getByteLength", "cacheLimit", "amount", "setItemErr", "spaceItemNeed", "cacheThresholdSpace", "cur", "keys", "items", "remainedSize", "a", "b", "remainingKeys", "logger", "ConsoleLogger", "StorageCache", "_StorageCache", "StorageCacheCommon", "config", "storage", "getLocalStorageWithFallback", "KeyValueStorage", "options", "omitSizeKey", "keys", "key", "getCurrentSizeKey", "defaultConfig", "getCurrentTime", "Cache", "StorageCache", "logger", "ConsoleLogger", "lang", "key", "defVal", "val", "language", "langDict", "vocabularies", "I18nErrorCode", "i18nErrorMap", "assert", "createAssertionFunction", "logger", "ConsoleLogger", "_config", "_i18n", "I18n", "_I18n", "config", "I18nClass", "lang", "assert", "I18nErrorCode", "key", "defVal", "language", "vocabularies", "amplifyUuid", "v4_default", "init_cjs_shim", "getSignedHeaders", "headers", "key", "init_cjs_shim", "AMZ_DATE_QUERY_PARAM", "TOKEN_QUERY_PARAM", "AUTH_HEADER", "HOST_HEADER", "AMZ_DATE_HEADER", "AMZ_DATE_QUERY_PARAM", "TOKEN_HEADER", "KEY_TYPE_IDENTIFIER", "SHA256_ALGORITHM_IDENTIFIER", "SIGNATURE_IDENTIFIER", "EMPTY_HASH", "UNSIGNED_PAYLOAD", "getCredentialScope", "date", "region", "service", "KEY_TYPE_IDENTIFIER", "init_cjs_shim", "getFormattedDates", "date", "longDate", "getSigningValues", "credentials", "signingDate", "signingRegion", "signingService", "uriEscapePath", "accessKeyId", "secretAccessKey", "sessionToken", "longDate", "shortDate", "getFormattedDates", "credentialScope", "getCredentialScope", "getHashedData", "key", "data", "sha256", "getHashedDataAsHex", "hashedData", "init_cjs_shim", "getCanonicalHeaders", "headers", "key", "value", "a", "b", "entry", "init_cjs_shim", "getCanonicalQueryString", "searchParams", "keyA", "valA", "keyB", "valB", "key", "val", "escapeUri", "uri", "hexEncode", "c", "init_cjs_shim", "getCanonicalUri", "pathname", "uriEscapePath", "getHashedPayload", "body", "EMPTY_HASH", "isSourceData", "getHashedDataAsHex", "UNSIGNED_PAYLOAD", "isArrayBuffer", "arg", "getCanonicalRequest", "body", "headers", "method", "url", "uriEscapePath", "getCanonicalUri", "getCanonicalQueryString", "getCanonicalHeaders", "getSignedHeaders", "getHashedPayload", "getSigningKey", "secretAccessKey", "date", "region", "service", "key", "SIGNATURE_IDENTIFIER", "dateKey", "getHashedData", "regionKey", "serviceKey", "KEY_TYPE_IDENTIFIER", "getStringToSign", "date", "credentialScope", "hashedRequest", "SHA256_ALGORITHM_IDENTIFIER", "getSignature", "request", "credentialScope", "longDate", "secretAccessKey", "shortDate", "signingRegion", "signingService", "uriEscapePath", "canonicalRequest", "getCanonicalRequest", "hashedRequest", "getHashedDataAsHex", "stringToSign", "getStringToSign", "getSigningKey", "signRequest", "request", "options", "signingValues", "getSigningValues", "accessKeyId", "credentialScope", "longDate", "sessionToken", "headers", "HOST_HEADER", "AMZ_DATE_HEADER", "TOKEN_HEADER", "requestToSign", "signature", "getSignature", "credentialEntry", "signedHeadersEntry", "getSignedHeaders", "signatureEntry", "AUTH_HEADER", "SHA256_ALGORITHM_IDENTIFIER", "init_cjs_shim", "getSkewCorrectedDate", "systemClockOffset", "SKEW_WINDOW", "isClockSkewed", "clockTimeInMilliseconds", "clockOffsetInMilliseconds", "getSkewCorrectedDate", "getUpdatedSystemClockOffset", "clockTimeInMilliseconds", "currentSystemClockOffset", "isClockSkewed", "signingMiddlewareFactory", "credentials", "region", "service", "uriEscapePath", "currentSystemClockOffset", "next", "request", "signRequestOptions", "getSkewCorrectedDate", "signedRequest", "signRequest", "response", "dateString", "getDateHeader", "getUpdatedSystemClockOffset", "headers", "authenticatedHandler", "composeTransferHandler", "fetchTransferHandler", "userAgentMiddlewareFactory", "retryMiddlewareFactory", "signingMiddlewareFactory", "init_cjs_shim", "init_cjs_shim", "NonRetryableError", "jitteredExponentialRetry", "functionToRetry", "args", "maxDelayMs", "onTerminate", "retry", "jitteredBackoff", "init_cjs_shim", "urlSafeDecode", "hex", "char", "init_cjs_shim", "deDupeAsyncFunction", "asyncFunction", "inflightPromise", "args", "resolve", "reject", "result", "error", "ApiError", "_ApiError", "AmplifyError", "replicateApiErrorResponse", "params", "response", "init_cjs_shim", "bytesToString", "input", "byte", "base64Encoder", "input", "urlSafe", "inputStr", "bytesToString", "encodedStr", "getBtoa", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "AuthError", "_AuthError", "AmplifyError", "params", "assertServiceError", "error", "AuthError", "AmplifyErrorCode", "SERVICE_NAME", "endpointResolver", "region", "customURL", "Amplify", "defaultURL", "AmplifyUrl", "getDnsSuffix", "disableCacheMiddlewareFactory", "next", "_", "request", "cognitoUserPoolTransferHandler", "composeTransferHandler", "unauthenticatedHandler", "defaultConfig", "getRetryDecider", "parseJsonError", "jitteredBackoff", "getAmplifyUserAgent", "getSharedHeaders", "operation", "buildHttpRpcRequest", "url", "headers", "body", "buildUserPoolSerializer", "operation", "input", "endpoint", "headers", "getSharedHeaders", "body", "buildHttpRpcRequest", "buildUserPoolDeserializer", "response", "error", "parseJsonError", "assertServiceError", "AuthError", "parseJsonBody", "handleEmptyResponseDeserializer", "initiateAuth", "composeServiceApi", "cognitoUserPoolTransferHandler", "defaultConfig", "revokeToken", "signUp", "confirmSignUp", "forgotPassword", "confirmForgotPassword", "respondToAuthChallenge", "resendConfirmationCode", "verifySoftwareToken", "associateSoftwareToken", "setUserMFAPreference", "getUser", "changePassword", "confirmDevice", "forgetDevice", "deleteUser", "getUserAttributeVerificationCode", "globalSignOut", "updateUserAttributes", "verifyUserAttribute", "updateDeviceStatus", "listDevices", "deleteUserAttributes", "init_cjs_shim", "AuthValidationErrorCode", "validationErrorMap", "AuthValidationErrorCode", "AuthErrorStrings", "AuthErrorCodes", "getRegion", "userPoolId", "region", "AuthError", "getRegionFromIdentityPoolId", "identityPoolId", "USER_UNAUTHENTICATED_EXCEPTION", "INVALID_REDIRECT_EXCEPTION", "invalidRedirectException", "AuthError", "INVALID_ORIGIN_EXCEPTION", "invalidOriginException", "TOKEN_REFRESH_EXCEPTION", "UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION", "assertAuthTokens", "tokens", "AuthError", "USER_UNAUTHENTICATED_EXCEPTION", "assertIdTokenInAuthTokens", "oAuthTokenRefreshException", "TOKEN_REFRESH_EXCEPTION", "tokenRefreshException", "assertAuthTokensWithRefreshToken", "isAuthenticatedWithImplicitOauthFlow", "isAuthenticatedWithRefreshToken", "OAuthStorageKeys", "isAuthenticated", "tokens", "isAuthenticatedWithRefreshToken", "isAuthenticatedWithImplicitOauthFlow", "getCurrentUser", "amplify", "authConfig", "assertTokenProviderConfig", "tokens", "assertAuthTokens", "username", "sub", "authUser", "signInDetails", "getSignInDetailsFromTokens", "getCurrentUser", "getCurrentUserInternal", "Amplify", "getAuthUserAgentValue", "action", "customUserAgentDetails", "getAmplifyUserAgent", "Category", "init_cjs_shim", "getUserContextData", "username", "userPoolId", "userPoolClientId", "amazonCognitoAdvancedSecurityData", "advancedSecurityData", "refreshAuthTokensFunction", "tokens", "authConfig", "username", "assertTokenProviderConfig", "region", "getRegion", "assertAuthTokensWithRefreshToken", "refreshTokenString", "AuthParameters", "UserContextData", "getUserContextData", "AuthenticationResult", "initiateAuth", "accessToken", "decodeJWT", "idToken", "iat", "AuthError", "clockDrift", "refreshAuthTokens", "deDupeAsyncFunction", "init_cjs_shim", "AuthTokenStorageKeys", "TokenProviderErrorCode", "tokenValidationErrorMap", "assert", "createAssertionFunction", "DefaultTokenStore", "AuthError", "keyValueStorage", "authConfig", "authKeys", "accessTokenString", "accessToken", "decodeJWT", "itString", "idToken", "refreshToken", "clockDriftString", "clockDrift", "signInDetails", "tokens", "assert", "TokenProviderErrorCode", "lastAuthUser", "username", "deviceKey", "deviceGroupKey", "randomPassword", "assertTokenProviderConfig", "createKeysForAuthStorage", "identifier", "metadata", "oauthMetadataKey", "oauthMetadata", "provider", "getAuthStorageKeys", "AuthTokenStorageKeys", "keys", "prefix", "acc", "authKey", "V5_HOSTED_UI_KEY", "name", "DefaultOAuthStore", "keyValueStorage", "assertTokenProviderConfig", "authKeys", "createKeysForAuthStorage", "state", "pkce", "authConfigParam", "inflight", "isLegacyHostedUISignIn", "isOAuthSignIn", "preferPrivateSession", "oauthSignIn", "provider", "identifier", "getAuthStorageKeys", "OAuthStorageKeys", "oAuthStore", "DefaultOAuthStore", "defaultStorage", "init_cjs_shim", "inflightPromises", "addInflightPromise", "resolver", "resolveAndClearInflightPromises", "TokenOrchestrator", "isBrowser", "oAuthStore", "resolve", "_reject", "addInflightPromise", "authConfig", "tokenRefresher", "tokenStore", "AuthError", "options", "tokens", "assertTokenProviderConfig", "username", "idTokenExpired", "isTokenExpired", "accessTokenExpired", "signInDetails", "newTokens", "Hub", "AMPLIFY_SYMBOL", "err", "assertServiceError", "metadata", "CognitoUserPoolsTokenProvider", "DefaultTokenStore", "defaultStorage", "TokenOrchestrator", "refreshAuthTokens", "forceRefresh", "keyValueStorage", "authConfig", "cognitoUserPoolsTokenProvider", "CognitoUserPoolsTokenProvider", "tokenOrchestrator", "cacheCognitoTokens", "AuthenticationResult", "accessToken", "decodeJWT", "accessTokenIssuedAtInMillis", "currentTime", "clockDrift", "idToken", "refreshToken", "deviceMetadata", "tokens", "tokenOrchestrator", "AmplifyError", "ERROR_MESSAGE", "dispatchSignedInHubEvent", "Hub", "getCurrentUser", "AMPLIFY_SYMBOL", "error", "USER_UNAUTHENTICATED_EXCEPTION", "AuthError", "UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION", "logger", "ConsoleLogger", "authErrorMessages", "AuthErrorStrings", "createOAuthError", "message", "recoverySuggestion", "AuthError", "AuthErrorCodes", "authErrorMessages", "init_cjs_shim", "AuthErrorTypes", "flowCancelledMessage", "validationFailedMessage", "validationRecoverySuggestion", "validateState", "state", "savedState", "oAuthStore", "validatedState", "AuthError", "AuthErrorTypes", "completeOAuthFlow", "currentUrl", "userAgentValue", "clientId", "redirectUri", "responseType", "domain", "preferPrivateSession", "urlParams", "AmplifyUrl", "error", "errorMessage", "createOAuthError", "handleCodeFlow", "handleImplicitFlow", "url", "code", "state", "validatedState", "validateState", "oAuthTokenEndpoint", "codeVerifier", "oAuthStore", "oAuthTokenBody", "body", "k", "v", "access_token", "refreshToken", "id_token", "token_type", "expires_in", "USER_AGENT_HEADER", "username", "decodeJWT", "cacheCognitoTokens", "completeFlow", "error_description", "pairings", "accum", "tokenOrchestrator", "resolveAndClearInflightPromises", "isCustomState", "Hub", "urlSafeDecode", "getCustomState", "AMPLIFY_SYMBOL", "dispatchSignedInHubEvent", "clearHistory", "getRedirectUrl", "redirects", "redirectUrlFromTheSameOrigin", "isSameOriginAndPathName", "isTheSameDomain", "redirectUrlFromDifferentOrigin", "isHttps", "isHttp", "invalidOriginException", "invalidRedirectException", "redirect", "handleFailure", "error", "resolveAndClearInflightPromises", "oAuthStore", "Hub", "AMPLIFY_SYMBOL", "attemptCompleteOAuthFlow", "authConfig", "assertTokenProviderConfig", "assertOAuthConfig", "oAuthStore", "currentUrl", "loginWith", "userPoolClientId", "domain", "redirectSignIn", "responseType", "redirectUri", "getRedirectUrl", "completeOAuthFlow", "getAuthUserAgentValue", "AuthAction", "err", "handleFailure", "isBrowser", "Amplify", "ADD_OAUTH_LISTENER", "attemptCompleteOAuthFlow", "init_cjs_shim", "IdentityIdStorageKeys", "logger", "ConsoleLogger", "DefaultIdentityIdStore", "authConfigParam", "assertIdentityPoolIdConfig", "createKeysForAuthStorage", "keyValueStorage", "storedIdentityId", "err", "identity", "provider", "identifier", "getAuthStorageKeys", "IdentityIdStorageKeys", "formLoginsMap", "idToken", "issuer", "decodeJWT", "res", "AuthError", "domainName", "logger", "ConsoleLogger", "cognitoIdentityIdProvider", "tokens", "authConfig", "identityIdStore", "identityId", "logins", "formLoginsMap", "generatedIdentityId", "generateIdentityId", "identityPoolId", "region", "getRegionFromIdentityPoolId", "idResult", "getId", "AuthError", "logger", "ConsoleLogger", "CREDENTIALS_TTL", "CognitoAWSCredentialsAndIdentityIdProvider", "identityIdStore", "getCredentialsOptions", "isAuthenticated", "tokens", "authConfig", "assertIdentityPoolIdConfig", "forceRefresh", "tokenHasChanged", "identityId", "cognitoIdentityIdProvider", "assertIdTokenInAuthTokens", "region", "getRegionFromIdentityPoolId", "clientResult", "getCredentialsForIdentity", "res", "identityIdRes", "AuthError", "authTokens", "logins", "formLoginsMap", "cognitoCredentialsProvider", "CognitoAWSCredentialsAndIdentityIdProvider", "DefaultIdentityIdStore", "defaultStorage", "DefaultAmplify", "resourceConfig", "libraryOptions", "resolvedResourceConfig", "parseAmplifyConfig", "Amplify", "cognitoUserPoolsTokenProvider", "CookieStorage", "defaultStorage", "cognitoCredentialsProvider", "init_cjs_shim", "env", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "RestApiError", "_RestApiError", "ApiError", "params", "CanceledError", "_CanceledError", "RestApiError", "params", "isCancelError", "error", "init_cjs_shim", "RestApiValidationErrorCode", "validationErrorMap", "parseRestApiServiceError", "response", "parsedAwsError", "parseAwsJsonError", "stubErrorResponse", "bodyText", "buildRestApiError", "bodyTextPromise", "bodyProxy", "target", "prop", "receiver", "error", "restApiError", "RestApiError", "logger", "ConsoleLogger", "createCancellableOperation", "handler", "abortController", "isInternalPost", "targetHandler", "publicApisAbortController", "publicApisAbortSignal", "internalPostAbortSignal", "abortReason", "job", "response", "parseRestApiServiceError", "error", "abortSignal", "message", "canceledError", "CanceledError", "logger", "cancel", "abortMessage", "init_cjs_shim", "DEFAULT_REST_IAM_SIGNING_SERVICE", "DEFAULT_IAM_SIGNING_REGION", "APIG_HOSTNAME_PATTERN", "parseSigningInfo", "url", "restApiOptions", "signingService", "DEFAULT_REST_IAM_SIGNING_SERVICE", "signingRegion", "DEFAULT_IAM_SIGNING_REGION", "hostname", "service", "region", "APIG_HOSTNAME_PATTERN", "init_cjs_shim", "isIamAuthApplicableForGraphQL", "headers", "signingServiceInfo", "init_cjs_shim", "resolveHeaders", "headers", "body", "normalizedHeaders", "key", "transferHandler", "amplify", "options", "iamAuthApplicable", "signingServiceInfo", "url", "method", "headers", "body", "withCredentials", "abortSignal", "resolvedBody", "resolvedHeaders", "resolveHeaders", "request", "baseOptions", "getRetryDecider", "parseRestApiServiceError", "jitteredBackoff", "isIamAuthApplicable", "response", "credentials", "resolveCredentials", "signingInfoFromUrl", "parseSigningInfo", "signingService", "signingRegion", "authenticatedHandler", "unauthenticatedHandler", "logger", "init_cjs_shim", "cancelTokenMap", "post", "amplify", "url", "options", "abortController", "controller", "responseWithCleanUp", "createCancellableOperation", "transferHandler", "isIamAuthApplicableForGraphQL", "cancel", "promise", "message", "updateRequestToBeCancellable", "init_cjs_shim", "CONTROL_MSG", "ConnectionState", "MAX_DELAY_MS", "NON_RETRYABLE_CODES", "CONNECTION_STATE_CHANGE", "MESSAGE_TYPES", "SUBSCRIPTION_STATUS", "SOCKET_STATUS", "AWS_APPSYNC_REALTIME_HEADERS", "CONNECTION_INIT_TIMEOUT", "START_ACK_TIMEOUT", "DEFAULT_KEEP_ALIVE_TIMEOUT", "DEFAULT_KEEP_ALIVE_ALERT_TIMEOUT", "RECONNECT_DELAY", "RECONNECT_INTERVAL", "ReachabilityMonitor", "Reachability", "CONNECTION_CHANGE", "ConnectionStateMonitor", "ReachabilityMonitor", "online", "connectionStateObserver", "previous", "value", "current", "toInclude", "statusUpdates", "newSocketStatus", "connectionState", "networkState", "intendedConnectionState", "keepAliveState", "ConnectionState", "ReconnectEvent", "ReconnectionMonitor", "reconnectObserver", "event", "RECONNECT_INTERVAL", "RECONNECT_DELAY", "logger", "ConsoleLogger", "dispatchApiEvent", "payload", "Hub", "AMPLIFY_SYMBOL", "standardDomainPattern", "customDomainPath", "AWSAppSyncRealTimeProvider", "SOCKET_STATUS", "DEFAULT_KEEP_ALIVE_TIMEOUT", "ConnectionStateMonitor", "ReconnectionMonitor", "connectionState", "CONNECTION_STATE_CHANGE", "ConnectionState", "ReconnectEvent", "CONNECTION_CHANGE", "url", "protocol", "options", "customUserAgentDetails", "appSyncGraphqlEndpoint", "region", "query", "variables", "authenticationType", "additionalHeaders", "apiKey", "authToken", "libraryConfigHeaders", "observer", "subscriptionStartActive", "subscriptionId", "amplifyUuid", "startSubscription", "err", "CONTROL_MSG", "reconnectSubscription", "reconnectSubscriptionObserver", "subscriptionState", "SUBSCRIPTION_STATUS", "additionalCustomHeaders", "data", "dataString", "headerObj", "USER_AGENT_HEADER", "getAmplifyUserAgent", "subscriptionMessage", "MESSAGE_TYPES", "stringToAWSRealTime", "subscriptionFailedCallback", "subscriptionReadyCallback", "START_ACK_TIMEOUT", "message", "isNonRetryableError", "subscriptionObserver", "resolve", "reject", "observedSubscriptionState", "unsubscribeMessage", "tempSocket", "id", "type", "startAckTimeoutId", "DEFAULT_KEEP_ALIVE_ALERT_TIMEOUT", "msg", "headers", "_", "nonAuthHeaders", "key", "val", "payloadString", "authHeader", "headerString", "headerQs", "base64Encoder", "payloadQs", "queryString", "discoverableEndpoint", "awsRealTimeUrl", "res", "rej", "jitteredExponentialRetry", "MAX_DELAY_MS", "newSocket", "ackOk", "error", "event", "connectionTimeoutMs", "errorType", "errorCode", "gqlInit", "checkAckOk", "targetAckOk", "CONNECTION_INIT_TIMEOUT", "NON_RETRYABLE_CODES", "NonRetryableError", "canonicalUri", "headerHandler", "handler", "host", "AmplifyUrl", "resolvedApiKey", "fetchAuthSession", "dtStr", "endpointInfo", "creds", "request", "AWS_APPSYNC_REALTIME_HEADERS", "signRequest", "GraphQLApiError", "_GraphQLApiError", "AmplifyError", "params", "init_cjs_shim", "APIValidationErrorCode", "validationErrorMap", "assertValidationError", "assertion", "name", "message", "recoverySuggestion", "validationErrorMap", "GraphQLApiError", "logger", "ConsoleLogger", "resolveConfig", "amplify", "config", "apiKey", "customEndpoint", "customEndpointRegion", "defaultAuthMode", "endpoint", "region", "assertValidationError", "APIValidationErrorCode", "init_cjs_shim", "resolveLibraryOptions", "amplify", "headers", "withCredentials", "init_cjs_shim", "repackageUnauthorizedError", "content", "e", "isUnauthorizedError", "error", "GraphQLAuthError", "__amplify", "__authMode", "__authToken", "__headers", "getInternals", "client", "c", "NO_API_KEY", "GraphQLAuthError", "NO_VALID_CREDENTIALS", "NO_VALID_AUTH_TOKEN", "NO_SIGNED_IN_USER", "NO_AUTH_TOKEN_HEADER", "NO_ENDPOINT", "createGraphQLResultWithError", "error", "init_cjs_shim", "isGraphQLResponseWithErrors", "response", "r", "USER_AGENT_HEADER", "isAmplifyInstance", "amplify", "InternalGraphQLAPIClass", "AWSAppSyncRealTimeProvider", "post", "cancelREST", "isCancelErrorREST", "updateRequestToBeCancellable", "authMode", "additionalHeaders", "apiKey", "resolveConfig", "headers", "GraphQLApiError", "NO_API_KEY", "NO_VALID_CREDENTIALS", "token", "e", "NO_SIGNED_IN_USER", "NO_VALID_AUTH_TOKEN", "NO_AUTH_TOKEN_HEADER", "operation", "definitions", "operationType", "paramQuery", "variables", "authToken", "customUserAgentDetails", "query", "operationDef", "def", "abortController", "responsePromise", "amplifyInstance", "explicitAuthMode", "region", "appSyncGraphqlEndpoint", "customEndpoint", "customEndpointRegion", "defaultAuthMode", "initialAuthMode", "customHeaders", "withCredentials", "resolveLibraryOptions", "additionalCustomHeaders", "requestOptions", "AmplifyUrl", "getAmplifyUserAgent", "body", "signingServiceInfo", "endpoint", "createGraphQLResultWithError", "NO_ENDPOINT", "response", "responseBody", "error", "isGraphQLResponseWithErrors", "repackageUnauthorizedError", "request", "message", "config", "libraryConfigHeaders", "InternalGraphQLAPI", "GraphQLAPIClass", "InternalGraphQLAPIClass", "amplify", "options", "additionalHeaders", "Category", "ApiAction", "error", "request", "message", "GraphQLAPI", "graphql", "options", "additionalHeaders", "internals", "getInternals", "headers", "GraphQLAPI", "cancel", "promise", "message", "isCancelError", "error", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "__modelMeta__", "init_cjs_shim", "resolveOwnerFields", "model", "ownerFields", "attr", "isAuthAttribute", "rule", "attribute", "init_cjs_shim", "capitalize", "s", "connectionType", "skGraphQlFieldTypeMap", "resolvedSkName", "sk", "acc", "curr", "idx", "capitalize", "flattenItems", "modelIntrospection", "modelName", "modelRecord", "mapped", "fieldName", "value", "fieldDef", "dvPair", "isRelatedModelItemsArrayPair", "itemValue", "isRelatedModelProperty", "dv", "initializeModel", "client", "result", "authMode", "authToken", "context", "introModel", "introModelFields", "modelFields", "_", "field", "record", "initializedRelationalFields", "modelField", "relatedModelName", "relatedModel", "relatedModelPKFieldName", "relatedModelSKFieldNames", "relationType", "connectionFields", "targetNames", "sortKeyValues", "curVal", "contextSpec", "options", "mapResult", "parentPk", "parentSK", "relatedModelField", "relatedTargetNames", "hasManyFilter", "graphQLOperationsInfo", "SELECTION_SET_WILDCARD", "getDefaultSelectionSetForNonModelWithIR", "nonModelDefinition", "fields", "mappedFields", "type", "name", "FIELD_IR", "pair", "getDefaultSelectionSetForModelWithIR", "modelDefinition", "ownerFields", "resolveOwnerFields", "defaultSelectionSetForModel", "explicitFields", "customSelectionSetToIR", "selectionSet", "dotNotationToObject", "path", "modelOrNonModelName", "rest", "nested", "modelOrNonModelDefinition", "modelOrNonModelFields", "relatedModelDefinition", "relatedNonModel", "relatedNonModelDefinition", "isModelOrNonModelOrFieldType", "nestedRelatedModelDefinition", "nonModelField", "isOwnerField", "resultObj", "deepMergeSelectionSetObjects", "selectionSetIRToString", "obj", "res", "source", "target", "isObject", "key", "generateSelectionSet", "selSetIr", "generateGraphQLDocument", "modelOperation", "listArgs", "indexMeta", "pluralName", "isCustomPrimaryKey", "primaryKeyFieldName", "sortKeyFieldNames", "attributes", "namePascalCase", "pluralNamePascalCase", "operationPrefix", "usePlural", "graphQLFieldName", "indexQueryArgs", "queryField", "pk", "skQueryArgs", "skField", "normalizedType", "compositeSkArgName", "keyName", "attr", "graphQLOperationType", "graphQLSelectionSet", "graphQLArguments", "selectionSetFields", "getPkArgs", "listPkArgs", "generateSkArgs", "op", "fieldType", "buildGraphQLVariables", "operation", "arg", "skName", "variables", "normalizeMutationInput", "isReadOnly", "indexQuerySkName", "exhaustiveCheck", "mutationInput", "model", "normalized", "inputFieldName", "inputValue", "association", "relatedModelPkInfo", "associationHasOne", "targetName", "associatedFieldName", "authModeParams", "getInternals", "internals", "getCustomHeaders", "requestHeaders", "headers", "init_cjs_shim", "handleListGraphQlError", "error", "handleSingularGraphQlError", "argIsContextSpec", "arg", "customOpFactory", "client", "modelIntrospection", "operationType", "operation", "useContext", "getInternals", "argsDefined", "args", "options", "contextSpec", "_opSubscription", "_op", "hasStringField", "o", "field", "argumentBaseTypeString", "argDef", "requiredFlag", "outerArguments", "k", "v", "baseType", "finalType", "innerArguments", "operationSelectionSet", "nonModel", "selectionSetIRToString", "getDefaultSelectionSetForNonModelWithIR", "generateSelectionSet", "operationVariables", "variables", "context", "operationName", "auth", "authModeParams", "headers", "getCustomHeaders", "outerArgsString", "innerArgsString", "selectionSet", "returnTypeModelName", "query", "data", "extensions", "key", "isArrayResult", "flattenedResult", "x", "initialized", "initializeModel", "error", "errors", "handleSingularGraphQlError", "value", "operationTypeMap", "generateCustomOperationsProperty", "client", "config", "operationsType", "getInternals", "modelIntrospection", "operations", "ops", "useContext", "operation", "customOpFactory", "generateCustomMutationsProperty", "generateCustomQueriesProperty", "generateCustomSubscriptionsProperty", "init_cjs_shim", "generateEnumsProperty", "graphqlConfig", "modelIntrospection", "enums", "_", "enumData", "listFactory", "client", "modelIntrospection", "model", "getInternals", "context", "contextSpec", "args", "_list", "name", "query", "generateGraphQLDocument", "variables", "buildGraphQLVariables", "auth", "authModeParams", "headers", "getCustomHeaders", "data", "extensions", "key", "flattenedResult", "value", "flattenItems", "initializeModel", "error", "errors", "handleListGraphQlError", "indexQueryFactory", "client", "modelIntrospection", "model", "indexMeta", "getInternals", "context", "contextSpec", "args", "options", "_indexQuery", "processGraphQlResponse", "modelIntroSchema", "modelName", "result", "selectionSet", "modelInitializer", "data", "extensions", "key", "flattenedResult", "value", "flattenItems", "name", "query", "generateGraphQLDocument", "variables", "buildGraphQLVariables", "auth", "authModeParams", "initializeModel", "headers", "getCustomHeaders", "requestArgs", "response", "error", "errors", "handleListGraphQlError", "getFactory", "client", "modelIntrospection", "model", "operation", "getInternals", "useContext", "contextSpec", "arg", "options", "_get", "context", "name", "query", "generateGraphQLDocument", "variables", "buildGraphQLVariables", "auth", "authModeParams", "headers", "getCustomHeaders", "data", "extensions", "key", "flattenedResult", "flattenItems", "initialized", "initializeModel", "error", "errors", "handleSingularGraphQlError", "subscriptionFactory", "client", "modelIntrospection", "model", "operation", "getInternals", "name", "args", "query", "generateGraphQLDocument", "variables", "buildGraphQLVariables", "auth", "authModeParams", "headers", "getCustomHeaders", "value", "key", "data", "initialized", "initializeModel", "init_cjs_shim", "resolvePKFields", "model", "primaryKeyFieldName", "sortKeyFieldNames", "init_cjs_shim", "findIndexByFields", "needle", "haystack", "keyFields", "searchObject", "fieldName", "k", "observeQueryFactory", "models", "model", "name", "arg", "subscriber", "items", "messageQueue", "receiveMessages", "messages", "onCreateSub", "item", "error", "onUpdateSub", "onDeleteSub", "ingestMessages", "message", "idx", "findIndexByFields", "pkFields", "resolvePKFields", "firstPage", "nextToken", "page", "errors", "_nextToken", "isSynced", "init_cjs_shim", "attributeIsSecondaryIndex", "attr", "getSecondaryIndexesFromSchemaModel", "model", "queryField", "pk", "sk", "generateModelsProperty", "client", "apiGraphQLConfig", "getInternals", "models", "modelIntrospection", "SUBSCRIPTION_OPS", "model", "name", "graphQLOperationsInfo", "key", "operationPrefix", "operation", "listFactory", "subscriptionFactory", "observeQueryFactory", "getFactory", "secondaryIdxs", "getSecondaryIndexesFromSchemaModel", "idx", "indexQueryFactory", "addSchemaToClient", "client", "apiGraphqlConfig", "getInternals", "generateModelsProperty", "generateEnumsProperty", "generateCustomQueriesProperty", "generateCustomMutationsProperty", "generateCustomSubscriptionsProperty", "init_cjs_shim", "init_cjs_shim", "isApiGraphQLConfig", "apiGraphQLConfig", "init_cjs_shim", "isConfigureEventWithResourceConfig", "payload", "generateClient", "params", "client", "__amplify", "__authMode", "__authToken", "__headers", "graphql", "cancel", "isCancelError", "emptyProperty", "apiGraphqlConfig", "isApiGraphQLConfig", "addSchemaToClient", "getInternals", "generateModelsPropertyOnAmplifyConfigure", "clientRef", "Hub", "coreEvent", "isConfigureEventWithResourceConfig", "apiGraphQLConfig", "generateClient", "options", "internalGenerateClient", "Amplify", "DefaultAmplify", "env", "client", "generateClient", "handler", "event", "context", "result", "publish", "error"]
}
