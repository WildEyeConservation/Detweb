{
 "Description": "{\"createdOn\":\"Windows\",\"createdBy\":\"AmplifySandbox\",\"createdWith\":\"1.1.2\",\"stackType\":\"storage-S3\",\"metadata\":{}}",
 "Resources": {
  "outputsBucket30EB72C2": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "HEAD",
        "PUT",
        "POST",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "ExposedHeaders": [
        "x-amz-server-side-encryption",
        "x-amz-request-id",
        "x-amz-id-2",
        "ETag"
       ],
       "MaxAge": 3000
      }
     ]
    },
    "Tags": [
     {
      "Key": "amplify:deployment-type",
      "Value": "sandbox"
     },
     {
      "Key": "amplify:friendly-name",
      "Value": "outputs"
     },
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "created-by",
      "Value": "amplify"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/outputs/Bucket/Resource"
   }
  },
  "outputsBucketPolicy2170A3FD": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "outputsBucket30EB72C2"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "outputsBucket30EB72C2",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "outputsBucket30EB72C2",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "outputsBucket30EB72C2",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "outputsBucket30EB72C2",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/outputs/Bucket/Policy/Resource"
   }
  },
  "outputsBucketAutoDeleteObjectsCustomResource6A44FDEA": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "outputsBucket30EB72C2"
    }
   },
   "DependsOn": [
    "outputsBucketPolicy2170A3FD"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/outputs/Bucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "outputsBucket30EB72C2"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "OUTPUTSBUCKETNAMEParameter8FFA89DE": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/amplify/resource_reference/amplifyvitereacttemplate/phiez-sandbox-1988856b66/OUTPUTS_BUCKET_NAME",
    "Tags": {
     "amplify:deployment-type": "sandbox",
     "created-by": "amplify"
    },
    "Type": "String",
    "Value": {
     "Ref": "outputsBucket30EB72C2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/OUTPUTS_BUCKET_NAMEParameter/Resource"
   }
  },
  "storageAccess472A5D2AC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "outputsBucket30EB72C2",
            "Arn"
           ]
          },
          "/slippymaps/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:ListBucket",
       "Condition": {
        "StringLike": {
         "s3:prefix": [
          "slippymaps/*",
          "slippymaps/"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "outputsBucket30EB72C2",
         "Arn"
        ]
       }
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "outputsBucket30EB72C2",
            "Arn"
           ]
          },
          "/slippymaps/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "storageAccess472A5D2AC",
    "Roles": [
     {
      "Ref": "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionNestedStackfunctionNestedStackResourceA3061A0FOutputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionhandleS3UploadlambdaServiceRole515AE8C4Ref"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/storageAccess4/Resource"
   }
  },
  "storageAccess524979CAB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "outputsBucket30EB72C2",
             "Arn"
            ]
           },
           "/slippymaps/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "outputsBucket30EB72C2",
             "Arn"
            ]
           },
           "/heatmaps/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:ListBucket",
       "Condition": {
        "StringLike": {
         "s3:prefix": [
          "slippymaps/*",
          "slippymaps/",
          "heatmaps/*",
          "heatmaps/"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "outputsBucket30EB72C2",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "storageAccess524979CAB",
    "Roles": [
     {
      "Ref": "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66authNestedStackauthNestedStackResourceB73B2429Outputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66authamplifyAuthauthenticatedUserRole2DDBF981Ref"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/storageAccess5/Resource"
   }
  },
  "storageAccess6EC622D4F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "outputsBucket30EB72C2",
            "Arn"
           ]
          },
          "/heatmaps/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:ListBucket",
       "Condition": {
        "StringLike": {
         "s3:prefix": [
          "heatmaps/*",
          "heatmaps/"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "outputsBucket30EB72C2",
         "Arn"
        ]
       }
      },
      {
       "Action": "s3:DeleteObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "outputsBucket30EB72C2",
            "Arn"
           ]
          },
          "/heatmaps/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "storageAccess6EC622D4F",
    "Roles": [
     {
      "Ref": "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionNestedStackfunctionNestedStackResourceA3061A0FOutputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionprocessImageslambdaServiceRole79B1BA1CRef"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/storageAccess6/Resource"
   }
  },
  "inputsBucketBC59C88F": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "HEAD",
        "PUT",
        "POST",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "ExposedHeaders": [
        "x-amz-server-side-encryption",
        "x-amz-request-id",
        "x-amz-id-2",
        "ETag"
       ],
       "MaxAge": 3000
      }
     ]
    },
    "Tags": [
     {
      "Key": "amplify:deployment-type",
      "Value": "sandbox"
     },
     {
      "Key": "amplify:friendly-name",
      "Value": "inputs"
     },
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "created-by",
      "Value": "amplify"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/inputs/Bucket/Resource"
   }
  },
  "inputsBucketPolicyE2AC1BF2": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "inputsBucketBC59C88F"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "inputsBucketBC59C88F",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "inputsBucketBC59C88F",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "inputsBucketBC59C88F",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "inputsBucketBC59C88F",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/inputs/Bucket/Policy/Resource"
   }
  },
  "inputsBucketAutoDeleteObjectsCustomResource76B7DAFC": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "inputsBucketBC59C88F"
    }
   },
   "DependsOn": [
    "inputsBucketPolicyE2AC1BF2"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/inputs/Bucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "inputsBucketNotificationsBC551A1D": {
   "Type": "Custom::S3BucketNotifications",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "inputsBucketBC59C88F"
    },
    "NotificationConfiguration": {
     "LambdaFunctionConfigurations": [
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "LambdaFunctionArn": {
        "Ref": "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionNestedStackfunctionNestedStackResourceA3061A0FOutputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionhandleS3UploadlambdaC0C3C80AArn"
       }
      }
     ]
    },
    "Managed": true,
    "SkipDestinationValidation": false
   },
   "DependsOn": [
    "inputsBucketAllowBucketNotificationsToamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionhandleS3Uploadlambda67E1CBED39444FA1",
    "inputsBucketPolicyE2AC1BF2"
   ],
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/inputs/Bucket/Notifications/Resource"
   }
  },
  "inputsBucketAllowBucketNotificationsToamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionhandleS3Uploadlambda67E1CBED39444FA1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Ref": "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionNestedStackfunctionNestedStackResourceA3061A0FOutputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionhandleS3UploadlambdaC0C3C80AArn"
    },
    "Principal": "s3.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    },
    "SourceArn": {
     "Fn::GetAtt": [
      "inputsBucketBC59C88F",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/inputs/Bucket/AllowBucketNotificationsToamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionhandleS3Uploadlambda67E1CBED"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "amplify:deployment-type",
      "Value": "sandbox"
     },
     {
      "Key": "created-by",
      "Value": "amplify"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutBucketNotification",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "Roles": [
     {
      "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
    "Code": {
     "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    skipDestinationValidation = props.get('SkipDestinationValidation', 'false').lower() == 'true'\n    stack_id = event['StackId']\n    old = event.get(\"OldResourceProperties\", {}).get(\"NotificationConfiguration\", {})\n    if managed:\n      config = handle_managed(event[\"RequestType\"], notification_configuration)\n    else:\n      config = handle_unmanaged(props[\"BucketName\"], stack_id, event[\"RequestType\"], notification_configuration, old)\n    s3.put_bucket_notification_configuration(Bucket=props[\"BucketName\"], NotificationConfiguration=config, SkipDestinationValidation=skipDestinationValidation)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):\n  def get_id(n):\n    n['Id'] = ''\n    strToHash=json.dumps(n, sort_keys=True).replace('\"Name\": \"prefix\"', '\"Name\": \"Prefix\"').replace('\"Name\": \"suffix\"', '\"Name\": \"Suffix\"')\n    return f\"{stack_id}-{hash(strToHash)}\"\n  def with_id(n):\n    n['Id'] = get_id(n)\n    return n\n\n  external_notifications = {}\n  existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)\n  for t in CONFIGURATION_TYPES:\n    if request_type == 'Update':\n        old_incoming_ids = [get_id(n) for n in old.get(t, [])]\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not get_id(n) in old_incoming_ids]      \n    elif request_type == 'Delete':\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n    elif request_type == 'Create':\n        external_notifications[t] = [n for n in existing_notifications.get(t, [])]\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 300,
    "Tags": [
     {
      "Key": "amplify:deployment-type",
      "Value": "sandbox"
     },
     {
      "Key": "created-by",
      "Value": "amplify"
     }
    ]
   },
   "DependsOn": [
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
   ],
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
   }
  },
  "INPUTSBUCKETNAMEParameter5B1F7516": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/amplify/resource_reference/amplifyvitereacttemplate/phiez-sandbox-1988856b66/INPUTS_BUCKET_NAME",
    "Tags": {
     "amplify:deployment-type": "sandbox",
     "created-by": "amplify"
    },
    "Type": "String",
    "Value": {
     "Ref": "inputsBucketBC59C88F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/INPUTS_BUCKET_NAMEParameter/Resource"
   }
  },
  "storageAccess1095206323": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "inputsBucketBC59C88F",
            "Arn"
           ]
          },
          "/images/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "storageAccess1095206323",
    "Roles": [
     {
      "Ref": "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionNestedStackfunctionNestedStackResourceA3061A0FOutputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionhandleS3UploadlambdaServiceRole515AE8C4Ref"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/storageAccess10/Resource"
   }
  },
  "storageAccess11E714650A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "inputsBucketBC59C88F",
            "Arn"
           ]
          },
          "/images/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:ListBucket",
       "Condition": {
        "StringLike": {
         "s3:prefix": [
          "images/*",
          "images/"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "inputsBucketBC59C88F",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "storageAccess11E714650A",
    "Roles": [
     {
      "Ref": "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionNestedStackfunctionNestedStackResourceA3061A0FOutputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionprocessImageslambdaServiceRole79B1BA1CRef"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/storageAccess11/Resource"
   }
  },
  "storageAccess129A593C0E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "inputsBucketBC59C88F",
            "Arn"
           ]
          },
          "/images/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:ListBucket",
       "Condition": {
        "StringLike": {
         "s3:prefix": [
          "images/*",
          "images/"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "inputsBucketBC59C88F",
         "Arn"
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "inputsBucketBC59C88F",
            "Arn"
           ]
          },
          "/images/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "storageAccess129A593C0E",
    "Roles": [
     {
      "Ref": "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66authNestedStackauthNestedStackResourceB73B2429Outputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66authamplifyAuthauthenticatedUserRole2DDBF981Ref"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/storageAccess12/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12QXY7CMAyEz7LvqflZcQDo866q9gDIJKYybRIUu6BV1LuvskWA9mlm7G9kyVvY7Haw/sC7VNYN1cgnyN8kSq5TtIPBuxyzfEI+THYgNfU5PNwiTRzZ/rzGS56NiIfcaeLQN5jQk1Iq1DPMhtFDfvUfro0jlVh0NiP6k0Moa0qeRTiG2dSTaPQtSZySXeg3/4XXK4f+H9WkeGNH6YBCZi9C2in2hXvv1jE41r8jITqCi6xu2zVsyo8uwlylKSh7gnbRXzcDRLVAAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "amplify-amplifyvitereacttemplate-phiez-sandbox-1988856b66/storage/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-isoe-west-1": {
    "value": "nodejs18.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-gov-east-1": {
    "value": "nodejs18.x"
   },
   "us-gov-west-1": {
    "value": "nodejs18.x"
   },
   "us-iso-east-1": {
    "value": "nodejs18.x"
   },
   "us-iso-west-1": {
    "value": "nodejs18.x"
   },
   "us-isob-east-1": {
    "value": "nodejs18.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionNestedStackfunctionNestedStackResourceA3061A0FOutputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionhandleS3UploadlambdaServiceRole515AE8C4Ref": {
   "Type": "String"
  },
  "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66authNestedStackauthNestedStackResourceB73B2429Outputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66authamplifyAuthauthenticatedUserRole2DDBF981Ref": {
   "Type": "String"
  },
  "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionNestedStackfunctionNestedStackResourceA3061A0FOutputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionprocessImageslambdaServiceRole79B1BA1CRef": {
   "Type": "String"
  },
  "referencetoamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionNestedStackfunctionNestedStackResourceA3061A0FOutputsamplifyamplifyvitereacttemplatephiezsandbox1988856b66functionhandleS3UploadlambdaC0C3C80AArn": {
   "Type": "String"
  }
 },
 "Outputs": {
  "amplifyamplifyvitereacttemplatephiezsandbox1988856b66storageinputsBucketF67DEBA4Ref": {
   "Value": {
    "Ref": "inputsBucketBC59C88F"
   }
  },
  "amplifyamplifyvitereacttemplatephiezsandbox1988856b66storageoutputsBucketE047D631Ref": {
   "Value": {
    "Ref": "outputsBucket30EB72C2"
   }
  }
 }
}