type Project @aws_iam @aws_cognito_user_pools {
  name: String!
  activeUsers(filter: ModelUserFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUserConnection
  users(filter: ModelUserProjectMembershipFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUserProjectMembershipConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type User @aws_iam @aws_cognito_user_pools {
  name: String!
  isAdmin: Boolean
  email: String
  projects(filter: ModelUserProjectMembershipFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUserProjectMembershipConnection
  currentProjectId: String
  currentProject: Project
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type UserProjectMembership @aws_iam @aws_cognito_user_pools {
  userId: String!
  user: User
  projectId: String!
  project: Project
  queueUrl: String
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelProjectConnection @aws_iam @aws_cognito_user_pools {
  items: [Project]!
  nextToken: String
}

input ModelProjectFilterInput {
  name: ModelStringInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelProjectFilterInput]
  or: [ModelProjectFilterInput]
  not: ModelProjectFilterInput
}

type Query {
  getProject(name: String!): Project @aws_iam @aws_cognito_user_pools
  listProjects(name: String, filter: ModelProjectFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelProjectConnection @aws_iam @aws_cognito_user_pools
  getUser(name: String!): User @aws_iam @aws_cognito_user_pools
  listUsers(name: String, filter: ModelUserFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelUserConnection @aws_iam @aws_cognito_user_pools
  getUserProjectMembership(id: ID!): UserProjectMembership @aws_iam @aws_cognito_user_pools
  listUserProjectMemberships(filter: ModelUserProjectMembershipFilterInput, limit: Int, nextToken: String): ModelUserProjectMembershipConnection @aws_iam @aws_cognito_user_pools
}

input ModelProjectConditionInput {
  and: [ModelProjectConditionInput]
  or: [ModelProjectConditionInput]
  not: ModelProjectConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateProjectInput {
  name: String!
}

input UpdateProjectInput {
  name: String!
}

input DeleteProjectInput {
  name: String!
}

type Mutation {
  createProject(input: CreateProjectInput!, condition: ModelProjectConditionInput): Project @aws_iam @aws_cognito_user_pools
  updateProject(input: UpdateProjectInput!, condition: ModelProjectConditionInput): Project @aws_iam @aws_cognito_user_pools
  deleteProject(input: DeleteProjectInput!, condition: ModelProjectConditionInput): Project @aws_iam @aws_cognito_user_pools
  createUser(input: CreateUserInput!, condition: ModelUserConditionInput): User @aws_iam @aws_cognito_user_pools
  updateUser(input: UpdateUserInput!, condition: ModelUserConditionInput): User @aws_iam @aws_cognito_user_pools
  deleteUser(input: DeleteUserInput!, condition: ModelUserConditionInput): User @aws_iam @aws_cognito_user_pools
  createUserProjectMembership(input: CreateUserProjectMembershipInput!, condition: ModelUserProjectMembershipConditionInput): UserProjectMembership @aws_iam @aws_cognito_user_pools
  updateUserProjectMembership(input: UpdateUserProjectMembershipInput!, condition: ModelUserProjectMembershipConditionInput): UserProjectMembership @aws_iam @aws_cognito_user_pools
  deleteUserProjectMembership(input: DeleteUserProjectMembershipInput!, condition: ModelUserProjectMembershipConditionInput): UserProjectMembership @aws_iam @aws_cognito_user_pools
}

input ModelSubscriptionProjectFilterInput {
  name: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionProjectFilterInput]
  or: [ModelSubscriptionProjectFilterInput]
}

type Subscription {
  onCreateProject(filter: ModelSubscriptionProjectFilterInput): Project @aws_subscribe(mutations: ["createProject"]) @aws_iam @aws_cognito_user_pools
  onUpdateProject(filter: ModelSubscriptionProjectFilterInput): Project @aws_subscribe(mutations: ["updateProject"]) @aws_iam @aws_cognito_user_pools
  onDeleteProject(filter: ModelSubscriptionProjectFilterInput): Project @aws_subscribe(mutations: ["deleteProject"]) @aws_iam @aws_cognito_user_pools
  onCreateUser(filter: ModelSubscriptionUserFilterInput): User @aws_subscribe(mutations: ["createUser"]) @aws_iam @aws_cognito_user_pools
  onUpdateUser(filter: ModelSubscriptionUserFilterInput): User @aws_subscribe(mutations: ["updateUser"]) @aws_iam @aws_cognito_user_pools
  onDeleteUser(filter: ModelSubscriptionUserFilterInput): User @aws_subscribe(mutations: ["deleteUser"]) @aws_iam @aws_cognito_user_pools
  onCreateUserProjectMembership(filter: ModelSubscriptionUserProjectMembershipFilterInput): UserProjectMembership @aws_subscribe(mutations: ["createUserProjectMembership"]) @aws_iam @aws_cognito_user_pools
  onUpdateUserProjectMembership(filter: ModelSubscriptionUserProjectMembershipFilterInput): UserProjectMembership @aws_subscribe(mutations: ["updateUserProjectMembership"]) @aws_iam @aws_cognito_user_pools
  onDeleteUserProjectMembership(filter: ModelSubscriptionUserProjectMembershipFilterInput): UserProjectMembership @aws_subscribe(mutations: ["deleteUserProjectMembership"]) @aws_iam @aws_cognito_user_pools
}

type ModelUserConnection @aws_iam @aws_cognito_user_pools {
  items: [User]!
  nextToken: String
}

input ModelUserFilterInput {
  name: ModelStringInput
  isAdmin: ModelBooleanInput
  email: ModelStringInput
  currentProjectId: ModelStringInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelUserFilterInput]
  or: [ModelUserFilterInput]
  not: ModelUserFilterInput
}

input ModelUserConditionInput {
  isAdmin: ModelBooleanInput
  email: ModelStringInput
  currentProjectId: ModelStringInput
  and: [ModelUserConditionInput]
  or: [ModelUserConditionInput]
  not: ModelUserConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateUserInput {
  name: String!
  isAdmin: Boolean
  email: String
  currentProjectId: String
}

input UpdateUserInput {
  name: String!
  isAdmin: Boolean
  email: String
  currentProjectId: String
}

input DeleteUserInput {
  name: String!
}

input ModelSubscriptionUserFilterInput {
  name: ModelSubscriptionStringInput
  isAdmin: ModelSubscriptionBooleanInput
  email: ModelSubscriptionStringInput
  currentProjectId: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionUserFilterInput]
  or: [ModelSubscriptionUserFilterInput]
}

type ModelUserProjectMembershipConnection @aws_iam @aws_cognito_user_pools @aws_api_key {
  items: [UserProjectMembership]!
  nextToken: String
}

input ModelUserProjectMembershipFilterInput {
  userId: ModelStringInput
  projectId: ModelStringInput
  queueUrl: ModelStringInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelUserProjectMembershipFilterInput]
  or: [ModelUserProjectMembershipFilterInput]
  not: ModelUserProjectMembershipFilterInput
}

input ModelUserProjectMembershipConditionInput {
  userId: ModelStringInput
  projectId: ModelStringInput
  queueUrl: ModelStringInput
  and: [ModelUserProjectMembershipConditionInput]
  or: [ModelUserProjectMembershipConditionInput]
  not: ModelUserProjectMembershipConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateUserProjectMembershipInput {
  userId: String!
  projectId: String!
  queueUrl: String
  id: ID
}

input UpdateUserProjectMembershipInput {
  userId: String
  projectId: String
  queueUrl: String
  id: ID!
}

input DeleteUserProjectMembershipInput {
  id: ID!
}

input ModelSubscriptionUserProjectMembershipFilterInput {
  userId: ModelSubscriptionStringInput
  projectId: ModelSubscriptionStringInput
  queueUrl: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionUserProjectMembershipFilterInput]
  or: [ModelSubscriptionUserProjectMembershipFilterInput]
}
